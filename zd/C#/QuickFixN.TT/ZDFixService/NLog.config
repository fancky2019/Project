<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

	<!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
	<variable name="myvar" value="myvalue"/>

	<!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
	<!--异步写日志：大数量情况下同步性能太差,异步每秒最多只能写10000条，采用异步包装器-->
	<!--<targets async="true" >-->
	<targets  >
		<!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

		<target name="AsyncWrapperLogConsole" xsi:type="AsyncWrapper"  overflowAction="Discard" queueLimit="10000" batchSize="200" timeToSleepBetweenBatches="1">
			<target name="logConsole" xsi:type="Console" />
		</target>


		<!-- Write events to a file with the date in the filename.   -->
		<!--<target xsi:type="File" name="logfile" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />-->

		<!--fileName="${basedir}/logs/log.${level}.txt"-->
		<!--<target xsi:type="File" name="infologfile" fileName="${basedir}/logs/${date:yyyy-MM}/${date:yyyy-MM-dd}/${level} - ${shortdate}.log"
    layout="${longdate} ${uppercase:${level}} ${message}"  />-->
		<!--<target xsi:type="File" name="errorlogfile" fileName="${basedir}/logs/${date:yyyy-MM}/Error - ${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}"  />-->


		<!--包含日志类信息：反射获取信息太浪费性能-->
		<!--<target name="errorlogfile" xsi:type="File" 
          fileName="${basedir}/logs/${date:yyyy-MM}/Log - ${shortdate}.log" 
          layout="${longdate}|${level:uppercase=true}|${logger}|${threadid}|${message}|${exception:format=tostring}" 
    />-->





		<!--采用异步包装器（AsyncWrapperLogFile）代替异步，如果用target1将是同步-->
		<!--<target name="AsyncWrapperLogFile" xsi:type="AsyncWrapper"  overflowAction="Discard" queueLimit="10000" batchSize="200" timeToSleepBetweenBatches="1">
      <target name ="target1" xsi:type="File"
       fileName="${basedir}/log/${date:yyyy-MM}/${date:yyyy-MM-dd}/${level} - ${shortdate}.log"
      layout="${longdate} ${uppercase:${level}} ${message}"  keepFileOpen="true" archiveAboveSize="1048576"   />
    </target>-->

		<!--显示类线程信息.archiveAboveSize:单位字节-->
		<target name="AsyncWrapperLogFile" xsi:type="AsyncWrapper"  overflowAction="Discard" queueLimit="10000" batchSize="200" timeToSleepBetweenBatches="1">
			<target name ="target1" xsi:type="File"
					fileName="${basedir}/logs/${date:yyyy-MM}/${date:yyyy-MM-dd}/Log.log"
					layout="${longdate}|${level:uppercase=true}|${logger}|${threadid}|${message}|${exception:format=tostring}"
					keepFileOpen="true"
					archiveAboveSize="104857600"
      />
		</target>

		<!--Skip Microsoft/Quartz logs and so log only own logs-->
		<target xsi:type="Null" name="blackhole" />
	</targets>

	<rules>
		<!-- add your logging rules here -->


		<!--Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "logfile"-->
		<!--<logger name="*" minlevel="Debug"  maxlevel="Warn" writeTo="infologfile" />-->
		<!--<logger name="*" minlevel="Error"  maxlevel="Fatal" writeTo="errorlogfile" />-->
		<!--<logger name="*" minlevel="Debug" writeTo="logConsole" />-->

		<!--Skip Microsoft/Quartz logs and so log only own logs-->
		<!--名字空间Name.Space下所有类的日志信息都写入到blackhole这两个目标里。-->
		<logger name="Name.Space.*" writeTo="blackhole" minlevel="Trace" maxlevel="Info"/>
		<logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
		<logger name="Quartz*" minlevel="Trace" maxlevel="Info" writeTo="blackhole" final="true" />


		<!--包装器的性能远远优于异步、同步-->
		<logger name="*" minlevel="Debug"  maxlevel="Fatal" writeTo="AsyncWrapperLogFile" />
		<!--控制台会损失部分性能-->
		<!--<logger name="*" minlevel="Debug" writeTo="AsyncWrapperLogConsole" />-->



	</rules>
</nlog>
