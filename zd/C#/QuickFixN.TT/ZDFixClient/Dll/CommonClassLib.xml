<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CommonClassLib</name>
    </assembly>
    <members>
        <member name="P:CommonClassLib.AccountInfo.clientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.accountNo">
            <summary>
            资金帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.currencyNo">
            <summary>
            币种
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.available">
            <summary>
            今可用
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.yAvailable">
            <summary>
            昨可用
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.canCashOut">
            <summary>
            今可出
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.money">
            <summary>
            今结存
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.expiredProfit">
            <summary>
            平仓盈亏
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.frozenDeposit">
            <summary>
            冻结资金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.fee">
            <summary>
            手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.deposit">
            <summary>
            保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.keepDeposit">
            <summary>
            维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.inMoney">
            <summary>
            入金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.outMoney">
            <summary>
            出金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.unexpiredProfit">
            <summary>
            未到期平盈
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.todayTotal">
            <summary>
            今权益
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.unaccountProfit">
            <summary>
            未结平盈
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.royalty">
            <summary>
            期权权利金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.contractNo">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.orderNo">
            <summary>
            定单号
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.orderNumber">
            <summary>
            委托数量
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.filledNumber">
            <summary>
            已成交数量
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.filledAdvPrice">
            <summary>
            成交均价
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.buyHoldNumber">
            <summary>
            持买数量
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.buyHoldOpenPrice">
            <summary>
            持买开仓均价
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.buyHoldPrice">
            <summary>
            持买均价
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.saleHoldNumber">
            <summary>
            持卖数量
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.saleHoldOpenPrice">
            <summary>
            持卖开仓均价
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.saleHoldPrice">
            <summary>
            持卖均价
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.isCanceled">
            <summary>
            是否已经撤单（0：没有；1：已撤单）
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.filledTotalFee">
            <summary>
            成交总的手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.credit">
            <summary>
            信任额度
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.MarginLimit">
            <summary>
            孖展上限额度 20150727 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.BorrowValue">
            <summary>
            借货价值 20150727 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.FMortgageMoney">
            <summary>
            按揭价值 20150727 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.T1">
            <summary>
            T1 20160219 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.T2">
            <summary>
            T2 20160219 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.T3">
            <summary>
            T3 20160219 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.TN">
            <summary>
            Tn 20160219 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.tradeLimit">
            <summary>
            交易限额
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.FCrossMax">
            <summary>
            跨市场资金限额（mantis8374）
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.SellFreezenMoney">
            <summary>
            卖空冻结资金（mantis6868）
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.SellInterest">
            <summary>
            卖空利息（mantis6868）
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountInfo.SellNeedAddMargin">
            <summary>
            需补按金（mantis6868）
            </summary>
        </member>
        <member name="T:CommonClassLib.AccountResponseInfo">
            <summary>
            资金查询请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.inMoney">
            <summary>
            入金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.outMoney">
            <summary>
            出金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.todayCanUse">
            <summary>
            今可用
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.todayAmount">
            <summary>
            今结存
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.todayBalance">
            <summary>
            今权益
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.freezenMoney">
            <summary>
            冻结资金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.commission">
            <summary>
            佣金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.margin">
            <summary>
            保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.oldCanUse">
            <summary>
            昨可用
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.oldAmount">
            <summary>
            昨结存
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.oldBalance">
            <summary>
            昨权益
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.floatingProfit">
            <summary>
            浮动盈亏
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.currencyNo">
            <summary>
            币种编号 
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.currencyRate">
            <summary>
            货币与基本的汇率
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.unexpiredProfit">
            <summary>
            未到期平盈
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.unaccountProfit">
            <summary>
            未结平盈
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.keepDeposit">
            <summary>
            维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.royalty">
            <summary>
            期权权利金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.credit">
            <summary>
            信任额度
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.FAddCapital">
            <summary>
            配资资金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.FIniEquity">
            <summary>
            初始资金
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.accountNo">
            <summary>
            资金帐号 1
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.FMortgageMoney">
            <summary>
            按揭价值 20150610 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.MarginLimit">
            <summary>
            孖展上限额度 20150727 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.BorrowValue">
            <summary>
            借货价值 20150727 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.T1">
            <summary>
            T1 20160219 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.T2">
            <summary>
            T2 20160219 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.T3">
            <summary>
            T3 20160219 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.TN">
            <summary>
            Tn 20160219 added for 港股
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.tradeLimit">
            <summary>
            交易限额
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.FCanCashOut">
            <summary>
            可取资金==min(T+0,T+0+T+1,T+0+T+1+T+2)-冻结资金(挂单)
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.FAccruedCrInt">
            <summary>
            月存款利息
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.FAccruedDrInt">
            <summary>
            月欠款利息
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.FCrossMax">
            <summary>
            跨市场资金限额（mantis8374）
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.SellFreezenMoney">
            <summary>
            卖空冻结资金（mantis6868）
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.SellInterest">
            <summary>
            卖空利息（mantis6868）
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.SellNeedAddMargin">
            <summary>
            需补按金（mantis6868）
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.netProfit">
            <summary>
            净盈利 1
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.profitRate">
            <summary>
            盈利率 1
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountResponseInfo.riskRate">
            <summary>
            风险率 1
            </summary>
        </member>
        <member name="T:CommonClassLib.AccountSearchInfo">
            <summary>
            资金查询请求信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountSearchInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountSearchInfo.accountNo">
            <summary>
            资金帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.AccountSearchInfo.tradePwd">
            <summary>
            交易密码
            </summary>
        </member>
        <member name="T:CommonClassLib.ActiveExerciseInfo">
            <summary>
            行权请求信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseInfo.userId">
            <summary>
            行权操作人员ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseInfo.exerciseVol">
            <summary>
            行权数量
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseInfo.exerciseCommision">
            <summary>
            行权手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseInfo.buySale">
            <summary>
            买卖(1:买；2：卖)
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="T:CommonClassLib.ActiveOptionInfo">
            <summary>
            活跃期权类
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveOptionInfo.exchangeNo">
            <summary>
            交易所编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveOptionInfo.commodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveOptionInfo.contractNo">
            <summary>
            合约编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveOptionInfo.tradeVol">
            <summary>
            成交量
            </summary>
        </member>
        <member name="T:CommonClassLib.ApplyStatusInfo">
            <summary>
            在线订阅状态信息
            </summary>
        </member>
        <member name="P:CommonClassLib.ApplyStatusInfo.type">
            <summary>
            订阅类型（1：股票；2：期货）
            </summary>
        </member>
        <member name="P:CommonClassLib.ApplyStatusInfo.code">
            <summary>
            订阅代码(第一位：1：代表行情订阅；2：代表交易订阅)
            股票行情：11:港交所非优惠行情；12：港交所优惠行情；13：美股行情
            期货行情：11：非专业版CME交易所行情；12：非专业版CMECOMEX交易所行情；13：非专业版CMENYMEX交易所行情；14：非专业版CMECBT交易所行情；15：NYBOT+eCBOT交易所行情(ICEUS)；16：ICE交易所行情(ICEEC)；17：Liffe交易所行情(ICEEF)；18：港交所行情；19：专业版CME交易所行情；1A：专业版CMECOMEX交易所行情；1B：专业版CMENYMEX交易所行情；1C：专业版CMECBT交易所行情
            </summary>
        </member>
        <member name="P:CommonClassLib.ApplyStatusInfo.action">
            <summary>
            订阅还是取消订阅（1：订阅；2：取消订阅）
            </summary>
        </member>
        <member name="P:CommonClassLib.ApplyStatusInfo.status">
            <summary>
            订阅状态（0：申请中；1：审核中；2：已生效；3：申请失败）
            </summary>
        </member>
        <member name="P:CommonClassLib.ApplyStatusInfo.datetime">
            <summary>
            申请日期时间（yyyy-MM-dd HH:mm:ss）
            </summary>
        </member>
        <member name="T:CommonClassLib.BankInfo">
            <summary>
            客户银行卡信息
            </summary>
        </member>
        <member name="P:CommonClassLib.BankInfo.clientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.BankInfo.bankId">
            <summary>
            银行代号
            </summary>
        </member>
        <member name="P:CommonClassLib.BankInfo.cardNo">
            <summary>
            银行卡号
            </summary>
        </member>
        <member name="P:CommonClassLib.BankInfo.name">
            <summary>
            持卡人名称
            </summary>
        </member>
        <member name="P:CommonClassLib.BankInfo.id">
            <summary>
            银行卡模版id
            </summary>
        </member>
        <member name="T:CommonClassLib.CancelInfo">
            <summary>
            撤单请求信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.userType">
            <summary>
            用户类型：1：一般用户；2：机构通用户；
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.tradePwd">
            <summary>
            交易密码
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.isSimulation">
            <summary>
            是否模拟用户：1：是；0 or other：不是
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.systemNo">
            <summary>
            系统编号
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.orderNo">
            <summary>
            定单号
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.buySale">
            <summary>
            买还是卖：1=buy 2=sell
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.orderNumber">
            <summary>
            下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.orderPrice">
            <summary>
            下单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.filledNumber">
            <summary>
            已成交数 
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.tradeType">
            <summary>
            交易方式：1=regular 2=FOK 3=IOC
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.priceType">
            <summary>
            价格类型：1=limit order, 2=market order
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.htsType">
            <summary>
            0=regular 1=HTS
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.FIsRiskOrder">
            <summary>
            用户下单类型：C或是空客户下单；D：是del下单 R：强平下单（风控）
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelInfo.Area">
            <summary>
            Tag142 申报地区
            </summary>
        </member>
        <member name="T:CommonClassLib.CancelResponseInfo">
            <summary>
            撤单请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.systemNo">
            <summary>
            系统编号
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.orderNo">
            <summary>
            定单号
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.cancelNo">
            <summary>
            撤单号
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.buySale">
            <summary>
            买还是卖：1=buy 2=sell
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.orderNumber">
            <summary>
            下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.orderPrice">
            <summary>
            下单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.filledNumber">
            <summary>
            已成交数
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.cancelNumber">
            <summary>
            已撤单数
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.tradeType">
            <summary>
            交易方式：1=regular 2=FOK 3=IOC
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.priceType">
            <summary>
            价格类型：1=limit order, 2=market order
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.htsType">
            <summary>
            0=regular 1=HTS
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.cancelDate">
            <summary>
            撤单日期
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.cancelTime">
            <summary>
            撤单时间
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.errorCode">
            <summary>
            错误代码 改为存放订单状态（1：已请求；2：已排队；3：部分成交；4：完全成交；5：已撤余单；6：已撤单；7：指令失败；8：待送出；9：待更改；10：待撤单）
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.FIsRiskOrder">
            <summary>
            用户下单类型：C或是空客户下单；D：是del下单 R：强平下单（风控）
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.exchangeTime">
            <summary>
            交易所返回时间(yyyy-MM-dd hh24:mm:ss) 20151214 add
            </summary>
        </member>
        <member name="P:CommonClassLib.CancelResponseInfo.Area">
            <summary>
            Tag142 申报地区
            </summary>
        </member>
        <member name="T:CommonClassLib.ChangeDateInfo">
            <summary>
            调期请求信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.userId">
            <summary>
            调期操作人员ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.filledNo">
            <summary>
            成交编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.changeNumber">
            <summary>
            调期数
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.changePrice">
            <summary>
            调期价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.changeDate">
            <summary>
            调整后的交割日期(yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.changeCommision">
            <summary>
            调期手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.filledDate">
            <summary>
            成交日期(yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.oldDeliveryDate">
            <summary>
            调整前的交割日期(yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.buySale">
            <summary>
            买卖(1:买；2：卖)
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateInfo.oldMatchPrice">
            <summary>
            原成交价格
            </summary>
        </member>
        <member name="T:CommonClassLib.ChangeDateResponseInfo">
            <summary>
            调期返回信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.userId">
            <summary>
            调期操作人员ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.filledNo">
            <summary>
            成交编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.changeNumber">
            <summary>
            调期数
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.changePrice">
            <summary>
            调期价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.changeDate">
            <summary>
            调整后的交割日期(yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.changeCommision">
            <summary>
            调期手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.filledDate">
            <summary>
            成交日期(yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.oldDeliveryDate">
            <summary>
            调整前的交割日期(yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.buySale">
            <summary>
            买卖(1:买；2：卖)
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.changeNo">
            <summary>
            调期编号（Key值）
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.date">
            <summary>
            调整日期（yyyyMMdd）
            </summary>
        </member>
        <member name="P:CommonClassLib.ChangeDateResponseInfo.time">
            <summary>
            调整时间（hh:mm:ss）
            </summary>
        </member>
        <member name="T:CommonClassLib.ClientAccount">
            <summary>
            资金查询请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.accountNo">
            <summary>
            资金帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.currencyNo">
            <summary>
            币种
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.todayCanUse">
            <summary>
            今可用
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.todayBalance">
            <summary>
            今权益
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.todayCanOut">
            <summary>
            今可出
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.todayAmount">
            <summary>
            今结存
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.frozenMoney">
            <summary>
            冻结资金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.deposit">
            <summary>
            保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.keepDeposit">
            <summary>
            维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.fee">
            <summary>
            佣金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.expiredProfit">
            <summary>
            平仓盈亏
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.yestdayCanOut">
            <summary>
            昨可出
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.netProfit">
            <summary>
            净盈利
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.status">
            <summary>
            状态序列
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.inMoney">
            <summary>
            入金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.outMoney">
            <summary>
            出金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.unExpiredProfit">
            <summary>
            未到期平仓盈亏
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAccount.unAccountProfit">
            <summary>
            未结平仓盈亏
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.associationCode">
            <summary>
            是否关联值（R:匹配账户列表请求，C：绑定账户密码校验，1：账户绑定，2：更换绑定账户，0：不绑定账户，3：创建账户，4：加绑账户）
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.clientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.clientType">
            <summary>
            账户类型
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.clientPwd">
            <summary>
            客户密码
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.memberAccount">
            <summary>
            会员号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.memberPwd">
            <summary>
            会员密码
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.replaceClientNo">
            <summary>
            绑定客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.replaceClientType">
            <summary>
            绑定客户类型
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.replaceClientPwd">
            <summary>
            绑定客户密码
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.name">
            <summary>
            会员姓名
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.mobilePhone">
            <summary>
            会员手机号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientAssociationInfo.postAddress">
            <summary>
            会员邮箱
            </summary>
        </member>
        <member name="T:CommonClassLib.ClientConnectionBase">
            <summary>
            交易服务器连接对象,对象建立后请先调用setVersion方法设置版本号以确定数据解析方式，否则默认以老版本方式解析数据
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.client">
            <summary>
            客户端与服务器的连接对象
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.serverIp">
            <summary>
            服务器Ip地址
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.serverPort">
            <summary>
            服务器端口号
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.localIp">
            <summary>
            本地Ip地址
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.localPort">
            <summary>
            本地端口号
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.isWriteLog">
            <summary>
            是否写log
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.logFileName">
            <summary>
            log文件名称
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.logLevel">
            <summary>
            log级别
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.isCompress">
            <summary>
            是否老版本历史行情数据需要压缩
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.reconnectFlag">
            <summary>
            是否需要重连（默认不重连）
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.reconnectStepTime">
            <summary>
            重连时间间隔（单位毫秒，默认10秒）
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.reconnectStepMinTime">
            <summary>
            最小重连时间间隔（单位毫秒，默认1秒）
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.reconnectStepLongTime">
            <summary>
            10次重连仍然失败后的重连时间间隔（单位毫秒，默认30秒）
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.reconnectedNumber">
            <summary>
            已经重连了的次数，超过一定次数重连时间间隔将延长
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.isOnReconnecting">
            <summary>
            是否正在重连中
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.needReconnectFlag">
            <summary>
            是否还要重连，连上了就不要重连了
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.reconnectBeginDateTime">
            <summary>
            重连开始时间
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.ServerWaitReceivedDataQueue">
            <summary>
            等待处理的从服务器接收到的数据队列
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionBase.isDoing">
            <summary>
            是否正在处理中
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.#ctor(System.String,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            初始化
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.#ctor(System.String,System.Int32,System.Boolean,System.Boolean,System.Int32,System.String)">
            <summary>
            初始化
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.shutdown">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.setSize(System.Int32)">
            <summary>
            必须设置版本号以后再调用
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.setVersion(System.Int32)">
            <summary>
            设置通信版本号，同时根据版本号设置解析对象
            </summary>
            <param name="version"></param>
        </member>
        <member name="P:CommonClassLib.ClientConnectionBase.connectedFlag">
            <summary>
            取得当前连接状态（true：已连接；false：连接断开）
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.ReconnectRightNow">
            <summary>
            立即重连
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.isEndReconnectStepTime">
            <summary>
            是否已经达到重连时间间隔
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.ReConnect">
            <summary>
            重连
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.Connect">
            <summary>
            开始与服务器进行连接
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.ServerConnected">
            <summary>
            服务器连接成功后的处理，要实现自己的逻辑请重载这个方法
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.ServerDisconnected">
            <summary>
            服务器连接断开后的处理，要实现自己的逻辑请重载这个方法
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.doReconnectTask">
            <summary>
            执行可取消的重连任务
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.sendData(System.String)">
            <summary>
            向服务器发送数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.sendData(System.String,System.Boolean,System.Boolean)">
            <summary>
            向服务器发送数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.sendData(CommonClassLib.NetInfo)">
            <summary>
            向服务器发送数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.sendData(CommonClassLib.NetInfo,System.Boolean,System.Boolean)">
            <summary>
            向服务器发送数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.doReceivedData">
            <summary>
            接收数据的处理
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.doOneReceivedData(System.String)">
            <summary>
            处理一条接收到的数据，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.OnReceivedWholeData(HPSocketCS.TcpClient,HPSocketCS.InfoEventData)">
            <summary>
            客户端接收到服务器发送的一个完整的数据
            </summary>
            <param name="sender"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.OnPrepareConnect(HPSocketCS.TcpClient,System.UInt32)">
            <summary>
            准备连接返回事件
            </summary>
            <param name="sender"></param>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.OnConnect(HPSocketCS.TcpClient,System.IntPtr)">
            <summary>
            连接成功返回事件
            </summary>
            <param name="sender"></param>
            <param name="pClient"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.OnSend(HPSocketCS.TcpClient,System.IntPtr,System.Int32)">
            <summary>
            客户端向服务器发送数据成功返回事件，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="sender"></param>
            <param name="pData"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.OnReceive(HPSocketCS.TcpClient,System.IntPtr,System.Int32)">
            <summary>
            客户端接收数据成功返回事件
            </summary>
            <param name="sender"></param>
            <param name="pData"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.OnClose(HPSocketCS.TcpClient)">
            <summary>
            连接断开返回事件
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionBase.OnError(HPSocketCS.TcpClient,HPSocketCS.SocketOperation,System.Int32)">
            <summary>
            连接返回错误消息，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="sender"></param>
            <param name="enOperation"></param>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="T:CommonClassLib.ClientDefaultFeeDeposit">
            <summary>
            客户的缺省手续费、保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FCommodityID">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FExchangeID">
            <summary>
            交易所ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FExchangeNo">
            <summary>
            交易所简称
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FExchangeName">
            <summary>
            交易所名
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FCommodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FMode">
            <summary>
            方式
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FDeposit">
            <summary>
            固定 保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FDepositPer">
            <summary>
            百分比 保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FKeepDeposit">
            <summary>
            固定 维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FKeepDepositPer">
            <summary>
            百分比 维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FsDeposit">
            <summary>
            昨日保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FsKeepDeposit">
            <summary>
            昨日维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FContractNo">
            <summary>
            合约编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FbFee">
            <summary>
            百分币 手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FdFee">
            <summary>
            固定 手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FFrozenDepositPer">
            <summary>
            百分币 冻结资金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FFrozenDeposit">
            <summary>
            固定 冻结资金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDefaultFeeDeposit.FFrozenKeepDeposit">
            <summary>
            冻结维持资金
            </summary>
        </member>
        <member name="T:CommonClassLib.ClientDeposit">
            <summary>
            客户保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FClientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FCommodityID">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FExchangeID">
            <summary>
            交易所ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FExchangeNo">
            <summary>
            交易所简称
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FExchangeName">
            <summary>
            交易所名
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FCommodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FMode">
            <summary>
            方式
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FDeposit">
            <summary>
            保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FDepositPer">
            <summary>
            百分比 保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FKeepDeposit">
            <summary>
            固定 维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FKeepDepositPer">
            <summary>
            百分比 维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FsDeposit">
            <summary>
            昨日保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FsKeepDeposit">
            <summary>
            昨日维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FFrozenDepositPer">
            <summary>
            百分币 冻结资金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FFrozenDeposit">
            <summary>
            固定 冻结资金
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientDeposit.FFrozenKeepDeposit">
            <summary>
            冻结维持资金
            </summary>
        </member>
        <member name="T:CommonClassLib.ClientFee">
            <summary>
            客户手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFee.FClientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFee.FCommodityID">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFee.FExchangeID">
            <summary>
            交易所ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFee.FExchangeNo">
            <summary>
            交易所简称
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFee.FExchangeName">
            <summary>
            交易所名
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFee.FCommodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFee.FMatchWay">
            <summary>
            交易方式
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFee.FbFee">
            <summary>
            百分币 手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFee.FdFee">
            <summary>
            固定 手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFeeInfo.commodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFeeInfo.bFee">
            <summary>
            百分币 手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFeeInfo.dFee">
            <summary>
            固定 手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFeeInfo.currencyNo">
            <summary>
            货币编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientFeeInfo.modifyDate">
            <summary>
            更新日期时间
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientOverTerminal.FClientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientOverTerminal.FMaxTerminal">
            <summary>
            最大设备数
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientOverTerminal.FNowTerminal">
            <summary>
            当前设备数
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientOverTerminal.FMoney">
            <summary>
            付费金额:0:不付费
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientOverTerminal.FExchangeNo">
            <summary>
            交易所
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientSysNo.accountNo">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientSysNo.sysNo">
            <summary>
            系统号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientSysNo.logInCode">
            <summary>
            登陆代号
            </summary>
        </member>
        <member name="T:CommonClassLib.ClientUpper">
            <summary>
            小帐户大帐户绑定信息
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientUpper.FClientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientUpper.FAccountNo">
            <summary>
            资金帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientUpper.FUpperNo">
            <summary>
            上手号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientUpper.FUpperAccountNo">
            <summary>
            上手号交易帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientUpper.FTradePwd">
            <summary>
            上手号交易密码
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientUpper.FUpperNoBak1">
            <summary>
            上手号备用1
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientUpper.FUpperAccountNoBak1">
            <summary>
            上手号交易帐号备用1
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientUpper.FTradePwdBak1">
            <summary>
            上手号交易密码备用1
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientUpper.FUpperNoBak2">
            <summary>
            上手号备用2
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientUpper.FUpperAccountNoBak2">
            <summary>
            上手号交易帐号备用1
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientUpper.FTradePwdBak2">
            <summary>
            上手号交易密码备用1
            </summary>
        </member>
        <member name="T:CommonClassLib.CommandCode">
            <summary>
            定义所有请求代码的类
            </summary>
        </member>
        <member name="M:CommonClassLib.CommandCode.getCommandNameByCode(System.String)">
            <summary>
            根据指令代码取得指令名称
            </summary>
            <param name="commandCode"></param>
            <returns></returns>
        </member>
        <member name="F:CommonClassLib.CommandCode.HEARTBIT">
            <summary>
            测试保持连接
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.LOGIN">
            <summary>
            用户登录请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.UNLOGIN">
            <summary>
            用户退出请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.LOGINSAVE">
            <summary>
            用户登录成功信息保存的指令代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.LOGINRID">
            <summary>
            用户多处登录踢掉前一登陆的代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.LOGINMULTI">
            <summary>
            提示用户前面已经有人在别处登陆过的代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ORDER">
            <summary>
            定单请求代码,及返回信息代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ORDER002">
            <summary>
            强平下单请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ORDER003">
            <summary>
            柜台改单请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ORDER004">
            <summary>
            盈损单下单请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.OrderMarker">
            <summary>
            做市商下单请求代码,及返回信息代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ORDERSTATUS">
            <summary>
            定单状态请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ORDERSEARCH">
            <summary>
            定单查询请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.MODIFY">
            <summary>
            客户端改单请求代码,及返回信息代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CHANGEDATE">
            <summary>
            调期请求代码,及返回信息代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CHANGELIST">
            <summary>
            调期明细列表请求代码,及返回信息代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CANCEL">
            <summary>
            撤单请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CANCEL002">
            <summary>
            强平服务器发送撤单请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CANCELCAST">
            <summary>
            撤单广播返回信息代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.FILLEDCAST">
            <summary>
            成交广播返回信息代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.FILLEDSEARCH">
            <summary>
            成交查询请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.OPENSEARCH">
            <summary>
            持仓查询请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.OPENDETAIL">
            <summary>
            持仓明细查询请求代码（包括昨仓和今仓的分笔持仓明细）
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.YHOLDSEARCH">
            <summary>
             昨日持仓请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.HOLDSTATUS">
            <summary>
            持仓状态请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ACCOUNTSEARCH">
            <summary>
            账户资金查询请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.USERACCOUNTINFOLIST">
            <summary>
            用户信息取得请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SYSTEMNOGET">
            <summary>
            系统编号取得请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETTCONTRACT">
            <summary>
            用户请求所有可用的合约
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETEXCHANGE">
            <summary>
            用户请求所有可用的交易所信息
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETDEFEEDEPO">
            <summary>
            请求读用户缺省的手续费、保证金
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETTDFEE">
            <summary>
            请求读用户交易手续费
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETTDDEPO">
            <summary>
            请求用户交易保证金
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CLIENTUPPER">
            <summary>
            请求客户上手信息
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.TESTINFO">
            <summary>
            请求客户上手信息
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETSYSNO">
            <summary>
            请求客户的最大系统号
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.MARKET01">
            <summary>
            请求行情
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.MODIFYPW">
            <summary>
            修改用户密码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.FILLEDINFO">
            <summary>
            成交情况
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.WAITINFO">
            <summary>
            排队情况
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SETTLEPRICE">
            <summary>
            上日结算价
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.TCASH">
            <summary>
            出入金
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.EnFrozenLogin">
            <summary>
            冻结账户
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.UnFrozenLogin">
            <summary>
            解冻账户
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.delOrder">
            <summary>
            del下单
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GuitaiPws">
            <summary>
            柜台生成新的密码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CURRENCYLIST">
            <summary>
            币种信息列表请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.FROZENUSER">
            <summary>
            柜台冻结客户不让继续交易
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.UNFROZENUSER">
            <summary>
            柜台解冻客户
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.FROZENUSERMONEY">
            <summary>
            柜台冻结客户部分资金
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.UNFROZENUSERMONEY">
            <summary>
            柜台解冻客户被冻结的资金
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETDELIVERYDATE">
            <summary>
            请求当天的LME合约的交割日
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.UPDATESTATUS">
            <summary>
            更新定单状态的请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETFILLEDNO">
            <summary>
            请求生成成交编号
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SETYINGSUN">
            <summary>
            止损止盈设置请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.DELYINGSUN">
            <summary>
            止损止盈设置删除请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETYINGSUNLIST">
            <summary>
            止损止盈设置列表数据取得请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.LOGINYINGSUN">
            <summary>
            前置登录止损止盈服务器的请求，将前置的ID放到NetInfo的accountNo中发送
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SENDMSG">
            <summary>
            发送消息
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETVERSION">
            <summary>
            取得最新版本号
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETVERSIONCOMU">
            <summary>
            取得最新底层通信版本号
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETSTRATEGY">
            <summary>
            取得现有策略列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GETSTRATEGYDETAIL">
            <summary>
            取得现有策略明细列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ReportDaily">
            <summary>
            请求客户历史成交数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ReportSettleDaily">
            <summary>
            请求客户日交易结算报表数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ReportMonthly">
            <summary>
            请求客户月交易结算报表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetMoneyApplyList">
            <summary>
            请求客户出入金申请数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.MoneyApply">
            <summary>
            客户出入金申请
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetBankInfoList">
            <summary>
            请求客户银行卡数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SaveBankInfo">
            <summary>
            请求保存客户银行卡模版数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.DelBankInfo">
            <summary>
            请求删除客户银行卡模版数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetGoodsApplyList">
            <summary>
            请求客户提存货申请数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GoodsApply">
            <summary>
            客户提存货申请
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetConditionList">
            <summary>
            请求客户条件单设置数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ConditionSet">
            <summary>
            客户条件单设置请求（有条件单编号是修改，没有是新增）
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ConditionDel">
            <summary>
            客户条件单设置删除
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.UpdateStrategyHold">
            <summary>
            更新策略持仓
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SearchStrategyHold">
            <summary>
            检索策略持仓
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetTradeTime">
            <summary>
            取得当前交易日的开盘和收盘时间
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetSettlePrice">
            <summary>
            取得最新的昨结算价
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SearchGuaDan">
            <summary>
            检索挂单数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SearchHoldTotal">
            <summary>
            检索持仓合计数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SearchHistoryAccount">
            <summary>
            检索历史结算后资金数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CMEMarketRight">
            <summary>
            客户端请求取得CME行情的权限
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.OptionExercise">
            <summary>
            期权行权
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.BALCANCEL">
            <summary>
            差额被取消
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.LOGINHK">
            <summary>
            股票用户登录请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetExchangeStock">
            <summary>
            取得股票交易所列表数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetContractStock">
            <summary>
            取得股票合约列表数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.UpdateContractStock">
            <summary>
            取得盘中更新的股票合约数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.UpdateContractFuture">
            <summary>
            盘中实时更新期货合约数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetOrderListStock">
            <summary>
            取得股票委托列表数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetFilledListStock">
            <summary>
            取得股票成交列表数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetHoldListStock">
            <summary>
            取得股票持仓列表数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetAccountListStock">
            <summary>
            取得股票资金列表数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetContractStockUpperTick">
            <summary>
            取得股票合约最小变动单位列表数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.OrderStockHK">
            <summary>
            港股下单及返回指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.OrderStockHK02">
            <summary>
            股票柜台强平及返回指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.OrderStockHK03">
            <summary>
            股票柜台下单及返回指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SystemNoStockHK">
            <summary>
            港股系统号返回指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ModifyStockHK">
            <summary>
            港股改单及返回指令
            </summary> 
        </member>
        <member name="F:CommonClassLib.CommandCode.CancelStockHK">
            <summary>
            港股撤单及返回指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CancelStockHKResponse">
            <summary>
            柜台股票撤单返回指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.FilledStockHK">
            <summary>
            港股成交返回指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.AccountStockHK">
            <summary>
            港股最新资金返回指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.StatusStockHK">
            <summary>
            港股最新订单状态返回指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.HoldStockHK">
            <summary>
            港股最新持仓返回指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.UpdateClient">
            <summary>
            更新客户端版本指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.TransferMoney">
            <summary>
            股票期货之间资金调拨指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetLoginHistoryList">
            <summary>
            取得用户上次登录和同时在线登录的Ip地址列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.LogException">
            <summary>
            记录异常log
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetServerInfoList">
            <summary>
            取得服务器信息列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetMarketFilledInfoList">
            <summary>
            取得合约行情最新成交信息列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SearchMSg">
            <summary>
            查询消息
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetPlateList">
            <summary>
            取得期货板块数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetPlateListStockHK">
            <summary>
            取得港股板块数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetPlateListStockAM">
            <summary>
            取得港美股板块数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetPlateListStockCN">
            <summary>
            取得国内股票板块数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetActiveOptionList">
            <summary>
            取得活跃期权数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetStrategyList">
            <summary>
            取得策略数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetStrategyDetailList">
            <summary>
            取得策略明细数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetStrategyOrderSeqList">
            <summary>
            取得策略单明细下单顺序数据列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.setStrategy">
            <summary>
            设置策略
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.setStrategyDetail">
            <summary>
            设置策略明细
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.delStrategy">
            <summary>
            删除策略
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CheckStrategyOrder">
            <summary>
            校对策略订单数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.StrategyOrderFillLeg">
            <summary>
            策略订单补腿请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.StrategyTriggerInfo">
            <summary>
            策略触发消息返回
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetCommondityInfoList">
            <summary>
            取得商品信息列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetUserCommondityFeeList">
            <summary>
            取得用户商品跳点盈利信息列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetStockHKBrokerList">
            <summary>
            取得港股经纪商信息列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetMainContractList">
            <summary>
            取得期货主力合约信息列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.AskMarketBrokerList">
            <summary>
            请求港股行情经纪商牌号列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.AskMarketStock">
            <summary>
            订阅股票行情权限请求指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.AskMarketFuture">
            <summary>
            订阅期货行情权限请求指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CancelMarketStock">
            <summary>
            取消订阅股票行情权限请求指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CancelMarketFuture">
            <summary>
            取消订阅期货行情权限请求指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetMarketStockList">
            <summary>
            订阅股票行情权限进度查询指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetMarketFutureList">
            <summary>
            订阅期货行情权限进度查询指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.BTBConfirm">
            <summary>
            比特币下单协议确认指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetExchangeTime">
            <summary>
            取得交易所的开盘和收盘时间  2016-12-05
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetCommonTime">
            <summary>
            取产品的开收盘时间
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.getSettlementInfo">
            <summary>
            取得结算单数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.getSettlementConfirm">
            <summary>
            取得结算确认信息
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CreateAccount">
            <summary>
            开户指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.UpdateClientContractData">
            <summary>
            盘中实时更新指定用户的合约数据（更新股票的持仓限额）
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ReqContractData">
            <summary>
            请求指定合约数据
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetVerifyQuestionList">
            <summary>
            认证问题列表数据请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SafeVerify">
            <summary>
            安全认证请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SetVerifyQA">
            <summary>
            密保问题答案设置请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ReqVerifyCode">
            <summary>
            手机验证码发送请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SendMail">
            <summary>
            发送邮件请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.OverTeminal">
            <summary>
            行情多终端登录请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.REQ_PUBLIC_KEY">
            <summary>
            请求公钥
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SEND_KEY">
            <summary>
            返回公钥
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.REPLY_SEND_KEY">
            <summary>
            公钥收到应答
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ReqNoSelfFillList">
            <summary>
            请求不需要自成交验证的交易所列表（股票）
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SETTLE_SPAN">
            <summary>
            柜台结算通知span服务器进行计算的指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ReqStockMarketInfo">
            <summary>
            获取股票行情订阅请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.PWDNOCHANGE">
            <summary>
            三个月不改密码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.RequestServerList">
            <summary>
            下级负载请求列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ResponseServerList">
            <summary>
            主负载回复列表
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ChangeFillMail">
            <summary>
            成交邮件状态转换
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.AssignMatch">
            <summary>
            调期指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetSubClientByMain">
            <summary>
            根据主账户获得子账户
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ToTalFillInfo">
            <summary>
            成交总结
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ClientAssociation">
            <summary>
            账户关联
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.LOGINM">
            <summary>
            一帐户登录请求代码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ModifyPW">
            <summary>
            修改一账户密码
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.IPORequest">
            <summary>
            ipo请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.IPOCancelRequest">
            <summary>
            ipo取消请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.IPOBaseInfoRequest">
            <summary>
            IPO基础信息请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.SubToosLogin">
            <summary>
            国内股票下单及返回指令
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.TransferLogin">
            <summary>
            调拨登录请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.FundTransfer">
            <summary>
            资金调拨请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.TransferInCash">
            <summary>
            调拨入金成功通知
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetFeeList">
            <summary>
            终端期货客户手续费列表请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.GetFeeStockList">
            <summary>
            终端股票客户手续费列表请求
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ModifyTps">
            <summary>
            柜台修改tps
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.ReqTps">
            <summary>
            API查询tps
            </summary>
        </member>
        <member name="F:CommonClassLib.CommandCode.CloseConnection">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="T:CommonClassLib.CommodityInfo">
            <summary>
            商品信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityInfo.FExchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityInfo.FCommodityNo">
            <summary>
            商品代码
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityInfo.FRecommend">
            <summary>
            推荐度
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityInfo.FDotProfit">
            <summary>
            跳点盈利
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityInfo.FLeverage">
            <summary>
            杠杠倍数
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityInfo.FFilledTotal">
            <summary>
            日成交量
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityInfo.FSize">
            <summary>
            合约大小
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityInfo.FDipositMoney">
            <summary>
            保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityInfo.FDipositMoneyKeep">
            <summary>
            维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityInfo.FFuturesType">
            <summary>
            期货类型
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityInfo.FDotProfitDefault">
            <summary>
            默认跳点盈利（内部使用，不作为通信数据）
            </summary>
        </member>
        <member name="T:CommonClassLib.CommoditySummer">
            <summary>
            产品开收盘时间
            </summary>
        </member>
        <member name="P:CommonClassLib.CommoditySummer.FCrossTrade">
            <summary>
            是否跨日
            </summary>
        </member>
        <member name="P:CommonClassLib.CommoditySummer.FStage">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:CommonClassLib.CommoditySummer.FSummer">
            <summary>
            2冬令 1夏令
            </summary>
        </member>
        <member name="P:CommonClassLib.CommoditySummer.FOpendate">
            <summary>
            产品开市时间
            </summary>
        </member>
        <member name="P:CommonClassLib.CommoditySummer.FClosingdate">
            <summary>
            产品收市时间
            </summary>
        </member>
        <member name="P:CommonClassLib.CommoditySummer.FCommodityNo">
            <summary>
            产品代码
            </summary>
        </member>
        <member name="P:CommonClassLib.CommoditySummer.ComName">
            <summary>
            产品名称
            </summary>
        </member>
        <member name="P:CommonClassLib.CommoditySummer.FExchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.CommoditySummer.ExName">
            <summary>
            交易所名称
            </summary>
        </member>
        <member name="T:CommonClassLib.CommodityTradeTimeInfo">
            <summary>
            商品交易时间管理类
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.commodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.expireDate">
            <summary>
            失效时间
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.stage">
            <summary>
            交易阶段
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.summerType">
            <summary>
            冬夏令区分
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.open">
            <summary>
            开盘时间
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.close">
            <summary>
            收盘时间
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.closeUncalc">
            <summary>
            收盘时间(未加24)
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.crossday">
            <summary>
            跨日数
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.isNextDay">
            <summary>
            是否交易日在次日
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.exchangeNo">
            <summary>
            交易所编号
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.isTradeDay">
            <summary>
            交易日在当前时间段位置："":不在该时间段；y:在该时间段开始时间的日期；f:在该时间段的结束时间的日期
            </summary>
        </member>
        <member name="P:CommonClassLib.CommodityTradeTimeInfo.TradingSection">
            <summary>交易时段</summary>
        </member>
        <member name="T:CommonClassLib.CommonFunction">
            <summary>
            公用函数类
            </summary>
        </member>
        <member name="F:CommonClassLib.CommonFunction.ICrypto">
            <summary>
            密钥
            </summary>
        </member>
        <member name="M:CommonClassLib.CommonFunction.SendCallBack(System.IAsyncResult)">
            <summary>
            发送完数据后的处理工作
            </summary>
            <param name="iar"></param>
        </member>
        <member name="M:CommonClassLib.CommonFunction.getNumberForLength(System.String,System.Int32)">
            <summary>
            取得数字的指定长度的字符串，不足的前面补0
            </summary>
            <param name="str">字符串</param>
            <param name="len">指定长度</param>
            <returns>取得数字的指定长度的字符串，不足的前面补0</returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.saveOperationToFile(System.String,System.String)">
            <summary>
            将指定内容写入到指定的文件中
            </summary>
            <param name="fileName"></param>
            <param name="Input"></param>
            
        </member>
        <member name="M:CommonClassLib.CommonFunction.IniReadValue(System.String,System.String,System.String,System.Int32)">
            <summary>
            读Ini文件中较长字段
            </summary>
            <param name="Section">Ini文件中的[Section]</param>
            <param name="Key">键</param>
            <param name="filePath">Ini文件路径</param>
            <param name="length">读取字段长度，默认1024</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.FileExists(System.String)">
            <summary>
            判断文件是否存在
            </summary>
            <param name="PathName"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.initClassExchange">
            <summary>
            初始化类型转换
            </summary>
        </member>
        <member name="M:CommonClassLib.CommonFunction.ObjectToString(CommonClassLib.NetParent)">
            <summary>
            把实体类转成字符串
            </summary>
            <param name="ob"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.ObjectListToString(System.Collections.Generic.List{CommonClassLib.NetParent})">
            <summary>
            把实体类的List转成字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.ObjectListFromString``1(System.String,System.String)">
            <summary>
            从字符串中读实体的list
            </summary>
            <typeparam name="T"></typeparam>
            <param name="propInput"></param>
            <param name="inPut"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.EncryptDES(System.String)">
            <summary>
            DES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥,要求为8位</param>
            <returns>加密成功返回加密后的字符串，失败返回源串</returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.DecryptDES(System.String)">
            <summary>
            DES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串，失败返源串</returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.ConfirmFileAndModify(System.String)">
            <summary>
            判断文件是否存在，不存在就读缺省的文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.nvl(System.String)">
            <summary>
            取得字符串
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.isNull(System.String)">
            <summary>
            判断字符串是否为空
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.ChinaRound(System.Decimal,System.Int32)">
            <summary>
            按指定精度四舍五入数字
            </summary>
            <param name="value"></param>
            <param name="decimals"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.getFormatMoney_DotLen(System.String,System.Int32)">
            <summary>
            金额数据格式化成指定位数的小数
            </summary>
            <param name="moneyStr">金额</param>
            <param name="dotLen">指定的小数位数</param>
            <returns>指定位数的小数的金额</returns>
        </member>
        <member name="F:CommonClassLib.CommonFunction.MARKET_HIDE_PRICE_FLAG">
            <summary>
            行情隐藏报价的标志
            </summary>
        </member>
        <member name="M:CommonClassLib.CommonFunction.updateStockInfoByMarketInfo(CommonClassLib.MarketInfoDisplay,CommonClassLib.MarketInfo,System.Boolean)">
            <summary>
            根据接收到的行情数据更新行情显示数据
            </summary>
            <param name="stockInfo"></param>
            <param name="marketInfo"></param>
        </member>
        <member name="M:CommonClassLib.CommonFunction.getFloat(System.String)">
            <summary>
            将String转成float
            </summary>
            <param name="value">字符串</param>
            <returns>数值</returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.getFileContent(System.String)">
            <summary>
            取得文本文件的内容，返回字符串数组，每个字符串代表一行数据
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.getIniFileContentToDic(System.String,System.Boolean)">
            <summary>
            取得配置文件的内容放到数据字典中
            </summary>
            <param name="fileName"></param>
            <param name="needDecrypt">是否需要解密</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.getIniFileContent(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            取得指定编码格式的ini配置文件的内容保存到数据字典中返回
            </summary>
            <param name="fileName"></param>
            <param name="needDecrypt">是否需要解密</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.getFileContent_UTF8(System.String)">
            <summary>
            取得utf8格式文件的内容以字符串数组返回，每行数据一个字符串，读取文件失败时抛出异常
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.getFileContent_GB2312(System.String)">
            <summary>
            取得GB2312格式文件的内容以字符串数组返回，每行数据一个字符串，读取文件失败时抛出异常
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.updateDictionaryValue(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}},System.Boolean)">
            <summary>
            更新字典中的值
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <param name="value"></param>
            <param name="dic"></param>
            <param name="addOrReplaceFlag">key不存在时是否添加此项</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.changeDictionaryToListString(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            取得存放ini文件内容的dictionary的内容以字符串列表返回以便保存到文件，每行数据一个字符串
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.saveFileContent_UTF8(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            utf8格式保存文件的内容，文件保存失败时抛出异常
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.saveFileContent_GB2312(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            GB2312格式保存文件的内容，文件保存失败时抛出异常
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.saveFileContent(System.String,System.Collections.Generic.List{System.String})">
             <summary>
            保存文本文件的内容，文件保存失败时抛出异常
             </summary>
             <param name="fileName"></param>
             <returns></returns>
        </member>
        <member name="M:CommonClassLib.CommonFunction.getIniValueFromDic(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            根据section和key从数据字典中取值
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:CommonClassLib.ConditionDelInfo">
            <summary>
            条件单删除请求信息
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionDelInfo.conditionNo">
            <summary>
            条件单编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionDelInfo.frontId">
            <summary>
            前置机ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionDelInfo.status">
            <summary>
            状态：2：已触发， 4：已取消
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionDelInfo.FSubClientNo">
            <summary>
            分账户
            </summary>
        </member>
        <member name="M:CommonClassLib.ConditionDelInfo.MyReadString(System.String)">
            <summary>
            将一段格式化信息转化为结构
            </summary>
            <param name="temp">格式字符串</param>
        </member>
        <member name="M:CommonClassLib.ConditionDelInfo.MyPropToString">
            <summary>
            获取格式化字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonClassLib.ConditionReqInfo">
            <summary>
            条件单设置请求信息
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.yingsunNo">
            <summary>
            止损止盈编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.userId">
            <summary>
            设置人ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.status">
            <summary>
            盈损状态：0：已请求；1：未触发；2：已触发；3：已撤销；4：已部分成交；5：已完全成交；6：已清除；7：已失效；8：平仓指令成功；9：平仓指令失败
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.localNo">
            <summary>
            盈损本地号：用于止损止盈编号生成前找到这条数据
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.contractNo">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.buySale">
            <summary>
            盈损持买持卖（针对持买还是持买数据而设置的）：1：持买；2：持卖
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.stopLossPrice">
            <summary>
            止损触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.stopProfitPrice">
            <summary>
            平仓触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.triggerType">
            <summary>
            盈损触发类型：1：按最新价触发；2：按买价触发；3：按卖价触发
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.stopLossDot">
            <summary>
            止损超价点数
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.stopProfitDot">
            <summary>
            平仓超价点数
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.orderQuantity">
            <summary>
            盈损触发后下单数：有足够持仓数才下单
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.frontId">
            <summary>
            前置机ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.isPermanent">
            <summary>
            盈损下单是否永久有效（0：仅当前交易日有效；1：永久有效；2：IOC）
            TODO: IOC暂不支持
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.orderType">
            <summary>
            盈损下单类型（1：限价单；2：市价单）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.stopLossOrderPrice">
            <summary>
            止损触发后下单的价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.stopProfitOrderPrice">
            <summary>
            平仓触发后下单的价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.closeFlag">
            <summary>
            盈损平仓标志（0：持仓不足时清除；1：持仓不足时按当前持仓数平仓；2：触发时按委托数量下单）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjSequence">
            <summary>
            条件单编号（服务器端生成的key）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjLocalNo">
            <summary>
            条件单本地号（客户端生成的key）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjStatus">
            <summary>
            条件单状态（0：已请求；1:未触发；2：已触发；3：设置失败；4：已删除；5：下单成功；6：下单失败）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjTriggerMethod">
            <summary>
            条件单触发方式（1：最新价；2：对盘价；3：挂单价）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjTriggerCompare">
            <summary>
            条件单触发条件（1：大于等于；2：小于等于）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjTriggerPrice">
            <summary>
            条件单触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjOrderDirect">
            <summary>
            条件单触发后下单时买卖方向（1：买；2：卖）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjOrderType">
            <summary>
            条件单触发后下单时下单类型:1=限价单, 2=市价单，3=限价止损（stop to limit），4=市价止损（stop to market）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjOrderPrice">
            <summary>
            条件单触发后下单时委托价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjOrderQuentity">
            <summary>
            条件单触发后下单时委托数量
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjOrderValidate">
            <summary>
            条件单触发后下单时有效日期（1：当日有效；2：永久有效）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.traceFlag">
            <summary>
            追价止盈损标志（0：不追价止盈损；1：追价止盈损）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.openPrice">
            <summary>
            开仓价（追价止盈损时计算基准价格，不一定是持仓的开仓均价）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tracePriceDiff">
            <summary>
            追踪回撤价差（最小价格变动值的整数倍）
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjTriggerCondition">
            <summary>
            触发条件，1：价格；2：时间；3：时间和价格；
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjTriggerTime">
            <summary>
            时间条件单的触发时间(yyyy-MM-dd HH:mm:ss)
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjAcceptTime">
            <summary>
            时间条件单的提交时间
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.tjRealTriggerTime">
            <summary>
            时间条件单的实际触发时间
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.subClientNo">
            <summary>
            分账户
            </summary>
        </member>
        <member name="P:CommonClassLib.ConditionReqInfo.Area">
            <summary>
            Tag142 申报地区
            </summary>
        </member>
        <member name="P:CommonClassLib.ConfirmMessageInfo.MessageID">
            <summary>消息ID</summary>
        </member>
        <member name="T:CommonClassLib.Connection">
            <summary>
            网络连接通信类
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.serverIP">
            <summary>
            获取或设置服务器IP地址
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.serverPort">
            <summary>
            获取或设置服务器端口
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.conn">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.listenSocket">
            <summary>
            监听连接对象
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.stopFlag">
            <summary>
            是否停止收发数据（true：停止收发；false：可以收发）
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.isSocketBroken">
            <summary>
            是否连接已断开(true:已断开；false：已连接)
            </summary>
        </member>
        <member name="E:CommonClassLib.Connection.infoEvent">
            <summary>
            抛出接收到的数据的事件
            </summary>
        </member>
        <member name="E:CommonClassLib.Connection.exceptionEvent">
            <summary>
            抛出异常处理的事件
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.canReconnectNum">
            <summary>
            可以重连的次数，默认不重连
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.ReconnectedNum">
            <summary>
            已经重连的次数
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.SUCCESS_CONNECT">
            <summary>
            连接成功编码
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.EXCEPTION_CONNECT">
            <summary>
            连接异常编码
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.EXCEPTION_RECEIVE">
            <summary>
            接收异常编码
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.EXCEPTION_SEND">
            <summary>
            发送异常编码
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.GOOD_PARSER_OFFSET">
            <summary>
            数据内容起始位置
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.exceptionMsgLog">
            <summary>
            写异常log的对象
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.read">
            <summary>
            最新接收到的数据
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.write">
            <summary>
            最新发送的数据
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.receiveDataTask">
            <summary>
            接收数据的任务
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.lisenerTask">
             <summary>
            监听连接的任务
             </summary>
        </member>
        <member name="F:CommonClassLib.Connection.DataBeginChar">
            <summary>
            数据开始标志
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.DataEndChar">
            <summary>
            数据结束标志
            </summary>
        </member>
        <member name="F:CommonClassLib.Connection.totalReadByte">
            <summary>
            存放不完整的数据
            </summary>
        </member>
        <member name="M:CommonClassLib.Connection.#ctor(System.String,System.Int32,CommonClassLib.WriteLog)">
            <summary>
            构造函数
            </summary>
            <param name="serverIp"></param>
            <param name="serverPort"></param>
            <param name="errorLog"></param>
        </member>
        <member name="M:CommonClassLib.Connection.#ctor(System.String,System.Int32,System.Int32,System.Int32,CommonClassLib.WriteLog)">
            <summary>
            构造函数
            </summary>
            <param name="serverIp"></param>
            <param name="serverPort"></param>
            <param name="errorLog"></param>
        </member>
        <member name="M:CommonClassLib.Connection.connect">
            <summary>
            建立连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Connection.onConnectSuccess">
            <summary>
            连接成功的处理
            </summary>
        </member>
        <member name="M:CommonClassLib.Connection.onConnectException(System.String,System.String)">
            <summary>
            连接出现异常的处理
            </summary>
        </member>
        <member name="M:CommonClassLib.Connection.onReceiveException(System.String,System.String)">
            <summary>
            接收数据出现异常的处理
            </summary>
        </member>
        <member name="M:CommonClassLib.Connection.onSendException(System.String,System.String)">
            <summary>
            发送数据出现异常的处理
            </summary>
        </member>
        <member name="M:CommonClassLib.Connection.lisenter">
            <summary>
            建立连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Connection.ClientSocket_infoEvent(CommonClassLib.Connection,CommonClassLib.NetInfoEventHandler)">
            <summary>
            接收到客户端一条数据的处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CommonClassLib.Connection.ClientSocket_ExceptionEvent(CommonClassLib.Connection,CommonClassLib.ExceptionEventHandler)">
            <summary>
            接收到客户端异常的处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CommonClassLib.Connection.disconnect">
            <summary>
            断开连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Connection.syncReceive(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            同步接收数据（后台任务处理）
            </summary>
            <param name="socket"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Connection.do_OneReceiveData(System.String,CommonClassLib.Connection)">
            <summary>
            处理接收到的完整对象数据
            </summary>
            <param name="inPut"></param>
        </member>
        <member name="M:CommonClassLib.Connection.do_OneReceiveClientData(System.String,CommonClassLib.Connection)">
            <summary>
            处理接收到客户端请求的完整对象数据
            </summary>
            <param name="inPut"></param>
        </member>
        <member name="M:CommonClassLib.Connection.analyzeData(System.Int32,CommonClassLib.Connection)">
            <summary>
            解析当前接收的数据块，并将完整的数据返回（没有完整数据返回空）
            </summary>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Connection.addByteToTotal(System.Byte[])">
            <summary>
            增加一个新读取的字节数组数据到总的字节数组数据中
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:CommonClassLib.Connection.sendNetInfo(CommonClassLib.NetInfo)">
            <summary>
            发送netinfo数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonClassLib.Connection.sendMsg(System.Byte[])">
            <summary>
            发送数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:CommonClassLib.ContractTransfer.CodeTransferInfo">
            <summary>
            合约代码对照信息类
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CodeTransferInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CodeTransferInfo.zdCode">
            <summary>
            直达自定义的合约代码=商品编号+合约编号
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CodeTransferInfo.zdCommodityNo">
            <summary>
            直达自定义的商品编号
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CodeTransferInfo.zdContractNo">
            <summary>
            直达自定义的合约编号
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CodeTransferInfo.upperCode">
            <summary>
            上手交易所或者中间商的合约代码=商品编号+合约编号
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CodeTransferInfo.upperCommodityNo">
            <summary>
            上手交易所或者中间商的商品编号
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CodeTransferInfo.upperContractNo">
            <summary>
            上手交易所或者中间商的合约编号
            </summary>
        </member>
        <member name="T:CommonClassLib.ContractTransfer.CommodityTransferInfo">
            <summary>
            商品对照信息类
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CommodityTransferInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CommodityTransferInfo.zdCommodityNo">
            <summary>
            直达自定义的商品编号
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CommodityTransferInfo.upperCommodityNo">
            <summary>
            上手交易所或者中间商的商品编号
            </summary>
        </member>
        <member name="T:CommonClassLib.ContractTransfer.CodeTransfer_RJO">
            <summary>
            RJO商品对照信息类
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CodeTransfer_RJO.commodityTransferInfoList">
            <summary>
            商品编号对照信息列表
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.CodeTransfer_RJO.contractTransferInfoList">
            <summary>
            合约编号对照信息列表
            </summary>
        </member>
        <member name="M:CommonClassLib.ContractTransfer.CodeTransfer_RJO.#cctor">
            <summary>
            初始化RJO商品编码对照列表数据
            </summary>
        </member>
        <member name="M:CommonClassLib.ContractTransfer.CodeTransfer_RJO.initCommodityTransferInfoList_Phillip">
            <summary>
            初始化商品编号对照信息列表
            </summary>
        </member>
        <member name="M:CommonClassLib.ContractTransfer.CodeTransfer_RJO.initCommodityTransferInfoList">
            <summary>
            初始化商品编号对照信息列表
            </summary>
        </member>
        <member name="M:CommonClassLib.ContractTransfer.CodeTransfer_RJO.initContractTransferInfoList">
            <summary>
            初始化合约编号对照信息列表
            </summary>
        </member>
        <member name="M:CommonClassLib.ContractTransfer.CodeTransfer_RJO.getUpperCommodityNoByZDCommodityNo(System.String)">
            <summary>
            根据直达自定义商品编号取得上手RJO商品编号，取不到返回空字符串，处理异常抛出ZDException
            </summary>
            <param name="zdCommondityNo"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ContractTransfer.CodeTransfer_RJO.getZDCommodityNoByUpperCommodityNo(System.String)">
            <summary>
            根据上手RJO商品编号取得直达自定义商品编号，取不到返回空字符串，处理异常抛出ZDException
            </summary>
            <param name="upperCommondityNo"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ContractTransfer.CodeTransfer_RJO.getZDContractNoByUpperContractNo(System.String)">
            <summary>
            根据上手RJO合约日期取得直达自定义合约日期，取不到返回空字符串，处理异常抛出ZDException
            </summary>
            <param name="upperContractNo"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ContractTransfer.CodeTransfer_RJO.getUpperContractNoByZDContractNo(System.String)">
            <summary>
            根据直达自定义合约日期取得上手RJO合约日期，取不到返回空字符串，处理异常抛出ZDException
            </summary>
            <param name="zdContractNo"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ContractTransfer.CodeTransfer_RJO.getUpperCodeInfoByZDCode(System.String,System.String)">
            <summary>
            根据直达自定义合约代码取得合约对照信息，取不到返回跟直达自定义一样的编码，处理异常抛出ZDException
            </summary>
            <param name="zdCode"></param>
            <param name="exchangeCode"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ContractTransfer.CodeTransfer_RJO.getZDCodeInfoByUpperCode(System.String,System.String,System.String)">
            <summary>
            根据上手的商品编码和合约日期取得合约对照信息，取不到返回返回跟上手一样的编码，处理异常抛出ZDException
            </summary>
            <param name="upperCommodityNo"></param>
            <param name="upperContractNo"></param>
            <param name="exchangeCode"></param>
            <returns></returns>
        </member>
        <member name="T:CommonClassLib.ContractTransfer.ContractTransferInfo">
            <summary>
            合约编号（合约日期）对照信息类
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.ContractTransferInfo.zdContractNo">
            <summary>
            直达自定义的合约编号（合约日期）
            </summary>
        </member>
        <member name="F:CommonClassLib.ContractTransfer.ContractTransferInfo.upperContractNo">
            <summary>
            上手交易所或者中间商的合约编号（合约日期）
            </summary>
        </member>
        <member name="T:CommonClassLib.CurrencyInfo">
            <summary>
            币种信息
            </summary>
        </member>
        <member name="P:CommonClassLib.CurrencyInfo.currencyNo">
            <summary>
            货币编号
            </summary>
        </member>
        <member name="P:CommonClassLib.CurrencyInfo.isBase">
            <summary>
            基币货币编号
            </summary>
        </member>
        <member name="P:CommonClassLib.CurrencyInfo.rate">
            <summary>
            与基币的换算汇率
            </summary>
        </member>
        <member name="P:CommonClassLib.CurrencyInfo.currencyName">
            <summary>
            货币名称
            </summary>
        </member>
        <member name="P:CommonClassLib.CurrencyInfo.currencyNameEN">
            <summary>
            货币名称（英文）
            </summary>
        </member>
        <member name="T:CommonClassLib.DataConverter">
            <summary>
            数据通信用的数据转换类通用接口
            </summary>
        </member>
        <member name="M:CommonClassLib.DataConverter.strToLoginInfo(System.String)">
            <summary>
            将登陆请求字符串转换成通信类
            </summary>
            <param name="strLogin"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.DataConverter.strToLoginResponseInfo(System.String)">
            <summary>
            将登陆请求返回的字符串转换成通信类
            </summary>
            <param name="strLogin"></param>
            <returns></returns>
        </member>
        <member name="P:CommonClassLib.DataReadWrite.tmpDataList1">
            <summary>
            用来存放临时读取到的数据列表1
            </summary>
        </member>
        <member name="P:CommonClassLib.DataReadWrite.tmpDataList2">
            <summary>
            用来存放临时读取到的数据列表2
            </summary>
        </member>
        <member name="F:CommonClassLib.DataReadWrite.currentListNo">
            <summary>
            当前正在使用的临时数据列表编号
            </summary>
        </member>
        <member name="F:CommonClassLib.DataReadWrite.existDealThread">
            <summary>
            是否当前已经有线程在处理完整数据
            </summary>
        </member>
        <member name="M:CommonClassLib.DataReadWrite.addData(System.Int32)">
            <summary>
            增加一条读取到的数据到临时数据列表
            </summary>
            <param name="len"></param>
        </member>
        <member name="M:CommonClassLib.DataReadWrite.addByteToTotal(System.Byte[])">
            <summary>
            增加一个新读取的字节数组数据到总的字节数组数据中
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:CommonClassLib.DataReadWrite.generateDataPackage">
            <summary>
            将数据字节数组中的数据解析成完整的数据包并放到一个列表中供处理
            </summary>
        </member>
        <member name="M:CommonClassLib.DataReadWrite.dealAllObjectString(System.String)">
            <summary>
            解析一个完整数据的内容
            </summary>
            <param name="inPut"></param>
        </member>
        <member name="T:CommonClassLib.DBUpdateObject">
            <summary>
            数据库更新用对象
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.code">
            <summary>
            请求代码
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.systemNo">
            <summary>
            系统号
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.localSystemNo">
            <summary>
            本地系统号
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.clientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.upperNo">
            <summary>
            上手号
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.commodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.contractNo">
            <summary>
            合约NO
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.type">
            <summary>
            成交:手续费计算类型
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.fee">
            <summary>
            下单:客户手续费 成交:单位手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.deposit">
            <summary>
            下单:客户保证金 成交:单位保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.keepDeposit">
            <summary>
            下单:客户维持保证金 成交:单位维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.sDeposit">
            <summary>
            成交:单位昨日保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.sKeepDeposit">
            <summary>
            成交:单位昨日维持保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.frozenDeposit">
            <summary>
            下单:冻结资金 成交:单位冻结资金
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.addReduce">
            <summary>
            下单:开仓平仓
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.systemDate">
            <summary>
            系统日期
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.systemTime">
            <summary>
            系统时间
            </summary>
        </member>
        <member name="P:CommonClassLib.DBUpdateObject.clientOperObject">
            <summary>
            小帐号对象 //OrderInfo or FilledResponseInfo or CancelResponseInfo
            </summary>
        </member>
        <member name="T:CommonClassLib.DstInfo">
            <summary>
            夏令时冬令时管理类
            </summary>
        </member>
        <member name="P:CommonClassLib.DstInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.DstInfo.year">
            <summary>
            年
            </summary>
        </member>
        <member name="P:CommonClassLib.DstInfo.summerFrom">
            <summary>
            夏令开始
            </summary>
        </member>
        <member name="P:CommonClassLib.DstInfo.summerTo">
            <summary>
            夏令终了
            </summary>
        </member>
        <member name="P:CommonClassLib.DstInfo.winterFrom">
            <summary>
            冬令开始
            </summary>
        </member>
        <member name="P:CommonClassLib.DstInfo.winterTo">
            <summary>
            冬令终了
            </summary>
        </member>
        <member name="P:CommonClassLib.EMailInfo.MailSet">
            <summary>
            发送方配置Section
            </summary>
        </member>
        <member name="P:CommonClassLib.EMailInfo.ToAddress">
            <summary>
            接收方地址 
            </summary>
        </member>
        <member name="P:CommonClassLib.EMailInfo.ToDisplayName">
            <summary>
            接收方显示名称
            </summary>
        </member>
        <member name="P:CommonClassLib.EMailInfo.Title">
            <summary>
            邮件标题
            </summary>
        </member>
        <member name="P:CommonClassLib.EMailInfo.IsTemp">
            <summary>
            是否有模板(1：模板 其他：无)
            </summary>
        </member>
        <member name="P:CommonClassLib.EMailInfo.RawInfo">
            <summary>
            无模板发送的信息
            </summary>
        </member>
        <member name="P:CommonClassLib.EMailInfo.Template">
            <summary>
            模板Section
            </summary>
        </member>
        <member name="P:CommonClassLib.EMailInfo.PNum">
            <summary>
            参数个数
            </summary>
        </member>
        <member name="P:CommonClassLib.EMailInfo.PList">
            <summary>
            参数列表，将参数以‘|’进行拼接成string
            </summary>
        </member>
        <member name="T:CommonClassLib.ErrorCode">
            <summary>
            错误代码定义类
            </summary>
        </member>
        <member name="M:CommonClassLib.ErrorCode.getErrorMsgByCode(System.String)">
            <summary>
            根据错误代码取得错误内容
            </summary>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ErrorCode.getErrorMsgByCodeForClient(System.String)">
            <summary>
            根据错误代码取得错误内容（客户端用）
            </summary>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="F:CommonClassLib.ErrorCode.SUCCESS">
            <summary>
            处理成功
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.SUCCESS_MSG">
            <summary>
            处理成功
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_COMMON_0001">
            <summary>
            服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_COMMON_0001_MSG">
            <summary>
            服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_COMMON_0002">
            <summary>
            交易所返回指令错误信息
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_COMMON_0002_MSG">
            <summary>
            交易所返回指令错误信息
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0001">
            <summary>
            用户登录错误号：用户名不正确
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0001_MSG">
            <summary>
            用户登录错误号：用户名不正确
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0002">
            <summary>
            用户登录错误号：登录密码错误
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0002_MSG">
            <summary>
            用户登录错误号：登录密码错误
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0003">
            <summary>
            用户登录错误号：密码错误次数超限，用户已冻结，请联系客服解冻
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0003_MSG">
            <summary>
            用户登录错误号：密码错误次数超限，用户已冻结，请联系客服解冻
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0004">
            <summary>
            用户登录错误号：用户已被冻结，请联系客服解冻
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0004_MSG">
            <summary>
            用户登录错误号：用户已被冻结，请联系客服解冻
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0005">
            <summary>
            用户登录错误号：密保问题错误
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0005_MSG">
            <summary>
            用户登录错误号：密保问题错误
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0006">
            <summary>
            用户登录错误号：密保答案错误
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0006_MSG">
            <summary>
            用户登录错误号：密保答案错误
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0007">
            <summary>
            用户登录错误号：手机验证码错误
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0007_MSG">
            <summary>
            用户登录错误号：手机验证码错误
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0008">
            <summary>
            用户登录错误号：验证错误次数超限，用户已冻结，请联系客服解冻
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0008_MSG">
            <summary>
            用户登录错误号：验证错误次数超限，用户已冻结，请联系客服解冻
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0009">
            <summary>
            用户登录错误号：密保问题答案设置错误，请联系客服
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0009_MSG">
            <summary>
            用户登录错误号：密保问题答案设置错误，请联系客服
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0010">
            <summary>
            用户登录错误号：手机验证码发送失败！
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0010_MSG">
            <summary>
            用户登录错误号：手机验证码发送失败！
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0011">
            <summary>
            用户登录错误号:非法登录
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0011_MSG">
            <summary>
            用户登录错误号:非法登录
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0012">
            <summary>
            用户登录错误号:非法登录
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0012_MSG">
            <summary>
            用户登录错误号:非法登录
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0013">
            <summary>
            用户登录错误号:非法登录
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0013_MSG">
            <summary>
            用户登录错误号:非法登录
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0014">
            <summary>
            用户登录错误号:子账户未生效
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0014_MSG">
            <summary>
            用户登录错误号:子账户未生效
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0015">
            <summary>
            用户登录错误号:会员失效
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_LOGIN_0015_MSG">
            <summary>
            用户登录错误号:会员失效
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0000">
            <summary>
            下单错误号：下单失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0000_MSG">
            <summary>
            下单错误号：下单失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0001">
            <summary>
            下单错误号：资金不足
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0001_MSG">
            <summary>
            下单错误号：资金不足
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0002">
            <summary>
            下单错误号：交易服务器未连接
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0002_MSG">
            <summary>
            下单错误号：交易服务器未连接
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0003">
            <summary>
            下单错误号：您已被禁止交易，请联系客服解禁
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0003_MSG">
            <summary>
            下单错误号：您已被禁止交易，请联系客服解禁
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0004">
            <summary>
            下单错误号：下单被拒绝
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0004_MSG">
            <summary>
            下单错误号：下单被拒绝
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0005">
            <summary>
            下单错误号：系统号生成失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0005_MSG">
            <summary>
            下单错误号：系统号生成失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0006">
            <summary>
            下单错误号：您的资金账户中没有该合约交易所需的币种
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0006_MSG">
            <summary>
            下单错误号：您的资金账户中没有该合约交易所需的币种
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0007">
            <summary>
            下单错误号：该合约已经到期，不能交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0007_MSG">
            <summary>
            下单错误号：该合约已经到期，不能交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0008">
            <summary>
            下单错误号：该交易市场未开市，不能交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0008_MSG">
            <summary>
            下单错误号：该交易市场未开市，不能交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0009">
            <summary>
            下单错误号：该交易市场已闭市，不能交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0009_MSG">
            <summary>
            下单错误号：该交易市场已闭市，不能交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0010">
            <summary>
            下单错误号：下单价格超出限定范围
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0010_MSG">
            <summary>
            下单错误号：下单价格超出限定范围
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0011">
            <summary>
            下单错误号：下单数量过大
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0011_MSG">
            <summary>
            下单错误号：下单数量过大
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0012">
            <summary>
            下单错误号：您被禁止交易该合约，请联系客服
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0012_MSG">
            <summary>
            下单错误号：您被禁止交易该合约，请联系客服
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0013">
            <summary>
            下单错误号：您的资金账户风险率过高，已被禁止交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0013_MSG">
            <summary>
            下单错误号：您的资金账户风险率过高，已被禁止交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0014">
            <summary>
            下单错误号：定单已成交，撤单失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0014_MSG">
            <summary>
            下单错误号：定单已成交，撤单失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0015">
            <summary>
            下单错误号：您的账户交易数据出现异常，暂停交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0015_MSG">
            <summary>
            下单错误号：您的账户交易数据出现异常，暂停交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0016">
            <summary>
            改单错误号：改单失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0016_MSG">
            <summary>
            改单错误号：改单失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0017">
            <summary>
            止损止盈错误号：止损止盈设置失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0017_MSG">
            <summary>
            止损止盈错误号：止损止盈设置失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0018">
            <summary>
            止损止盈错误号：止损止盈设置删除失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0018_MSG">
            <summary>
            止损止盈错误号：止损止盈设置删除失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0019">
            <summary>
            下单错误号：下单数量超过客户持仓限量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0019_MSG">
            <summary>
            下单错误号：下单数量超过客户持仓限量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0020">
            <summary>
            下单错误号：下单数量超过客户可下单买量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0020_MSG">
            <summary>
            下单错误号：下单数量超过客户可下单买量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0021">
            <summary>
            下单错误号：下单数量超过客户可下单卖量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0021_MSG">
            <summary>
            下单错误号：下单数量超过客户可下单卖量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0022">
            <summary>
            下单错误号：下单数量超过公司持仓限量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0022_MSG">
            <summary>
            下单错误号：下单数量超过客户持仓限量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0023">
            <summary>
            下单错误号：下单数量超过公司可下单买量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0023_MSG">
            <summary>
            下单错误号：下单数量超过公司可下单买量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0024">
            <summary>
            下单错误号：下单数量超过公司可下单卖量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0024_MSG">
            <summary>
            下单错误号：下单数量超过公司可下单卖量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0025">
            <summary>
            下单错误号：Dealer下单数量超过最大可下单数量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0025_MSG">
            <summary>
            下单错误号：Dealer下单数量超过最大可下单数量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0026">
            <summary>
            下单错误号：合约临近交割，只可平仓，不能开仓
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0026_MSG">
            <summary>
            下单错误号：合约临近交割，只可平仓，不能开仓
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0027">
            <summary>
            下单错误号：该合约已过最后交易日时间，禁止电子盘交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0027_MSG">
            <summary>
            下单错误号：该合约已过最后交易日时间，禁止电子盘交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0028">
            <summary>
            下单错误号：商品未开放，禁止交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0028_MSG">
            <summary>
            下单错误号：商品未开放，禁止交易
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0029">
            <summary>
            下单错误号：下单数量超过该商品单笔最大可下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0029_MSG">
            <summary>
            下单错误号：下单数量超过该商品单笔最大可下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0030">
            <summary>
            下单错误号：条件单设置失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0030_MSG">
            <summary>
            下单错误号：条件单设置失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0031">
            <summary>
            下单错误号：条件单删除失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0031_MSG">
            <summary>
            下单错误号：条件单删除失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0032">
            <summary>
            下单错误号：持仓不足，平仓失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0032_MSG">
            <summary>
            下单错误号：持仓不足，平仓失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0033">
            <summary>
            下单错误号：您不能交易该商品,请联系客服开通
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0033_MSG">
            <summary>
            下单错误号：您不能交易该商品,请联系客服开通
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0034">
            <summary>
            请求CME行情错误号：请求CME行情失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0034_MSG">
            <summary>
            请求CME行情错误号：请求CME行情失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0035">
            <summary>
            下单失败：不支持的下单类型
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0035_MSG">
            <summary>
            下单失败：不支持的下单类型
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0036">
            <summary>
            下单失败：非法操作人员发送交易指令
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0036_MSG">
            <summary>
            下单失败：非法操作人员发送交易指令
            </summary>  
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0037">
            <summary>
            下单失败：港股美股自成交警告拒绝
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0037_MSG">
            <summary>
            下单失败：港股美股自成交警告拒绝
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0038">
            <summary>
            下单失败：可平数量不足，不能双向挂单
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0038_MSG">
            <summary>
            下单失败：可平数量不足，不能双向挂单
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0039">
            <summary>
            下单失败：可平数量不足，不能反向开仓
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0039_MSG">
            <summary>
            下单失败：可平数量不足，不能反向开仓
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0040">
            <summary>
            下单失败：下单超出持仓上限金额
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0040_MSG">
            <summary>
            下单失败：下单超出持仓上限金额
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0041">
            <summary>
            下单失败：下单超出跨市场交易上限金额
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0041_MSG">
            <summary>
            下单失败：下单超出跨市场交易上限金额
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0042">
            <summary>
            下单失败：可卖空数不足
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0042_MSG">
            <summary>
            下单失败：可卖空数不足
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0043">
            <summary>
            下单失败：没有够按金开仓
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0043_MSG">
            <summary>
            下单失败：没有够按金开仓
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0044">
            <summary>
            下单失败：可用购买力不足
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0044_MSG">
            <summary>
            下单失败：可用购买力不足
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0045">
            <summary>
            下单失败：非法操作人员发送交易指令
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0045_MSG">
            <summary>
            下单失败：非法操作人员发送交易指令
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0046">
            <summary>
            行情订阅失败：您已订阅过专业版行情，无法切换至非专业版！
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0046_MSG">
            <summary>
            行情订阅失败：您已订阅过专业版行情，无法切换至非专业版！
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0047">
            <summary>
            碎股下单超过最小下单量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0047_MSG">
            <summary>
            碎股下单超过最小下单量
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0048">
            <summary>
            下单错误号：条件单设置失败，没有设置时间条件单的触发时间
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0048_MSG">
            <summary>
            下单错误号：条件单设置失败，没有设置时间条件单的触发时间
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0049">
            <summary>
            下单错误号：条件单设置失败，时间条件单的触发时间早于系统当前时间
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0049_MSG">
            <summary>
            下单错误号：条件单设置失败，时间条件单的触发时间早于系统当前时间
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0050_MSG">
            <summary>
            非下单时间段下单
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0051">
            <summary>
            该股票IPO基础信息未找到
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0052">
            <summary>
            IPO已申请
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0053">
            <summary>
            该股票不可认购申请
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0054">
            <summary>
            该股票不支持融资认购
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0055">
            <summary>
            该股票认购申请未开始
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0056">
            <summary>
            该股票认购申请已结束
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0057">
            <summary>
            该股票认购数量非法
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0058">
            <summary>
            该股票小于融资最小限额
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0059">
            <summary>
            已超过公司最大融资限额
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0060">
            <summary>
            IPO消息指令非法
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0061">
            <summary>
            认购申请记录未找到
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0062">
            <summary>
            认购申请已撤销
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0063">
            <summary>
            未找到该客户的资金账户
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0064">
            <summary>
            融资认购不可撤销
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0067">
            <summary>
            超过TPS限制
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0068">
            <summary>
            指令失败，无权限
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0000">
            <summary>
            服务器错误号：交易服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0000_MSG">
            <summary>
            服务器错误号：交易服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0001">
            <summary>
            服务器错误号：前置机已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0001_MSG">
            <summary>
            服务器错误号：前置机已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0002">
            <summary>
            服务器错误号：交易服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0002_MSG">
            <summary>
            服务器错误号：交易服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0003">
            <summary>
            服务器错误号：通信网关已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0003_MSG">
            <summary>
            服务器错误号：通信网关已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0004">
            <summary>
            服务器错误号：行情服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0004_MSG">
            <summary>
            服务器错误号：行情服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0005">
            <summary>
            服务器错误号：中间件服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0005_MSG">
            <summary>
            服务器错误号：中间件服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0006">
            <summary>
            服务器错误号：数据库服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0006_MSG">
            <summary>
            服务器错误号：数据库服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0007">
            <summary>
            服务器错误号：通信网关与上手服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0007_MSG">
            <summary>
            服务器错误号：通信网关与上手服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0008">
            <summary>
            服务器错误号：行情服务器与上手服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0008_MSG">
            <summary>
            服务器错误号：行情服务器与上手服务器已断开
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0009">
            <summary>
            服务器错误号：数据库读写出错
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0009_MSG">
            <summary>
            服务器错误号：数据库读写出错
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0010">
            <summary>
            服务器错误号：交易服务器定单请求处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0010_MSG">
            <summary>
            服务器错误号：交易服务器定单请求处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0011">
            <summary>
            服务器错误号：交易服务器定单确认处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0011_MSG">
            <summary>
            服务器错误号：交易服务器定单确认处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0012">
            <summary>
            服务器错误号：交易服务器定单成交处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0012_MSG">
            <summary>
            服务器错误号：交易服务器定单成交处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0013">
            <summary>
            服务器错误号：交易服务器撤单处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0013_MSG">
            <summary>
            服务器错误号：交易服务器撤单处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0014">
            <summary>
            服务器错误号：通信网关定单确认处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0014_MSG">
            <summary>
            服务器错误号：通信网关定单确认处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0015">
            <summary>
            服务器错误号：通信网关定单成交处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0015_MSG">
            <summary>
            服务器错误号：通信网关定单成交处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0016">
            <summary>
            服务器错误号：通信网关撤单成功处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0016_MSG">
            <summary>
            服务器错误号：通信网关撤单成功处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0017">
            <summary>
            服务器错误号：通信网关定单错误处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0017_MSG">
            <summary>
            服务器错误号：通信网关定单错误处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0018">
            <summary>
            服务器错误号：通信网关撤单错误处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0018_MSG">
            <summary>
            服务器错误号：通信网关撤单错误处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0019">
            <summary>
            服务器错误号：行情服务器接收行情处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0019_MSG">
            <summary>
            服务器错误号：行情服务器接收行情处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0020">
            <summary>
            服务器错误号：行情服务器发送行情处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0020_MSG">
            <summary>
            服务器错误号：行情服务器发送行情处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0021">
            <summary>
            服务器错误号：中间件数据处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0021_MSG">
            <summary>
            服务器错误号：中间件数据处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0022">
            <summary>
            服务器错误号：盈损服务器断开异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0022_MSG">
            <summary>
            服务器错误号：盈损服务器断开异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0023">
            <summary>
            服务器错误号：盈损服务器处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0023_MSG">
            <summary>
            服务器错误号：盈损服务器处理异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0024">
            <summary>
            服务器错误号：数据压缩异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0024_MSG">
            <summary>
            服务器错误号：数据压缩异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0025">
            <summary>
            服务器错误号：数据解压异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_SERVER_0025_MSG">
            <summary>
            服务器错误号：数据解压异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_MODIFY_001">
            <summary>
            用户修改密码错误
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_MODIFY_002">
            <summary>
            修改密码出错
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_MODIFY_003">
            <summary>
            修改密码于历史3次相同
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_GUITAI_0001">
            <summary>
            柜台错误号：冻结客户失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_GUITAI_0001_MSG">
            <summary>
            柜台错误号：冻结客户失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_GUITAI_0002">
            <summary>
            柜台错误号：冻结客户资金失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_GUITAI_0002_MSG">
            <summary>
            柜台错误号：冻结客户资金失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_INOUT_0003">
            <summary>
            出入金错误号：出入金申请失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_INOUT_0003_MSG">
            <summary>
            出入金错误号：出入金申请失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_TransferMoney_0004">
            <summary>
            资金调拨错误号：资金调拨申请失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_TransferMoney_0004_MSG">
            <summary>
            资金调拨错误号：资金调拨申请失败
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0065">
            <summary>
            资金调拨错误号：调拨客户为未与调拨申请人绑定客户
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0065_MSG">
            <summary>
            资金调拨错误号：调拨客户为未与调拨申请人绑定客户
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0066">
            <summary>
            指令失败，原因:资金调拨故障
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ORDER_0066_MSG">
            <summary>
            指令失败，原因:资金调拨故障
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ClientBind_001">
            <summary>
            绑定账户错误号：该账户已绑定
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ClientBind_001_MSG">
            <summary>
            绑定账户错误号：该账户已绑定
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ClientBind_002">
            <summary>
            绑定账户错误号：该账户不能创建综合账户
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ClientBind_002_MSG">
            <summary>
            绑定账户错误号：该账户不能创建综合账户
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ClientBind_003">
            <summary>
            绑定账户错误号：该账户不能加绑账户 
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ClientBind_003_MSG">
            <summary>
            绑定账户错误号：该账户不能加绑账户
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ClientBind_004">
            <summary>
            绑定账户错误号：无匹配账户 
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_ClientBind_004_MSG">
            <summary>
            绑定账户错误号：无匹配账户
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_PendingModify_0001">
            <summary>
            待改单错误号：60001
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_PendingModify_0001_MSG">
            <summary>
            待改单错误信息：改单失败，服务器存在该订单未处理的改单请求！
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_PendingCancel_0002">
            <summary>
            待撤单错误号：60002
            </summary>
        </member>
        <member name="F:CommonClassLib.ErrorCode.ERR_PendingCancel_0002_MSG">
            <summary>
            待撤单错误信息：撤单失败，服务器存在该订单未处理的撤单请求！
            </summary>
        </member>
        <member name="T:CommonClassLib.ExceptionEventHandler">
            <summary>
            网络通信异常处理
            </summary>
        </member>
        <member name="T:CommonClassLib.ExceptionEventHandler.ExceptionEvent">
            <summary>
            网络通信异常信息抛出
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:CommonClassLib.ExceptionEventHandler.eventArg">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="F:CommonClassLib.ExceptionEventHandler.eventCode">
            <summary>
            异常编码
            </summary>
        </member>
        <member name="T:CommonClassLib.ExceptionLogInfo">
            <summary>
            异常log信息
            </summary>
        </member>
        <member name="P:CommonClassLib.ExceptionLogInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ExceptionLogInfo.userIpPort">
            <summary>
            用户IP端口
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:CommonClassLib.ExceptionLogInfo.exceptionInfo" -->
        <member name="P:CommonClassLib.ExceptionLogInfo.exceptionSource">
            <summary>
            异常来源（C:客户端；A：安卓手机；I：苹果手机；D：Dealer端；G：柜台）
            </summary>
        </member>
        <member name="P:CommonClassLib.Exchange.FExchangeNo">
            <summary>
            交易所编号
            </summary>
        </member>
        <member name="P:CommonClassLib.Exchange.FName">
            <summary>
            交易所名称
            </summary>
        </member>
        <member name="P:CommonClassLib.Exchange.FSettleType">
            <summary>
            交易所类型（HK：港股；US：美股）
            </summary>
        </member>
        <member name="P:CommonClassLib.Exchange.FNameEN">
            <summary>
            交易所名称（英文）
            </summary>
        </member>
        <member name="T:CommonClassLib.ExchangeSummerWinter">
            <summary>
            交易所的冬夏令时间
            </summary>
        </member>
        <member name="P:CommonClassLib.ExchangeSummerWinter.FYear">
            <summary>
            年
            </summary>
        </member>
        <member name="P:CommonClassLib.ExchangeSummerWinter.FSummerBegin">
            <summary>
            夏令时开始时间
            </summary>
        </member>
        <member name="P:CommonClassLib.ExchangeSummerWinter.FWinterBegin">
            <summary>
            冬令时开始时间
            </summary>
        </member>
        <member name="P:CommonClassLib.ExchangeSummerWinter.FExchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ExchangeSummerWinter.FName">
            <summary>
            交易所名称
            </summary>
        </member>
        <member name="T:CommonClassLib.FilledInfo">
            <summary>
            小帐户大帐户绑定信息
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledInfo.clientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledInfo.exchangeNo">
            <summary>
            交易所No
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledInfo.code">
            <summary>
            商品ID
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledInfo.index">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledInfo.matchPrice">
            <summary>
            单价
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledInfo.settlePrice">
            <summary>
            结算价
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledInfo.matchVol">
            <summary>
            量
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledInfo.type">
            <summary>
            买或者卖
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledInfo.expiryDate">
            <summary>
            交割日
            </summary>
        </member>
        <member name="T:CommonClassLib.FilledResponseInfo">
            <summary>
            返回的成交信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.filledNo">
            <summary>
            成交编号（要包括7位的订单编号，一共11位）
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.orderNo">
            <summary>
            定单号
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.systemNo">
            <summary>
            系统编号
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.localNo">
            <summary>
            本地编号
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.buySale">
            <summary>
            买还是卖：1=buy 2=sell
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.filledNumber">
            <summary>
            成交数
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.filledPrice">
            <summary>
            成交价格
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.filledDate">
            <summary>
            成交日期(yyyy-MM-dd)
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.filledTime">
            <summary>
            成交时间(hh:mm:ss)
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.commsion">
            <summary>
            成交手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.HTSCode">
            <summary>
            委托数量
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.errorCode">
            <summary>
            委托价格
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.deliveryDate">
            <summary>
            合约交割日期(yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.filledType">
            <summary>
            成交类别(N：普通下单成交；C、T：调期模拟成交)
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.orderType">
            <summary>
            定单类型（1=限价单, 2=市价单，3=限价止损（stop to limit），4=止损（stop to market）
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.validDate">
            <summary>
            有效日期（1=当日有效, 2=永久有效）
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.addReduce">
            <summary>
            开仓还是平仓：1=开仓 2=平仓，3=平今，4=平昨
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.exchangeTime">
            <summary>
            交易所返回时间(yyyy-MM-dd hh24:mm:ss) 20151214 add
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.subClientNo">
            <summary>
            分账户号
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledResponseInfo.FillBrokerList">
            <summary>
             港股中，成交的时候可以得到成交对手所属的经济商代码
            </summary>
        </member>
        <member name="T:CommonClassLib.FilledSearchInfo">
            <summary>
            成交查询请求信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledSearchInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledSearchInfo.tradePwd">
            <summary>
            交易密码
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledSearchInfo.filledNo">
            <summary>
            成交编号（要包括7位的订单编号，一共11位）
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledSearchInfo.filledDateTime">
            <summary>
            成交时间（格式：yyyy-MM-dd hh:mm:ss）
            </summary>
        </member>
        <member name="P:CommonClassLib.FilledSearchInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.FundTransferInfo.SystemCode">
            <summary>
            系统号
            </summary>
        </member>
        <member name="P:CommonClassLib.FundTransferInfo.ClientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.FundTransferInfo.CurrencyNo">
            <summary>
            币种
            </summary>
        </member>
        <member name="P:CommonClassLib.FundTransferInfo.ClientType">
            <summary>
            客户类型
            </summary>
        </member>
        <member name="P:CommonClassLib.FundTransferInfo.Money">
            <summary>
            调拨金额
            </summary>
        </member>
        <member name="P:CommonClassLib.FundTransferInfo.CurrencyRate">
            <summary>
            调拨币种汇率
            </summary>
        </member>
        <member name="P:CommonClassLib.FundTransferInfo.SerialID">
            <summary>
            发送方做出金冻结，对应序号
            </summary>
        </member>
        <member name="P:CommonClassLib.FundTransferInfo.CashType">
            <summary>
            出入金类型，I是做入金，O是做出金
            </summary>
        </member>
        <member name="P:CommonClassLib.FundTransferInfo.AllocateClientNo">
            <summary>
            调拨客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.FundTransferInfo.SameCurrencyQuota">
            <summary>
            同币种需要调拨金额
            </summary>
        </member>
        <member name="P:CommonClassLib.FundTransferInfo.infoT">
            <summary>
            多组出金币种：出金金额
            </summary>
        </member>
        <member name="T:CommonClassLib.GoodsApplyInfo">
            <summary>
            客户端提存货申请信息
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyInfo.clientNo">
            <summary>
            客户的登录ID
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyInfo.type">
            <summary>
            提存货类型(O:提货;I:存货)
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyInfo.accountNo">
            <summary>
            交易账号
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyInfo.code">
            <summary>
            提存货证卷代码
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyInfo.quantity">
            <summary>
            提存货数量
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyInfo.memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyInfo.payWay">
            <summary>
            付款方式（A:毋需付款;B:货银对付）
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyInfo.settleMoney">
            <summary>
            结算金额
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyInfo.opponentInfo">
            <summary>
            对手资料
            </summary>
        </member>
        <member name="T:CommonClassLib.GoodsApplyResponseInfo">
            <summary>
            提存货返回信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.clientNo">
            <summary>
            客户的登录ID
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.type">
            <summary>
            提存货类型(O:提货;I:存货)
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.accountNo">
            <summary>
            交易账号
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.code">
            <summary>
            提存货证卷代码
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.quantity">
            <summary>
            提存货数量
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.payWay">
            <summary>
            付款方式（A:毋需付款;B:货银对付）
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.settleMoney">
            <summary>
            结算金额
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.opponentInfo">
            <summary>
            对手资料
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.seqNo">
            <summary>
            提存货序号
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.status">
            <summary>
            提存货状态
            </summary>
        </member>
        <member name="P:CommonClassLib.GoodsApplyResponseInfo.applyDateTime">
            <summary>
            提存货申请日期时间（yyyy-MM-dd hh24:mm:ss）
            </summary>
        </member>
        <member name="T:CommonClassLib.HoldDetailResponseInfo">
            <summary>
            持仓明细请求返回数据类
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FMatchDate">
            <summary>
            成交日期（yyyyMMdd）
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FMatchNo">
            <summary>
            成交编号
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FClientNo">
            <summary>
            客户编号
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FExchangeNo">
            <summary>
            交易所编号
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FCommodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FContractNo">
            <summary>
            合约编号
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FDirect">
            <summary>
            买卖方向（1：买；2：卖）
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FHoldVol">
            <summary>
            持仓数
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FHoldPrice">
            <summary>
            开仓均价（原始开仓价）
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FCurrencyNo">
            <summary>
            货币编号
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FForciblyClosePrice">
            <summary>
            结算后的持仓均价
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FAccount">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FHoldType">
            <summary>
            持仓类型（0：昨仓；1：今仓）
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.deliveryDate">
            <summary>
            合约交割日期(yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FExChangeName">
            <summary>
            交易所名称(客户端自己取得)
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FCurrencyName">
            <summary>
            货币名称(客户端自己取得)
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.FCode">
            <summary>
            合约代码（商品编号+合约编号）(客户端自己取得)
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldDetailResponseInfo.holdMargin">
            <summary>
            持仓保证金 add 20141222
            </summary>
        </member>
        <member name="F:CommonClassLib.HoldDetailResponseInfo.pingcangVol">
            <summary>
            已经平仓了的数量
            </summary>
        </member>
        <member name="T:CommonClassLib.HoldResponseInfoStock">
            <summary>
            股票持仓返回信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FClientNo">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FExchangeNo">
            <summary>
            交易所
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FCommodityNo">
            <summary>
            证券代码
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FDirect">
            <summary>
            持仓方向（1：持买；2：持卖）
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FHoldPrice">
            <summary>
            持仓成本价
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FCanTradeVol">
            <summary>
            可卖数量
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FTodayBuyVol">
            <summary>
            今买数量
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FFrozenVol">
            <summary>
            冻结数量
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FTotalBuyMoney">
            <summary>
            持有期内买入金额总和
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FTotalSellMoney">
            <summary>
            持有期内卖出金额总和
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FTotalBuyVol">
            <summary>
            持有期内买入数量
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FTotalSellVol">
            <summary>
            持有期内卖出数量
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FOpenDate">
            <summary>
            首次开仓日期(yyyy-MM-dd)
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FFlatProfit">
            <summary>
            平仓盈利
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FHkexT1">
            <summary>
            港股T+1数量
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FHkexT2">
            <summary>
            港股T+2数量
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FHkexT3">
            <summary>
            美股T+3数量
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FUnsettleVol">
            <summary>
            港股未交收数量=T1+T2
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FSettledVol">
            <summary>
            港股已交收数量
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FHoldVol">
            <summary>
            持仓数量
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FTodaySaleVol">
            <summary>
            今卖数量
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FSellFrozenMoney">
            <summary>
            卖空冻结资金
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.FOpenPrice">
            <summary>
            开仓均价
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.status">
            <summary>
            顺序号
            </summary>
        </member>
        <member name="P:CommonClassLib.HoldResponseInfoStock.orderNo">
            <summary>
            定单号
            </summary>
        </member>
        <member name="T:CommonClassLib.IdentifyEncoding">
            <summary>
            检测字符编码的类
            <seealso cref="T:System.IO.Stream"/>
            <seealso cref="T:System.Uri"/>
            <seealso cref="T:System.IO.FileInfo"/>
            </summary>
            <remarks>
            <![CDATA[
            <strong>IdentifyEncoding</strong> 用来检测 <see cref="Uri"/>,<see cref="System.IO.FileInfo"/>,<see cref="sbyte"/> 字节数组的编码．
            Create By lion  <br/>
            2005-02-21 22:00  <br/>
            Support .Net Framework v1.1.4322 <br/> 
            WebSite：www.lionsky.net(lion-a AT sohu.com) <br/> 
            ]]>
            </remarks>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.#ctor">
            <summary>
            初始化 <see cref="T:CommonClassLib.IdentifyEncoding"/> 的实例
            </summary>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.GetEncodingName(System.Uri)">
            <summary>
            从指定的 <see cref="T:System.Uri"/> 中判断编码类型
            </summary>
            <param name="testurl">要判断的 <see cref="T:System.Uri"/> </param>
            <returns>返回编码类型("GB2312", "GBK", "HZ", "Big5", "CNS 11643", "ISO 2022CN", "UTF-8", "Unicode", "ASCII", "OTHER")</returns>
            <example>
            以下示例演示了如何调用 <see cref="M:CommonClassLib.IdentifyEncoding.GetEncodingName(System.Uri)"/> 方法：
            <code>
             IdentifyEncoding ide = new IdentifyEncoding();
             Response.Write(ide.GetEncodingName(new Uri("http://china5.nikkeibp.co.jp/china/news/com/200307/pr_com200307170131.html")));  
            </code>
            </example>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.GetEncodingName(System.IO.FileInfo)">
            <summary>
            从指定的 <see cref="T:System.IO.FileInfo"/> 中判断编码类型
            </summary>
            <param name="testfile">要判断的 <see cref="T:System.IO.FileInfo"/> </param>
            <returns>返回编码类型("GB2312", "GBK", "HZ", "Big5", "CNS 11643", "ISO 2022CN", "UTF-8", "Unicode", "ASCII", "OTHER")</returns>
            <example>
            以下示例演示了如何调用 <see cref="M:CommonClassLib.IdentifyEncoding.GetEncodingName(System.Uri)"/> 方法：
            <code>
             IdentifyEncoding ide = new IdentifyEncoding();
             Response.Write(ide.GetEncodingName(new System.IO.FileInfo(@"C:\test.txt")));  
            </code>
            </example>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.GetEncodingName(System.SByte[])">
            <summary>
            从指定的 <see cref="T:System.SByte"/> 字节数组中判断编码类型
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.IO.FileInfo"/> </param>
            <returns>返回编码类型("GB2312", "GBK", "HZ", "Big5", "CNS 11643", "ISO 2022CN", "UTF-8", "Unicode", "ASCII", "OTHER")</returns>
            <example>
            以下示例演示了如何调用 <see cref="M:CommonClassLib.IdentifyEncoding.GetEncodingName(System.Uri)"/> 方法：
            <code>
             IdentifyEncoding ide = new IdentifyEncoding();
             Response.Write(ide.GetEncodingName(IdentifyEncoding.ToSByteArray(System.Text.Encoding.GetEncoding("gb2312").GetBytes("Lion互动网络(www.lionsky.net)")))); 
            </code>
            </example>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.GB2312Probability(System.SByte[])">
            <summary>
            判断是GB2312编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.GBKProbability(System.SByte[])">
            <summary>
            判断是GBK编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.HZProbability(System.SByte[])">
            <summary>
            判断是HZ编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.BIG5Probability(System.SByte[])">
            <summary>
            判断是BIG5编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.ENCTWProbability(System.SByte[])">
            <summary>
            判断是CNS11643(台湾)编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.ISO2022CNProbability(System.SByte[])">
            <summary>
            判断是ISO2022CN编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.UTF8Probability(System.SByte[])">
            <summary>
            判断是UTF8编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.UnicodeProbability(System.SByte[])">
            <summary>
            判断是Unicode编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.ASCIIProbability(System.SByte[])">
            <summary>
            判断是ASCII编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.Initialize_Frequencies">
            <summary>
            初始化必要的条件
            </summary>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.ToByteArray(System.SByte[])">
            <summary>
            将此实例中的指定 <see cref="T:System.SByte"/> 字符数组转换到 <see cref="T:System.Byte"/> 字符数组。
            </summary>
            <param name="sbyteArray">要转换的 <see cref="T:System.SByte"/> 字符数组</param>
            <returns>返回转换后的 <see cref="T:System.Byte"/> 字符数组</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.ToByteArray(System.String)">
            <summary>
            将此实例中的指定字符串转换到 <see cref="T:System.Byte"/> 字符数组。
            </summary>
            <param name="sourceString">要转换的字符串</param>
            <returns>返回转换后的 <see cref="T:System.Byte"/> 字符数组</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.ToByteArray(System.Object[])">
            <summary>
            将此实例中的指定 <see cref="T:System.Object"/> 数组转换到 <see cref="T:System.Byte"/> 字符数组。
            </summary>
            <param name="tempObjectArray">要转换的 <see cref="T:System.Object"/> 字符数组</param>
            <returns>返回转换后的 <see cref="T:System.Byte"/> 字符数组</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.ToSByteArray(System.Byte[])">
            <summary>
            将此实例中的指定 <see cref="T:System.Byte"/> 字符数组转换到 <see cref="T:System.SByte"/> 字符数组。
            </summary>
            <param name="byteArray">要转换的 <see cref="T:System.Byte"/> 字符数组</param>
            <returns>返回转换后的 <see cref="T:System.SByte"/> 字符数组</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.ReadInput(System.IO.Stream,System.SByte[]@,System.Int32,System.Int32)">
            <summary>从流读取字节序列,并将此流中的位置提升读取的字节数.</summary>
            <param name="sourceStream">要读取的流.</param>
            <param name="target">字节数组。此方法返回时,该缓冲区包含指定的字符数组,该数组的 start 和 (start + count-1) 之间的值由从当前源中读取的字节替换。</param>
            <param name="start">buffer 中的从零开始的字节偏移量,从此处开始存储从当前流中读取的数据。.</param>
            <param name="count">要从当前流中最多读取的字节数。</param>
            <returns>读入缓冲区中的总字节数。如果当前可用的字节数没有请求的字节数那么多,则总字节数可能小于请求的字节数,或者如果已到达流的末尾,则为零 (0)。</returns>
            <exception cref="T:System.ArgumentException">start 与 count 的和大于缓冲区长度。</exception>
            <exception cref="T:System.ArgumentNullException">target 为空引用(Visual Basic 中为 Nothing)。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset 或 count 为负。</exception>
            <exception cref="T:System.IO.IOException">发生 I/O 错误。</exception>
            <exception cref="T:System.NotSupportedException">流不支持读取。</exception>
            <exception cref="T:System.ObjectDisposedException">在流关闭后调用方法。</exception>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.ReadInput(System.IO.TextReader,System.SByte[]@,System.Int32,System.Int32)">
            <summary>从字符系列读取字节序列,并将此字符系列中的位置提升读取的字节数。</summary>
            <param name="sourceTextReader">要读取的流。</param>
            <param name="target">字节数组。此方法返回时,该缓冲区包含指定的字符数组,该数组的 start 和 (start + count-1) 之间的值由从当前源中读取的字节替换。</param>
            <param name="start">buffer 中的从零开始的字节偏移量,从此处开始存储从当前流中读取的数据。.</param>
            <param name="count">要从当前流中最多读取的字节数。</param>
            <returns>读入缓冲区中的总字节数。如果当前可用的字节数没有请求的字节数那么多,则总字节数可能小于请求的字节数,或者如果已到达流的末尾,则为零 (0)。</returns>
            <exception cref="T:System.ArgumentException">start 与 count 的和大于缓冲区长度。</exception>
            <exception cref="T:System.ArgumentNullException">target 为空引用(Visual Basic 中为 Nothing)。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset 或 count 为负。</exception>
            <exception cref="T:System.IO.IOException">发生 I/O 错误。</exception>
            <exception cref="T:System.NotSupportedException">流不支持读取。</exception>
            <exception cref="T:System.ObjectDisposedException">在流关闭后调用方法。</exception>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.FileLength(System.IO.FileInfo)">
            <summary>
            检测当前文件的大小
            </summary>
            <param name="file">被检测的文件</param>
            <returns>当前文件的大小。</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.Identity(System.Int64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.Identity(System.UInt64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.Identity(System.Single)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:CommonClassLib.IdentifyEncoding.Identity(System.Double)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="P:CommonClassLib.IntegratedFundLogin.ServerType">
            <summary>
            交易服务器类型，0:期货，1:股票
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOApply.IPONum">
            <summary>
            认购数量
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOApply.IPOType">
            <summary>
            C:现金认购，B:融资认购
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOApply.clientReqNo">
            <summary>
            客户请求记录号
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOApply.IsMemberAccount">
            <summary>
            0：普通账号，1：综合账号
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOBaseInfo.FStartTime">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOBaseInfo.FEndTime">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOBaseInfo.FShareDay">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOBaseInfo.FListDay">
            <summary>
            上市日期
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOBaseInfo.FHoldStartTime">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOBaseInfo.FHoldEndTime">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOBaseInfo.FLendProp">
            <summary>
            贷款比率
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOBaseInfo.FBorrowMin">
            <summary>
            融资最低申购金额
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOBaseInfo.FBorrowFee">
            <summary>
            融资手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOBaseInfo.FRemainingAmount">
            <summary>
            公司剩余融资金额
            </summary>
        </member>
        <member name="P:CommonClassLib.IPOBaseInfo.OfficialDeadline">
            <summary>
            认购截止日期
            </summary>
        </member>
        <member name="T:CommonClassLib.LoginHistoryIpInfo">
            <summary>
            用户上次登录和同时在线登录的Ip地址信息
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginHistoryIpInfo.IpPort">
            <summary>
            登录的外网Ip地址和端口（例：192.168.1.12:8080）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginHistoryIpInfo.IpPortLan">
            <summary>
            登录的内网Ip地址和端口（例：192.168.1.12:8080）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginHistoryIpInfo.LoginDateTime">
            <summary>
            登录的日期时间（格式：yyyy-MM-dd HH:mm:ss）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginHistoryIpInfo.LoginType">
            <summary>
            登录类别（1:上次登录；2：同时登录）
            </summary>
        </member>
        <member name="T:CommonClassLib.LoginInfo">
            <summary>
            用户登录用的类
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginInfo.userPwd">
            <summary>
            用户密码
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginInfo.userType">
            <summary>
            用户类型（0或者空：期货，1：港股，2：国内股票，3：美股） 20150821 add
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginInfo.macAddress">
            <summary>
            mac地址
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginInfo.computerName">
            <summary>
            电脑名
            </summary>
        </member>
        <member name="P:CommonClassLib.MatchClientInfo.clientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.MatchClientInfo.state">
            <summary>
            使用状态
            </summary>
        </member>
        <member name="P:CommonClassLib.MatchClientInfo.type">
            <summary>
            账户类型（0：期货，1：证券）
            </summary>
        </member>
        <member name="P:CommonClassLib.MemberLoginResponseInfo.memberAccount">
            <summary>
            会员号
            </summary>
        </member>
        <member name="P:CommonClassLib.MemberLoginResponseInfo.memberPwd">
            <summary>
            会员登录密码
            </summary>
        </member>
        <member name="P:CommonClassLib.MemberLoginResponseInfo.memberState">
            <summary>
            会员号状态
            </summary>
        </member>
        <member name="P:CommonClassLib.MemberLoginResponseInfo.clientNo">
            <summary>
            关联客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.MemberLoginResponseInfo.clientType">
            <summary>
            账户类型（0：期货账户，1：证券账户）
            </summary>
        </member>
        <member name="P:CommonClassLib.MemberLoginResponseInfo.clientPwd">
            <summary>
            客户登录密码
            </summary>
        </member>
        <member name="P:CommonClassLib.StockClientFeeInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.StockClientFeeInfo.commodityNo">
            <summary>
            商品代码
            </summary>
        </member>
        <member name="P:CommonClassLib.StockClientFeeInfo.matchWay">
            <summary>
            交易方式
            </summary>
        </member>
        <member name="P:CommonClassLib.StockClientFeeInfo.bFee">
            <summary>
            百分币 手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.StockClientFeeInfo.dFee">
            <summary>
            固定 手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.StockClientFeeInfo.currencyNo">
            <summary>
            货币编号
            </summary>
        </member>
        <member name="P:CommonClassLib.StockClientFeeInfo.feeWay">
            <summary>
            收付费收取方式（比如单向，双向）
            </summary>
        </member>
        <member name="P:CommonClassLib.StockClientFeeInfo.type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:CommonClassLib.StockClientFeeInfo.modifyDate">
            <summary>
            更新日期时间
            </summary>
        </member>
        <member name="T:CommonClassLib.SubCashDetailInfo">
            <summary>
            分账户工具调拨资金历史请求类
            </summary>
        </member>
        <member name="T:CommonClassLib.SubCashDetailRequestInfo">
            <summary>
            分账户工具调拨资金历史请求类
            </summary>
        </member>
        <member name="P:CommonClassLib.SubCashDetailRequestInfo.clientNo">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.SubCashDetailRequestInfo.type">
            <summary>
            1：主账户调拨历史；2：分账户调拨历史
            </summary>
        </member>
        <member name="P:CommonClassLib.SubCashDetailRequestInfo.detail">
            <summary>
            调拨历史详情
            </summary>
        </member>
        <member name="T:CommonClassLib.subClientInfoDetail">
            <summary>
            工具请求分账户信息类
            </summary>
        </member>
        <member name="T:CommonClassLib.SubCashInfo">
            <summary>
            分账户工具调拨资金类
            </summary>
        </member>
        <member name="P:CommonClassLib.SubCashInfo.clientNo">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.SubCashInfo.subClientNo">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.SubCashInfo.state">
            <summary>
            请求状态
            </summary>
        </member>
        <member name="P:CommonClassLib.SubCashInfo.msg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:CommonClassLib.SubCashInfo.type">
            <summary>
            状态 1：入金；2：出金
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonClassLib.SubClientInfo">
            <summary>
            工具请求分账户信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.SubClientInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.SubClientInfo.state">
            <summary>
            请求状态
            </summary>
        </member>
        <member name="P:CommonClassLib.SubClientInfo.msg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:CommonClassLib.SubClientInfo.subclientno">
            <summary>
            下属分客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.SubClientInfo.type">
            <summary>
            状态 1：新建；2：更新；3删除；
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonClassLib.LoginToosResponseInfo">
            <summary>
            用户登录请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginToosResponseInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginToosResponseInfo.userName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginToosResponseInfo.userType">
            <summary>
            用户类型：（1：主账户，2：dealer）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginToosResponseInfo.state">
            <summary>
            登录状态
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginToosResponseInfo.msg">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginToosResponseInfo.mainclientno">
            <summary>
            下属主客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginToosResponseInfo.subclientno">
            <summary>
            下属分客户号
            </summary>
        </member>
        <member name="T:CommonClassLib.LoginResponseInfo">
            <summary>
            用户登录请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.userName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.userType">
            <summary>
            用户类型：（1：期货，2：港股，3：美股，4：国内股票）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.loginPwd">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.tradePwd">
            <summary>
            交易密码
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.isSimulation">
            <summary>
            是否模拟用户：1：是；0 or other：不是
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.frontendIp">
            <summary>
            前置机IP地址
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.frontendPort">
            <summary>
            前置机端口号
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FCurrencyNo">
            <summary>
            帐户币种
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FState">
            <summary>
            用户状态 C消户 U在用 D冻结 
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FSelAll">
            <summary>
            是否可以卖空期权：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FStrategy">
            <summary>
            是否可以下自定义策略单：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FInner">
            <summary>
            是否可以下国内单：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FYingSun">
            <summary>
            是否可以使用止损止盈和条件单功能：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FChaoDan">
            <summary>
            是否可以使用炒单手功能：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FOption">
            <summary>
            是否可以交易期权：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FCMEMarket">
            <summary>
            是否可以获取CME行情：0：不可以；1：可以看非专业版；2：可以看专业版（股票登录返回时：是否可以获取港股行情权限：0：不可以；1：可以；2：境内使用优惠行情；3：境外使用优惠行情）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FCMECOMEXMarket">
            <summary>
            是否可以获取CME_COMEX行情：0：不可以；1：可以看非专业版；2：可以看专业版（股票登录返回时：是否可以获取美股行情权限：0：不可以；1：可以）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FCMENYMEXMarket">
            <summary>
            是否可以获取CME_NYMEX行情：0：不可以；1：可以看非专业版；2：可以看专业版（股票登录返回时：是否可以获取韩股行情权限：0：不可以；1：可以）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FCMECBTMarket">
            <summary>
            是否可以获取CME_CBT行情：0：不可以；1：可以看非专业版；2：可以看专业版（ 股票登录返回时：是否可以获取新加坡股行情权限：0：不可以；1：可以（境内登录）；2：可以（境外登录：不能看））
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.ICEUSMarket">
            <summary>
            是否可以获取ICE US行情：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.ICEECMarket">
            <summary>
            是否可以获取ICE EC行情：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.ICEEFMarket">
            <summary>
            是否可以获取ICE EF行情：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FCanTradeStockHK">
            <summary>
            是否可以交易港股：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FCanTradeStockAM">
            <summary>
            是否可以交易美股：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FMultiLogin">
            <summary>
            是否可以多处登录：不是Y：不可以；Y：可以 mantis7735
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FSellStockHK">
            <summary>
            是否可以卖空港股：0或空：不可以；1：可以 mantis6868
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FSellStockAM">
            <summary>
            是否可以卖空美股：0或空：不可以；1：可以 mantis6868
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FCanTradeStockKRX">
            <summary>
            是否可以交易韩股：0：不可以；1：可以 mantis8341
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FHKEXMarket">
            <summary>
            是否可以获取期货港交所HKEX行情：0：不可以；1：可以（不使用优惠行情）；2：境内使用优惠行情；3：境外使用优惠行情 mantis1080 mantis393
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FIDNumber">
            <summary>
            用户身份证（股票传身份证类型，只有类型为1时才能选88的优惠行情；期货传身份证号码，15位或18位是国内客户）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FHKEXMarketFee">
            <summary>
            港交所行情收费金额（为0时表示在豁免期，大于0表示开始收费）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FISProfessional">
            <summary>
            CME行情权限是否是专业版（1：是；0：否）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FISOverSea">
            <summary>
            是否境外登录（1：是；0：否）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.isFirstLogin">
            <summary>
            是否新设备初次登录（1：是；0：否）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.userMobile">
            <summary>
            用户手机号
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.hasSetQA">
            <summary>
            是否已经设置了密保问题答案（1：是；0：否）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FCanTradeStockSGXQ">
            <summary>
            是否可以交易新加坡股：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.existMac">
            <summary>
            是否已经绑定过设备mac地址：1：是；0 or other：不是
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.ratioINE">
            <summary>
            上海能源可取资金系数
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.EurexMarket">
            <summary>
            是否可以获取Eurex行情：0：不可以；1：可以（亚太区优惠）；2：可以（非专业）；3：可以（专业投资者）；4：不可以，需提示（亚太区以外使用亚太区优惠行情）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.HKEXIsOverMaxTerminal">
            <summary>
            是否超过最大终端数:0:未超过,非0超过
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.HKEXOverMoney">
            <summary>
            港交所超过终端数收费
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FCanTradeStockAU">
            <summary>
            是否可交易澳股
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FNYFlag">
            <summary>
            能源标示
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FAPI">
            <summary>
            api权限（内部使用）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.FAPIExpiryDate">
            <summary>
            api到期日（内部使用）
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.isSubClient">
            <summary>
            分账户标示
            </summary>
        </member>
        <member name="P:CommonClassLib.LoginResponseInfo.promptBindFg">
            <summary>
            一账户提示绑定标志
            </summary>
        </member>
        <member name="F:CommonClassLib.LogLevel.SYSTEMERROR">
            <summary>
            系统错误信息
            </summary>
        </member>
        <member name="F:CommonClassLib.LogLevel.IMPORTANT">
            <summary>
            重要信息
            </summary>
        </member>
        <member name="F:CommonClassLib.LogLevel.INFO">
            <summary>
            一般信息
            </summary>
        </member>
        <member name="F:CommonClassLib.LogLevel.DEBUG">
            <summary>
            调试信息
            </summary>
        </member>
        <member name="F:CommonClassLib.LogLevel.ALL">
            <summary>
            所有信息
            </summary>
        </member>
        <member name="T:CommonClassLib.Log.LogManagement">
            <summary>
            掌管命令接口
            </summary>
        </member>
        <member name="T:CommonClassLib.MainContractInfo">
            <summary>
            主力合约数据信息
            </summary>
        </member>
        <member name="P:CommonClassLib.MainContractInfo.FCommodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.MainContractInfo.FContractNo">
            <summary>
            合约编号
            </summary>
        </member>
        <member name="P:CommonClassLib.MainContractInfo.FBeginTime">
            <summary>
            有效开始日期（格式：yyyyMMdd）
            </summary>
        </member>
        <member name="P:CommonClassLib.MainContractInfo.FEndTime">
            <summary>
            有效结束日期（格式：yyyyMMdd）
            </summary>
        </member>
        <member name="T:CommonClassLib.MarketBackInfo">
            <summary>
            行情不需要显示部分的信息类
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.needFreshFlag">
            <summary>
            是否行情数据需要刷新：false:不在当前可视范围内，不需要；true:在当前可视范围内，需要
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.hasStartFlag">
            <summary>
            是否上一个行情还没发送好：false:已经发送好，可以再发送了；true:还在发送中
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.needResetFlag">
            <summary>
            是否需要复位，true:需要；false:不需要
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.dotLength">
            <summary>
            价格小数点位数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.dotLength_Carry">
            <summary>
            调期价格小数点位数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.unit">
            <summary>
            进价单位（国债小数点位数是4，进价单位是3200，即到0.32便整数加一）
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.FExpireDay">
            <summary>
            合约到期日
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.maxOrderNumber">
            <summary>
            最大下单量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.freezenPercent">
            <summary>
            冻结资金百分比
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.freezenMoney">
            <summary>
            冻结保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.feeMoney">
            <summary>
            固定手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.feePercent">
            <summary>
            百分比手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastPrice">
            <summary>
            最新价（计算浮盈用）
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastNumber">
            <summary>
            最新现手
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastBuyPrice">
            <summary>
            最新买价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastSalePrice">
            <summary>
            最新卖价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastBuyNumber">
            <summary>
            最新买量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastSaleNumber">
            <summary>
            最新卖量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastHigh">
            <summary>
            最新最高价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastLow">
            <summary>
            最新最低价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastOpen">
            <summary>
            最新开盘价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastFilledNumber">
            <summary>
            最新成交量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastHoldNumber">
            <summary>
            最新持仓量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastOldClose">
            <summary>
            最新昨结算
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.lastTime">
            <summary>
            最新更新时间
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.MarketData">
            <summary>
            最新行情数据
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.marketData">
            <summary>
            最新行情数据
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.jiaoyisuo_code">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.commodityNo">
            <summary>
            商品编码
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.minPriceChange">
            <summary>
            最小价格变动数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.minPriceChange_Carry">
            <summary>
            最小价格变动数调期用
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.productType">
            <summary>
            商品类型（O：期权；F：期货；S：跨期）
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.productDot">
            <summary>
            点值（一个最小价格变动数对应的金额）
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.currencyNo">
            <summary>
            货币编号
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.advPrice">
            <summary>
            均价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.holdCompare">
            <summary>
            持仓走势
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.date">
            <summary>
            日期
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.time">
            <summary>
            时间
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyPrice2">
            <summary>
            买价2
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyPrice2">
            <summary>
            买价2
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyNumber2">
            <summary>
            买量2
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyNumber2">
            <summary>
            买量2
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SalePrice2">
            <summary>
            卖价2
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.salePrice2">
            <summary>
            卖价2
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SaleNumber2">
            <summary>
            卖量2
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.saleNumber2">
            <summary>
            卖量2
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyPrice3">
            <summary>
            买价3
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyPrice3">
            <summary>
            买价3
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyNumber3">
            <summary>
            买量3
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyNumber3">
            <summary>
            买量3
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SalePrice3">
            <summary>
            卖价3
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.salePrice3">
            <summary>
            卖价3
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SaleNumber3">
            <summary>
            卖量3
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.saleNumber3">
            <summary>
            卖量3
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyPrice4">
            <summary>
            买价4
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyPrice4">
            <summary>
            买价4
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyNumber4">
            <summary>
            买量4
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyNumber4">
            <summary>
            买量4
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SalePrice4">
            <summary>
            卖价4
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.salePrice4">
            <summary>
            卖价4
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SaleNumber4">
            <summary>
            卖量4
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.saleNumber4">
            <summary>
            卖量4
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyPrice5">
            <summary>
            买价5
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyPrice5">
            <summary>
            买价5
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyNumber5">
            <summary>
            买量5
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyNumber5">
            <summary>
            买量5
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SalePrice5">
            <summary>
            卖价5
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.salePrice5">
            <summary>
            卖价5
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SaleNumber5">
            <summary>
            卖量5
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.saleNumber5">
            <summary>
            卖量5
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyOrderNumber">
            <summary>
            买1下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyOrderNumber">
            <summary>
            买1下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyOrderNumber2">
            <summary>
            买2下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyOrderNumber2">
            <summary>
            买2下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyOrderNumber3">
            <summary>
            买3下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyOrderNumber3">
            <summary>
            买3下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyOrderNumber4">
            <summary>
            买4下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyOrderNumber4">
            <summary>
            买4下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.BuyOrderNumber5">
            <summary>
            买5下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.buyOrderNumber5">
            <summary>
            买5下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SaleOrderNumber">
            <summary>
            卖1下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.saleOrderNumber">
            <summary>
            卖1下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SaleOrderNumber2">
            <summary>
            卖2下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.saleOrderNumber2">
            <summary>
            卖2下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SaleOrderNumber3">
            <summary>
            卖3下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.saleOrderNumber3">
            <summary>
            卖3下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SaleOrderNumber4">
            <summary>
            卖4下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.saleOrderNumber4">
            <summary>
            卖4下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.SaleOrderNumber5">
            <summary>
            卖5下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.saleOrderNumber5">
            <summary>
            卖5下单数
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.Theory_Price">
            <summary>
            理论价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.theory_Price">
            <summary>
            理论价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.type">
            <summary>
            行情区分
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.rowIndex">
            <summary>
            行索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_currPrice">
            <summary>
            最新价列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_currNumber">
            <summary>
            现手列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_buyPrice">
            <summary>
            买价列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_buyNumber">
            <summary>
            买量列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_salePrice">
            <summary>
            卖价列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_saleNumber">
            <summary>
            卖量列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_upDown">
            <summary>
            涨跌列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_upDownPercent">
            <summary>
            涨幅%列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_high">
            <summary>
            最高价列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_low">
            <summary>
            最低价列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_minReducePrice">
            <summary>
            涨停价列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_maxAddPrice">
            <summary>
            跌停价列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.columnIndex_open">
            <summary>
            开盘价列索引
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketBackInfo.Color_currPrice">
            <summary>
            绑定的数据表对象
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.hideBuyPrice">
            <summary>
            隐藏买价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.hideBuyNumber">
            <summary>
            隐藏买量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.hideSalePrice">
            <summary>
            隐藏卖价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketBackInfo.hideSaleNumber">
            <summary>
            隐藏卖量
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.TICK">
            <summary>
            Tick线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.TIME">
            <summary>
            Time线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.SEC30">
            <summary>
            30秒线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.MIN01">
            <summary>
            一分钟线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.MIN03">
            <summary>
            三分钟线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.MIN05">
            <summary>
            五分钟线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.MIN15">
            <summary>
            十五分钟线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.MIN30">
            <summary>
            三十分钟线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.MIN60">
            <summary>
            六十分钟线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.DAY">
            <summary>
            日线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.WEEK">
            <summary>
            周线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.MONTH">
            <summary>
            月线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.YEAR">
            <summary>
            年线
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.ANY_SECONDS">
            <summary>
            任意秒
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.ANY_MINUTES">
            <summary>
            任意分钟
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.ANY_DAYS">
            <summary>
            任意天
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.FILE_LOC_FILE">
            <summary>
            数据从文件取得
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.FILE_LOC_MESSAGE">
            <summary>
            数据从消息服务器取得
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.FILE_LOC_MARKET">
            <summary>
            数据从行情服务器取得
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.INETERVAL_SECOND">
            <summary>
            秒间隔
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.INETERVAL_MINUTE">
            <summary>
            分钟间隔
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.INETERVAL_DAY">
            <summary>
            日间隔
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.INETERVAL_WEEK">
            <summary>
            周间隔
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.INETERVAL_MONTH">
            <summary>
            月间隔
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.INETERVAL_YEAR">
            <summary>
            年间隔
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.SEND_MESSAGE_TT">
            <summary>
            消息服务器请求TIME-TIME格式
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketConst.SEND_MESSAGE_TO">
            <summary>
            消息服务器请求TIME-OFFSET格式
            </summary>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.readDataFileFast(System.String)">
            <summary>
            快速读取文件
            </summary>
            <param name="dataFile">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.findLastTime(System.String[])">
            <summary>
            取文件中最后的行情时间
            </summary>
            <param name="fileContent">文件内容</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.getDataFromMarketAly(System.Collections.Generic.List{CommonClassLib.MarketDataForAly}@,CommonClassLib.MarketDataForAly,System.String)">
            <summary>
            根据marketDataForAly类计算K线行情
            </summary>
            <param name="lstMarketData"></param>
            <param name="marketDataForAly"></param>
            <param name="type"></param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.getDataFromFile(System.Collections.Generic.List{CommonClassLib.MarketDataForAly}@,System.String,System.String,System.String,System.Boolean)">
            <summary>
            从文件读取历史行情数据
            </summary>
            <param name="lstFile">计算好的K线数据</param>
            <param name="type">K线区分（一分钟线，五分钟线，日线，周线等）</param>
            <param name="ExchangeNo">交易所代码</param>       
            <param name="ContractNo">合约号</param>
            <param name="isCal">是否计算K线</param>        
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.getBaseDataType(System.String)">
            <summary>
            根据时间区分取得基本数据的时间区分
            </summary>
            <param name="type">时间区分（1分钟，3分钟，5分钟，15分钟，日，月，年等）</param>
            <returns>基本数据的时间区分</returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.changeKtype(System.String)">
            <summary>
            变成消息服务器的请求区分
            </summary>
            <param name="ktype">K线区分</param>
            <returns>转换好的K线区分</returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.calKlineData(System.Collections.Generic.List{CommonClassLib.MarketDataForAly}@,CommonClassLib.MarketDataForAly)">
            <summary>
            计算K线数据
            </summary>
            <param name="lstData"></param>
            <param name="data"></param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.createInterVal">
            <summary>
            生成间隔时间
            </summary>
            <returns>间隔区分</returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.calCellingDatTime(System.DateTime,System.String,System.String[])">
            <summary>
            根据行情时间，计算本次行情的间隔时间
            </summary>
            <param name="unCalTime">行情时间</param>
            <param name="location">读取数据的位置（文件，消息服务器，行情服务器）</param>
            <param name="p">间隔时间情报</param>
            <returns>计算好的间隔时间</returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.AddRestTimeToDayFrom(System.Collections.Generic.List{CommonClassLib.MarketDataAnalysis.TradeTime},CommonClassLib.CommodityTradeTimeInfo,CommonClassLib.CommodityTradeTimeInfo,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.String,System.Boolean)">
            <summary>
            多段交易时段的情况下，加上休息时间
            </summary>
            <param name="lstTradeTimeInfo">所有的交易时间段</param>
            <param name="tradeTimeInfo">本次交易时间段</param>
            <param name="tradeTimeInfoNext">下次的交易时间段</param>
            <param name="from">本次交易开始时间</param>
            <param name="to">本次交易结束时间</param>
            <param name="dayFrom">本日交易开始时间</param>
            <param name="dayTo">本日交易结束时间</param>
            <param name="calTime">已经计算好的KLine时间</param>
            <param name="unCalTime">行情时间</param>
            <param name="interval">K线间隔</param>
            <param name="isMinute">是否是分钟线（true 分钟 false 秒）</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.createDataPath(System.String,System.String,System.String)">
            <summary>
            根据合约号，生成文件的名字（包括路径）
            </summary>
            <param name="type">K线区分</param>
            <param name="ExchangeNo">市场编号</param>
            <param name="ContractNo">合约编号</param>
            <returns>生成好文件的名字（包括路径）</returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.saveMarketDataToFile(System.Collections.Generic.List{CommonClassLib.MarketDataForAly},System.String)">
            <summary>
            把行情写到文件
            </summary>
            <param name="lstData">K线数据</param>
            <param name="filePath">文件的全路径</param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.saveMarketDataToFile(System.Collections.Generic.List{CommonClassLib.MarketDataForAly},System.String,System.String,System.String,System.DateTime,System.Boolean)">
            <summary>
            把行情写到文件
            </summary>
            <param name="lstData">K线数据</param>
            <param name="type">K线区分</param>
            <param name="ExchangeNo">交易所编号</param>
            <param name="ContractNo">合约编号</param>
            <param name="tradeDay">交易日</param>
            <param name="isOverWrite">是否覆盖文件</param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.getDataFromMarket(System.Collections.Generic.List{CommonClassLib.MarketDataForAly}@,CommonClassLib.MarketInfo,System.String)">
            <summary>
            从行情服务器的行情数据解析K线数据
            </summary>
            <param name="lstData">K线数据集合</param>
            <param name="data">最新的行情数据</param>
            <param name="ktype">K线区分</param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.getDataFromMessage(System.Collections.Generic.List{CommonClassLib.MarketDataForAly}@,System.Collections.Generic.List{CommonClassLib.MarketDataForAly},System.String)">
            <summary>
            从消息服务器的数据解析K线数据
            </summary>
            <param name="lstData">加工好的K线数据集合</param>
            <param name="data">未加工的K线数据集合</param>
            <param name="ktype">K线区分</param>        
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.getTimeDataFromMessage(System.Collections.Generic.List{CommonClassLib.MarketDataForAly})">
            <summary>
            从消息服务器读取实时数据，计算Time行情
            </summary>
            <param name="lstUnCalData"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.getTickDataFromMarket(System.Collections.Generic.List{CommonClassLib.MarketDataForAly}@,CommonClassLib.MarketDataForAly)">
            <summary>
            从行情服务器读取实时数据
            </summary>
            <param name="lstUnCalData">历史行情</param>
            <param name="data">最新行情</param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.getTimeDataFromMarket(System.Collections.Generic.List{CommonClassLib.MarketDataForAly}@,CommonClassLib.MarketInfo,System.String)">
            <summary>
            从行情服务器计算分时数据（1分钟为一单位）
            </summary>
            <param name="lstData">历史行情</param>
            <param name="data">最新行情</param>
            <param name="location">保存位置</param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.SortA(CommonClassLib.MarketDataForAly,CommonClassLib.MarketDataForAly)">
            <summary>
            对行情时间进行排序
            </summary>
            <param name="a1">MarketDataForAly类1</param>
            <param name="a2">MarketDataForAly类2</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.mergeMarketData(System.Collections.Generic.List{CommonClassLib.MarketDataForAly}@,System.Collections.Generic.List{CommonClassLib.MarketDataForAly})">
            <summary>
            合并K线数据
            </summary>
            <param name="lstMerged">合并好的K线数据</param>
            <param name="lstUnMerged">未合并好的K线数据</param>
        </member>
        <member name="T:CommonClassLib.MarketDataAnalysis.MarketComparer">
            <summary>
            去除重复的数据
            </summary>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.mergeMarketDataForAll(System.Collections.Generic.List{CommonClassLib.MarketDataForAly}@,System.Collections.Generic.List{CommonClassLib.MarketDataForAly},System.Collections.Generic.List{CommonClassLib.MarketDataForAly},System.Collections.Generic.List{CommonClassLib.MarketDataForAly})">
            <summary>
            合并文件，消息，行情的K线数据
            </summary>
            <param name="lstMerged">合并好的K线数据</param>
            <param name="lstFile">文件里的K线数据</param>
            <param name="lstMessage">消息服务器的K线数据</param>
            <param name="lstMarket">行情服务器的K线数据</param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.convertMarketDataFromMessage(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            将消息服务器的行情数据转化成MarketDataForAly类
            </summary>
            <param name="strMarket">消息服务器的行情数据</param>
            <param name="ktype">k线区分</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.convertMarketDataFromMessage(System.String,System.String)">
            <summary>
            将消息服务器的行情数据转化成MarketDataForAly类
            </summary>
            <param name="strMarket">消息服务器的行情数据</param>
            <param name="ktype">k线区分</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.calPriceDot(System.String,System.Int32)">
            <summary>
            计算价格的小数点位数
            </summary>
            <param name="price">价格</param>
            <param name="dotLength">现在的小数点位数</param>
            <returns>算完以后的小数点位数</returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.mergeTickData(System.Collections.Generic.List{CommonClassLib.MarketDataForAly}@,System.Collections.Generic.List{CommonClassLib.MarketDataForAly},System.DateTime)">
            <summary>
            合并Tick的数据
            </summary>        
            <param name="lstFile">Tick文件里的数据</param>
            <param name="lstMessage">Tick消息里的数据</param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.convertYCloseFromMessage(System.String)">
            <summary>
            将消息服务器的昨结算等数据转化成MarketDataForAly类
            </summary>
            <param name="strMarket">消息服务器的昨结算数据</param>        
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.calTradeDay(System.DateTime)">
            <summary>
            计算交易日
            </summary>
            <param name="ucCalDay">没计算的日期</param>
            <returns>计算好的交易日</returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.getYCloseData(System.Collections.Generic.Dictionary{System.String,CommonClassLib.MarketDataForAly},System.DateTime)">
            <summary>
            取相对应的昨结算
            </summary>
            <param name="lstData"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.needCompress(System.DateTime,System.DateTime,System.String)">
            <summary>
            是否需要压缩文件方式请求
            </summary>
            <param name="startDay">开始时间</param>
            <param name="tradeDay">交易日</param>
            <param name="ktyp">K线区分</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.createDataFolder">
            <summary>
            生成存放数据的文件夹
            </summary>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.setSingeDstInfo(System.String,System.String,System.Collections.Generic.List{CommonClassLib.DstInfo})">
            <summary>
            取一个市场的夏令冬令历史时间
            </summary>
            <param name="exChangeNo">市场编号</param>
            <param name="commodityNo">商品编号</param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.setSingeTradeTime(System.String,System.Collections.Generic.List{CommonClassLib.CommodityTradeTimeInfo})">
            <summary>
            取一个商品的交易时间
            </summary>
            <param name="commodityNo">商品编号编号</param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.setSingeTradeTime(System.String,System.String,System.Collections.Generic.List{CommonClassLib.CommodityTradeTimeInfo})">
            <summary>
            取一个商品的交易时间(根据交易所)
            </summary>
            <param name="commodityNo">商品编号编号</param>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.calCommodityTradeTime(System.DateTime)">
            <summary>
            根据行情时间计算开闭市时间
            </summary>
            <param name="marketTime">行情时间</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.getSingleTradeTimeInfoBySW(System.DateTime)">
            <summary>
            根据行情时间计算开闭市时间列表
            </summary>
            <param name="marketTime">行情时间</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.calAnyDaysData(System.Collections.Generic.List{CommonClassLib.MarketDataForAly})">
            <summary>
            合计多日线的数据
            </summary>
            <param name="lstUnCal">未合计的多日线数据</param>
            <returns>合计好的多日线数据</returns>
        </member>
        <member name="M:CommonClassLib.MarketDataAnalysis.calAnyDaysDataFromMarket(System.Collections.Generic.List{CommonClassLib.MarketDataForAly}@,CommonClassLib.MarketInfo)">
            <summary>
            从行情计算多日线数据
            </summary>        
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.marketTime">
            <summary>
            行情时间
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.open">
            <summary>
            开盘价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.close">
            <summary>
            收盘价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.high">
            <summary>
            最高价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.low">
            <summary>
            最低价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.tradeVol">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.holdVol">
            <summary>
            持仓量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.location">
            <summary>
            取得方式
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.isCal">
            <summary>
            是否计算完成
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.type">
            <summary>
            K线区分
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.yClose">
            <summary>
            昨结算
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketDataForAly.marketData">
            <summary>
            行情类 
            </summary>
        </member>
        <member name="T:CommonClassLib.MarketInfoDisplay">
            <summary>
            行情列表显示信息的类
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.Jiaoyisuo_name">
            <summary>
            交易所名称
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.jiaoyisuo_name">
            <summary>
            0：交易所名称
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.CurrencyName">
             <summary>
            货币名称 
             </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.currencyName">
            <summary>
            3：货币名称
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.ContractNo">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.contractNo">
            <summary>
            1：合约代码
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.name">
            <summary>
            2：名称
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.OldTradePrice">
            <summary>
            前结算
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.oldTradePrice">
            <summary>
            17：前结算
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.CurrPrice">
            <summary>
            最新价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.currPrice">
            <summary>
            4：最新价
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.CurrNumber">
            <summary>
            现手
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.currNumber">
            <summary>
            5：现手
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.BuyPrice">
            <summary>
            买价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.buyPrice">
            <summary>
            6：买价
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.BuyNumber">
            <summary>
            买量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.buyNumber">
            <summary>
            7：买量
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.SalePrice">
            <summary>
            卖价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.salePrice">
            <summary>
            8：卖价
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.SaleNumber">
            <summary>
            卖量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.saleNumber">
            <summary>
            9：卖量
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.TotalNumber">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.totalNumber">
            <summary>
            13：成交量
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.UpDown">
            <summary>
            涨跌
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.upDown">
            <summary>
            11：涨跌
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.UpDownPercent">
            <summary>
            涨幅%
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.upDownPercent">
            <summary>
            24：涨幅%
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.Open">
            <summary>
            开盘价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.open">
            <summary>
            14：开盘价
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.Low">
            <summary>
            最低价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.low">
            <summary>
            22：最低价
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.Hhigh">
            <summary>
            最高价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.high">
            <summary>
            21：最高价
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.OldClose">
            <summary>
            前收盘
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.oldClose">
            <summary>
            15：前收盘
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.HoldNumber">
            <summary>
            持仓量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.holdNumber">
            <summary>
            12：持仓量
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.Total">
            <summary>
            成交额
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.total">
            <summary>
            10：成交额
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.TradePrice">
            <summary>
            结算价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.tradePrice">
            <summary>
            16：结算价
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.MinReducePrice">
            <summary>
            跌停价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.minReducePrice">
            <summary>
            18：跌停价
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.MaxAddPrice">
            <summary>
            涨停价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.maxAddPrice">
            <summary>
            19：涨停价
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.OldNumber">
            <summary>
            前持仓
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.oldNumber">
            <summary>
            20：前持仓
            </summary>
        </member>
        <member name="F:CommonClassLib.MarketInfoDisplay.Close">
            <summary>
            收盘价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfoDisplay.close">
            <summary>
            23：收盘价
            </summary>
        </member>
        <member name="M:CommonClassLib.MarketInfoDisplay.updateMarketData">
            <summary>
            刷新行情数据显示
            </summary>
        </member>
        <member name="M:CommonClassLib.MarketInfoDisplay.updateLastData(CommonClassLib.MarketInfoDisplay,CommonClassLib.MarketInfo)">
            <summary>
            更新到最新数据中
            </summary>
        </member>
        <member name="M:CommonClassLib.MarketInfoDisplay.updateFirstMarketData">
            <summary>
            刷新第一笔行情数据
            </summary>
        </member>
        <member name="M:CommonClassLib.MarketInfoDisplay.updateColor(System.Decimal,System.Drawing.Color@)">
            <summary>
            根据价格更新颜色
            </summary>
            <param name="price"></param>
            <param name="columnIndex"></param>
        </member>
        <member name="M:CommonClassLib.MarketInfoDisplay.updateColorByUpdown(System.Decimal,System.Drawing.Color@)">
            <summary>
            根据价格更新颜色
            </summary>
            <param name="price"></param>
            <param name="columnIndex"></param>
        </member>
        <member name="T:CommonClassLib.MarketInfo">
            <summary>
            行情数据返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.buyPrice">
            <summary>
            买价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.buyNumber">
            <summary>
            买量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.salePrice">
            <summary>
            卖价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.saleNumber">
            <summary>
            卖量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.currPrice">
            <summary>
            最新价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.currNumber">
            <summary>
            现量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.high">
            <summary>
            当天最高价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.low">
            <summary>
            当天最低价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.open">
            <summary>
            开盘价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.oldClose">
            <summary>
            昨结算
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.close">
            <summary>
            当天结算价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.time">
            <summary>
            行情时间
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.filledNum">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.holdNum">
            <summary>
            持仓量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.buyPrice2">
            <summary>
            买价2
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.buyPrice3">
            <summary>
            买价3
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.buyPrice4">
            <summary>
            买价4
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.buyPrice5">
            <summary>
            买价5
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.buyNumber2">
            <summary>
            买量2
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.buyNumber3">
            <summary>
            买量3
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.buyNumber4">
            <summary>
            买量4
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.buyNumber5">
            <summary>
            买量5
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.salePrice2">
            <summary>
            卖价2
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.salePrice3">
            <summary>
            卖价3
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.salePrice4">
            <summary>
            卖价4
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.salePrice5">
            <summary>
            卖价5
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.saleNumber2">
            <summary>
            卖量2
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.saleNumber3">
            <summary>
            卖量3
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.saleNumber4">
            <summary>
            卖量4
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.saleNumber5">
            <summary>
            卖量5
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.hideBuyPrice">
            <summary>
            隐藏买价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.hideBuyNumber">
            <summary>
            隐藏买量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.hideSalePrice">
            <summary>
            隐藏卖价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.hideSaleNumber">
            <summary>
            隐藏卖量
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.type">
            <summary>
            行情区分
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.limitDownPrice">
            <summary>
            跌停价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.limitUpPrice">
            <summary>
            涨停价
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.tradeDay">
            <summary>
            交易日
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.tradeFlag">
            <summary>
            港交所股票行情：成交类型
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.dataTimestamp">
            <summary>
            交易所数据时间戳
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.dataSourceId">
            <summary>
            数据来源。考虑到不同交易所可能有不同数据时间戳格式，可以用该字段确定数据来源
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.canSellVol">
            <summary>
            可卖空股数（美股行情用 mantis6868）
            </summary>
        </member>
        <member name="P:CommonClassLib.MarketInfo.extendPrice">
            <summary>
            其他价格
            美股:盘前，盘后价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyClientPWS.userCode">
            <summary>
            用户代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyClientPWS.oldPws">
            <summary>
            用户原密码
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyClientPWS.newPws">
            <summary>
            用户新密码
            </summary>
        </member>
        <member name="T:CommonClassLib.MoneyApplyInfo">
            <summary>
            客户端出入金申请信息
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.clientNo">
            <summary>
            客户的登录ID
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.type">
            <summary>
            出入金类型(O:出金;I:入金)
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.inMethod">
            <summary>
            入金方式(C:现金;K:支票)
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.moneyUsing">
            <summary>
            资金用途(A:转账;E:换汇;T:手续费;F:盈亏；T：资金调拨)
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.currencyNo">
            <summary>
            币种
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.money">
            <summary>
            出入金金额
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.inBankName">
            <summary>
            入金银行
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.inUserName">
            <summary>
            入金姓名
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.inAccountNo">
            <summary>
            入金银行账号
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.outBankName">
            <summary>
            出金银行
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.outUserName">
            <summary>
            出金姓名
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.outAccountNo">
            <summary>
            出金银行账号
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.accountType">
            <summary>
            帐户类型（0：期货，1：港股，2：国内股票，3：美股） 
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.toFuturesAccountNo">
            <summary>
            转账至期货帐户(港股提款时用)
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.validDate">
            <summary>
            生效日期（yyyy-MM-dd） 
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyInfo.transferMethod">
            <summary>
            转账方式（1：本地银行转帐；2：参与行转账）
            </summary>
        </member>
        <member name="T:CommonClassLib.MoneyApplyResponseInfo">
            <summary>
            出入金申请返回信息
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.clientNo">
            <summary>
            客户的登录ID
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.type">
            <summary>
            出入金类型(O:出金;I:入金)
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.inMethod">
            <summary>
            入金方式(C:现金;K:支票)
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.moneyUsing">
            <summary>
            资金用途(A:转账;E:换汇;T:手续费;F:盈亏；T：资金调拨)
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.currencyNo">
            <summary>
            币种
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.money">
            <summary>
            出入金金额
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.inBankName">
            <summary>
            入金银行
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.inAccountNo">
            <summary>
            入金银行账号
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.outBankName">
            <summary>
            出金银行
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.outAccountNo">
            <summary>
            出金银行账号
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.sequenceNo">
            <summary>
            出入金编号
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.applyDateTime">
            <summary>
            出入金申请日期时间（yyyy-MM-dd hh24:mm:ss）
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.applyStatus">
            <summary>
            出入金申请状态（S：提交中；A：审核中；T：已审核；U：回退中；F：申请失败）
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.inUserName">
            <summary>
            入金姓名
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.outUserName">
            <summary>
            出金姓名
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.accountType">
            <summary>
            帐户类型（0：期货，1：港股，2：国内股票，3：美股） 
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplyResponseInfo.toFuturesAccountNo">
            <summary>
            转账至期货帐户(港股提款时用)
            </summary>
        </member>
        <member name="T:CommonClassLib.MoneyApplySearchInfo">
            <summary>
            取得客户出入金申请数据列表请求信息
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplySearchInfo.clientNo">
            <summary>
            客户的登录ID
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplySearchInfo.beginDate">
            <summary>
            开始日期（yyyy-MM-dd）
            </summary>
        </member>
        <member name="P:CommonClassLib.MoneyApplySearchInfo.endDate">
            <summary>
            结束日期（yyyy-MM-dd）
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.code">
            <summary>
            识别是哪种类型通信的代码
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.localSystemCode">
            <summary>
            本地系统编号，识别是系统号
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.systemCode">
            <summary>
            系统编号，识别是那个客户端
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.todayCanUse">
            <summary>
            可用资金
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.infoT">
            <summary>
            通信内容的字符串
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.errorCode">
            <summary>
            返回错误代码
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.accountNo">
            <summary>
            用户账户
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.errorMsg">
            <summary>
            返回错误信息
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.clientNo">
            <summary>
            客户编号
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.compress">
            <summary>
            是否压缩数据（1：压缩（返回数据中不带汉字）；2：压缩（返回数据中带汉字的）；其他：不压缩）
            </summary>
        </member>
        <member name="P:CommonClassLib.NetInfo.RequestNo">
            <summary>
            请求和返回指令的编号
            </summary>
        </member>
        <member name="F:CommonClassLib.NetInfo.compressedFlag">
            <summary>
            是否已经压缩或者解压过
            </summary>
        </member>
        <member name="T:CommonClassLib.NetInfoEventHandler.InfoEvent">
            <summary>
            事件把接收到的消息，抛出去，给外面的程序调用
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:CommonClassLib.NetInfoEventHandler.eventArg">
            <summary>
            向外传递信息的事件类
            </summary>
        </member>
        <member name="T:CommonClassLib.OpenResponseInfo">
            <summary>
            持仓查询请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.buySale">
            <summary>
            买还是卖：1=buy 2=sell
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.openNumber">
            <summary>
            持仓数
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.openPrice">
            <summary>
            持仓均价
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.caseProfit">
            <summary>
            逐笔盈亏
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.marketProfit">
            <summary>
            盯市盈亏
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.singleProfit">
            <summary>
            单笔盈亏
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.errorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.holdType">
            <summary>
            持仓类型：0 昨仓； 1 今仓
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.initOpenPrice">
            <summary>
            原始开仓均价
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenResponseInfo.FClientNo">
            <summary>
            账户号
            </summary>
        </member>
        <member name="T:CommonClassLib.OpenSearchInfo">
            <summary>
            持仓查询请求信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenSearchInfo.accountNo">
            <summary>
            资金账号
            </summary>        
        </member>
        <member name="P:CommonClassLib.OpenSearchInfo.tradePwd">
            <summary>
            交易密码
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenSearchInfo.tradeDate">
            <summary>
            交易日期
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenSearchInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenSearchInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OpenSearchInfo.buySale">
            <summary>
            买还是卖：1=buy 2=sell
            </summary>
        </member>
        <member name="T:CommonClassLib.OrderMarkerInfo">
            <summary>
            发送做市商定单请求信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.userType">
            <summary>
            用户类型：1：一般用户；2：机构通用户；
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.tradePwd">
            <summary>
            交易密码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.FIsRiskOrder">
            <summary>
            用户下单类型：C或是空客户下单；D：是del下单 R：强平下单（风控）；Y：盈损单；T：条件单
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.orderNumberBuy">
            <summary>
            买下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.orderPriceBuy">
            <summary>
            买下单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.orderNumberSale">
            <summary>
            卖下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.orderPriceSale">
            <summary>
            卖下单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.tradeType">
            <summary>
            交易方式：1=regular 2=FOK 3=IOC
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.priceType">
            <summary>
            定单类型：1=限价单, 2=市价单，3=限价止损（stop to limit），4=止损（stop to market）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.htsType">
            <summary>
            跨期合约下单： "STARTEGY";自定义策略下单："SELFDEFINE"
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.flID">
            <summary>
            强平编号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.triggerPrice">
            <summary>
            触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.validDate">
            <summary>
            有效日期（1=当日有效, 2=永久有效（GTC），3=OPG，4=IOC，5=FOK，6=GTD，7=ATC，8=FAK）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.strategyId">
            <summary>
            策略ID 20130726 add
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.MaxShow">
            <summary>
            显示委托量 20150803 add 必须小于委托量
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerInfo.MinQty">
            <summary>
            最小成交量 20150901 add 必须小于等于委托量 有效日期=4IOC时 MaxShow>=1小于委托量时是FOK，等于委托量时是FAK
            </summary>
        </member>
        <member name="T:CommonClassLib.OrderInfo">
            <summary>
            发送定单请求信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.userType">
            <summary>
            用户类型：1：一般用户；2：机构通用户；
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.tradePwd">
            <summary>
            交易密码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.FIsRiskOrder">
            <summary>
            用户下单类型：C或是空客户下单；D：是del下单 R：强平下单（风控）；Y：盈损单；T：条件单
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.buySale">
            <summary>
            买还是卖：1=buy 2=sell
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.addReduce">
            <summary>
            开仓还是平仓：1=开仓 2=平仓，3=平今
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.orderNumber">
            <summary>
            下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.orderPrice">
            <summary>
            下单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.tradeType">
            <summary>
            交易方式：1=regular 2=FOK 3=IOC
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.priceType">
            <summary>
            定单类型：1=限价单, 2=市价单，3=限价止损（stop to limit），4=止损（stop to market）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.htsType">
            <summary>
            跨期合约下单： "STARTEGY";自定义策略下单："SELFDEFINE"
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.flID">
            <summary>
            强平编号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.triggerPrice">
            <summary>
            触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.validDate">
            <summary>
            有效日期（1=当日有效, 2=永久有效（GTC），3=OPG，4=IOC，5=FOK，6=GTD，7=ATC，8=FAK）A=盘前盘后
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.strategyId">
            <summary>
            策略ID 20130726 add
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.MaxShow">
            <summary>
            显示委托量 20150803 add 必须小于委托量
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.MinQty">
            <summary>
            最小成交量 20150901 add 必须小于等于委托量 有效日期=4IOC时 MaxShow>=1小于委托量时是FOK，等于委托量时是FAK
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.FCommodityNo">
            <summary>
            商品号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.FContractNo">
            <summary>
            合约号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.OrdSourceType">
            <summary>
            CME的需求，需要识别每个订单是从什么类型的终端发出的
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.Tag50">
            <summary>
            Tag50字段
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.GiveUpFirm">
            <summary>
            这个写接收方的firm ID
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.CmtaGiveupCD">
            <summary>
            写GU表示这是giveup的单子
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.NoAlloc">
            <summary>
            写死1
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.AllocAccount">
            <summary>
            这个是在对方接受账户的账号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.CommodityType">
             <summary>
             股票类型
            0	股票
            1	窝轮及牛熊证
            2	认股权
            3	ETF
            4	债券
            5	信托
            6	其他
            8	指数
             </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.Area">
            <summary>
            Tag142 申报地区
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.IsMemberAccount">
            <summary>
            0：普通账号，1：综合账号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderInfo.AllocateClientNo">
            <summary>
            调拨客户号
            </summary>
        </member>
        <member name="T:CommonClassLib.OrderMarkerResponseInfo">
            <summary>
            做市商定单请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.userId">
            <summary>
            用户ID
            </summary>        
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.systemNo">
            <summary>
            系统编号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.localNo">
            <summary>
            本地编号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.orderNo">
            <summary>
            定单号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.origOrderNo">
            <summary>
            原定单号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.orderMethod">
            <summary>
            下单方式：1：定单；2：改单；3：撤单
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.acceptType">
            <summary>
            下单接受类型：0：未接受；1：已接受；2：被拒绝了；3：撤单
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.orderNumberBuy">
            <summary>
            买下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.orderPriceBuy">
            <summary>
            买下单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.orderNumberSale">
            <summary>
            卖下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.orderPriceSale">
            <summary>
            卖下单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.filledNumberBuy">
            <summary>
            买已成交数
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.filledPriceBuy">
            <summary>
            买成交均价
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.filledNumberSale">
            <summary>
            卖已成交数
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.filledPriceSale">
            <summary>
            卖成交均价
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.tradeType">
            <summary>
            交易方式：1=regular 2=FOK 3=IOC
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.priceType">
            <summary>
            定单类型：1=限价单, 2=市价单，3=限价止损（stop to limit），4=止损（stop to market）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.htsType">
            <summary>
            0=regular 1=HTS
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.orderDate">
            <summary>
            下单日期
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.orderTime">
            <summary>
            下单时间
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.errorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.orderState">
            <summary>
            订单状态（1：已请求；2：已排队；3：部分成交；4：完全成交；5：已撤余单；6：已撤单；7：指令失败；8：待送出；9：待更改；A：待撤单）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.FIsRiskOrder">
            <summary>
            用户下单类型：C或是空客户下单；D：是del下单 R：强平下单（风控）；Y：盈损单；T：条件单
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.cancelUserId">
            <summary>
            撤单的用户ID
            </summary>        
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.triggerPrice">
            <summary>
            触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.validDate">
            <summary>
            有效日期（1=当日有效, 2=永久有效（GTC），3=OPG，4=IOC，5=FOK，6=GTD，7=ATC，8=FAK）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.strategyId">
            <summary>
            策略ID 20130726 add
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.MaxShow">
            <summary>
            显示委托量 20150803 add 必须小于委托量
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.MinQty">
            <summary>
            最小成交量 20150901 add 必须小于等于委托量 有效日期=4时 MaxShow>=1小于委托量时是FOK，等于委托量时是FAK
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.exchangeTime">
            <summary>
            交易所返回时间(yyyy-MM-dd hh24:mm:ss) 20151214 add
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderMarkerResponseInfo.cancelTime">
            <summary>
            撤单时间 (HH:mm:ss)20150715 add
            </summary>
        </member>
        <member name="T:CommonClassLib.OrderResponseInfo">
            <summary>
            定单请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.userId">
            <summary>
            用户ID
            </summary>        
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.systemNo">
            <summary>
            系统编号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.localNo">
            <summary>
            本地编号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.orderNo">
            <summary>
            定单号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.origOrderNo">
            <summary>
            原定单号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.orderMethod">
            <summary>
            下单方式：1：定单；2：改单；3：撤单
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.acceptType">
            <summary>
            下单接受类型：0：未接受；1：已接受；2：被拒绝了；3：撤单
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.buySale">
            <summary>
            买还是卖：1=buy 2=sell
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.orderNumber">
            <summary>
            下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.orderPrice">
            <summary>
            下单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.filledNumber">
            <summary>
            已成交数
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.filledPrice">
            <summary>
            成交均价
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.tradeType">
            <summary>
            交易方式：1=regular 2=FOK 3=IOC
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.priceType">
            <summary>
            定单类型：1=限价单, 2=市价单，3=限价止损（stop to limit），4=止损（stop to market）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.htsType">
            <summary>
            0=regular 1=HTS
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.orderDate">
            <summary>
            下单日期
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.orderTime">
            <summary>
            下单时间
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.errorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.orderState">
            <summary>
            订单状态（1：已请求；2：已排队；3：部分成交；4：完全成交；5：已撤余单；6：已撤单；7：指令失败；8：待送出；9：待更改；A：待撤单）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.FIsRiskOrder">
            <summary>
            用户下单类型：C或是空客户下单；D：是del下单 R：强平下单（风控）；Y：盈损单；T：条件单
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.cancelUserId">
            <summary>
            撤单的用户ID
            </summary>        
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.triggerPrice">
            <summary>
            触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.validDate">
            <summary>
            有效日期（1=当日有效, 2=永久有效（GTC），3=OPG，4=IOC，5=FOK，6=GTD，7=ATC，8=FAK）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.addReduce">
            <summary>
            开仓还是平仓：1=开仓 2=平仓，3=平今，4=平昨
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.strategyId">
            <summary>
            策略ID 20130726 add
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.MaxShow">
            <summary>
            显示委托量 20150803 add 必须小于委托量
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.MinQty">
            <summary>
            最小成交量 20150901 add 必须小于等于委托量 有效日期=4时 MaxShow>=1小于委托量时是FOK，等于委托量时是FAK
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.exchangeTime">
            <summary>
            交易所返回时间(yyyy-MM-dd hh24:mm:ss) 20151214 add
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.cancelTime">
            <summary>
            撤单时间 (HH:mm:ss)20150715 add
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.Tag50">
            <summary>
            
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderResponseInfo.Area">
            <summary>
            Tag142 申报地区
            </summary>
        </member>
        <member name="T:CommonClassLib.OrderSearchInfo">
            <summary>
            定单查询请求信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderSearchInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderSearchInfo.userType">
            <summary>
            用户类型：1：一般用户；2：机构通用户；
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderSearchInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderSearchInfo.tradePwd">
            <summary>
            交易密码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderSearchInfo.isSimulation">
            <summary>
            是否模拟用户：1：是；0 or other：不是
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderSearchInfo.orderNo">
            <summary>
            取得指定订单号以后的定单
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderSearchInfo.orderDateTime">
            <summary>
            取得指定订单时间以后的定单（格式：yyyy-MM-dd hh:mm:ss）
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderRequest">
            <summary>
            订单请求
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderWait">
            <summary>
            订单排队
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderPartSuccess">
            <summary>
            部分成交
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderAllSuccess">
            <summary>
            全部成交
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderPartCancel">
            <summary>
            已撤余单
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderAllCancel">
            <summary>
            已撤单
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderRequestFailed">
            <summary>
            订单请求失败
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderWaitSend">
            <summary>
            订单待送出
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderWaitModify">
            <summary>
            订单待更改
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderWaitCancel">
            <summary>
            订单待撤单
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderRequestCd">
            <summary>
            订单请求
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderWaitCd">
            <summary>
            订单排队
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderPartSuccessCd">
            <summary>
            部分成交
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderAllSuccessCd">
            <summary>
            全部成交
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderPartCancelCd">
            <summary>
            部分撤单
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderAllCancelCd">
            <summary>
            全部撤单
            </summary>
        </member>
        <member name="F:CommonClassLib.OrderState.OrderRequestFailedCd">
            <summary>
            订单请求失败
            </summary>
        </member>
        <member name="T:CommonClassLib.OrderStatusInfo">
            <summary>
            定单最新状态信息类（包括成交信息，合约持仓信息）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.contractNo">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.orderNo">
            <summary>
            定单号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.orderNumber">
            <summary>
            委托数量
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.filledNumber">
            <summary>
            已成交数量
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.filledAdvPrice">
            <summary>
            成交均价
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.buyHoldNumber">
            <summary>
            持买数量
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.buyHoldOpenPrice">
            <summary>
            持买开仓均价
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.buyHoldPrice">
            <summary>
            持买均价
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.saleHoldNumber">
            <summary>
            持卖数量
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.saleHoldOpenPrice">
            <summary>
            持卖开仓均价
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.saleHoldPrice">
            <summary>
            持卖均价
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.isCanceled">
            <summary>
            是否已经撤单（0：没有；1：已撤单）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.filledTotalFee">
            <summary>
            成交总的手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.status">
            <summary>
            顺序号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.accountNo">
            <summary>
            资金帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.holdType">
            <summary>
            持仓类型（0：昨仓；1：今仓）
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.holdMarginBuy">
            <summary>
            持买保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.holdMarginSale">
            <summary>
            持卖保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.currPrice">
            <summary>
            最新价
            </summary>
        </member>
        <member name="P:CommonClassLib.OrderStatusInfo.floatProfit">
            <summary>
            浮动盈亏
            </summary>
        </member>
        <member name="T:CommonClassLib.PlateCommodityInfo">
            <summary>
            商品板块信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.FPlateGroupId">
            <summary>
            板块组id
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.FPlateGroupName">
            <summary>
            板块组名称
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.FPlateId">
            <summary>
            板块id
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.FPlateName">
            <summary>
            板块名称
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.FExchangeNo">
            <summary>
            交易所编号
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.FComodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.FPlateGroupNameEN">
            <summary>
            板块组名称（英文）
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.FPlateNameEN">
            <summary>
            板块名称（英文）
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.ModifyDate">
            <summary>
            最后更新日期（yyyy-MM-dd）
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.LastValidDate">
            <summary>
            最后有效日期（yyyy-MM-dd）
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.FPlateNameDisplay">
            <summary>
            板块名称（客户端显示用）
            </summary>
        </member>
        <member name="P:CommonClassLib.PlateCommodityInfo.FPlateGroupNameDisplay">
            <summary>
            板块组名称（客户端显示用）
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.currPrice">
            <summary>
            最新价
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.currNumber">
            <summary>
            现量
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.high">
            <summary>
            当天最高价
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.low">
            <summary>
            当天最低价
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.open">
            <summary>
            开盘价
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.oldClose">
            <summary>
            昨结算
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.close">
            <summary>
            当天结算价
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.time">
            <summary>
            行情时间
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.filledNum">
            <summary>
            成交量
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.holdNum">
            <summary>
            持仓量
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.hideBuyPrice">
            <summary>
            隐藏买价
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.hideBuyNumber">
            <summary>
            隐藏买量
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.hideSalePrice">
            <summary>
            隐藏卖价
            </summary>
        </member>
        <member name="P:CommonClassLib.PriceData.hideSaleNumber">
            <summary>
            隐藏卖量
            </summary>
        </member>
        <member name="T:CommonClassLib.QuestionInfo">
            <summary>
            密保认证问题类
            </summary>
        </member>
        <member name="P:CommonClassLib.QuestionInfo.type">
            <summary>
            问题类型 0：国际期货，1：国际股票
            </summary>
        </member>
        <member name="P:CommonClassLib.QuestionInfo.id">
            <summary>
            问题编号
            </summary>
        </member>
        <member name="P:CommonClassLib.QuestionInfo.question">
            <summary>
            问题（中文）
            </summary>
        </member>
        <member name="P:CommonClassLib.QuestionInfo.question_en">
            <summary>
            问题（英文）
            </summary>
        </member>
        <member name="T:CommonClassLib.ReqCommSumWin">
            <summary>
            请求产品开收盘时间
            </summary>
        </member>
        <member name="P:CommonClassLib.ReqCommSumWin.FCommodityNo">
            <summary>
            产品代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ReqCommSumWin.FExchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="T:CommonClassLib.ReqExSumWin">
            <summary>
            查询交易所的冬夏令时间
            </summary>
        </member>
        <member name="P:CommonClassLib.ReqExSumWin.FExchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="T:CommonClassLib.RequestMsgInfo">
            <summary>
            请求消息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.RequestMsgInfo.beginDate">
            <summary>
            开始日期（yyyyMMdd）
            </summary>
        </member>
        <member name="P:CommonClassLib.RequestMsgInfo.endDate">
            <summary>
            结束日期（yyyyMMdd）
            </summary>
        </member>
        <member name="P:CommonClassLib.RequestMsgInfo.msgType">
            <summary>
            消息类型（S：结算价；P：个人消息；M：历史行情；0：系统消息；1：即时消息；）
            </summary>
        </member>
        <member name="T:CommonClassLib.requestTransferMoney">
            <summary>
            期货股票之间帐户资金调拨请求
            </summary>
        </member>
        <member name="P:CommonClassLib.requestTransferMoney.transferType">
            <summary>
            转账类型（1：期货转股票，2：股票转期货，3：股票转股票） 
            </summary>
        </member>
        <member name="P:CommonClassLib.requestTransferMoney.outType">
            <summary>
            转出帐户类型（0：期货，1：港股，2：国内股票，3：美股） 
            </summary>
        </member>
        <member name="P:CommonClassLib.requestTransferMoney.outUserId">
            <summary>
            转出用户帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.requestTransferMoney.outAccountNo">
            <summary>
            转出资金帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.requestTransferMoney.outCurrencyNo">
            <summary>
            转出资金币种
            </summary>
        </member>
        <member name="P:CommonClassLib.requestTransferMoney.outMoney">
            <summary>
            转出资金金额
            </summary>
        </member>
        <member name="P:CommonClassLib.requestTransferMoney.inType">
            <summary>
            转入帐户类型（0：期货，1：港股，2：国内股票，3：美股） 
            </summary>
        </member>
        <member name="P:CommonClassLib.requestTransferMoney.inUserId">
            <summary>
            转入用户帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.requestTransferMoney.inAccountNo">
            <summary>
            转入资金帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.requestTransferMoney.inCurrencyNo">
            <summary>
            转入资金币种
            </summary>
        </member>
        <member name="P:CommonClassLib.requestTransferMoney.memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:CommonClassLib.ResponseMsgInfo">
            <summary>
            消息返回的类
            </summary>
        </member>
        <member name="P:CommonClassLib.ResponseMsgInfo.msgID">
            <summary>
            消息编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ResponseMsgInfo.msgTitle">
            <summary>
            消息标题
            </summary>
        </member>
        <member name="P:CommonClassLib.ResponseMsgInfo.msgType">
            <summary>
            消息类型（S：结算价；P：个人消息；M：历史行情；0：系统消息；1：即时消息；）
            </summary>
        </member>
        <member name="P:CommonClassLib.ResponseMsgInfo.msgContent">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:CommonClassLib.ResponseMsgInfo.msgDateTime">
            <summary>
            消息时间（yyyy-MM-dd HH:mm:ss）
            </summary>
        </member>
        <member name="T:CommonClassLib.responseTransferMoney">
            <summary>
            期货股票之间帐户资金调拨请求返回
            </summary>
        </member>
        <member name="P:CommonClassLib.responseTransferMoney.transferType">
            <summary>
            转账类型（1：期货转股票，2：股票转期货，3：股票转股票） 
            </summary>
        </member>
        <member name="P:CommonClassLib.responseTransferMoney.outType">
            <summary>
            转出帐户类型（0：期货，1：港股，2：国内股票，3：美股） 
            </summary>
        </member>
        <member name="P:CommonClassLib.responseTransferMoney.outAccountNo">
            <summary>
            转出资金帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.responseTransferMoney.outCurrencyNo">
            <summary>
            转出资金币种
            </summary>
        </member>
        <member name="P:CommonClassLib.responseTransferMoney.outMoney">
            <summary>
            转出资金金额
            </summary>
        </member>
        <member name="P:CommonClassLib.responseTransferMoney.inType">
            <summary>
            转入帐户类型（0：期货，1：港股，2：国内股票，3：美股） 
            </summary>
        </member>
        <member name="P:CommonClassLib.responseTransferMoney.inAccountNo">
            <summary>
            转入资金帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.responseTransferMoney.status">
            <summary>
            状态（0：已请求；1：待审核；2：审核通过；3：已退回；4：已转账；5：请求失败）
            </summary>
        </member>
        <member name="P:CommonClassLib.responseTransferMoney.inCurrencyNo">
            <summary>
            转入资金币种
            </summary>
        </member>
        <member name="P:CommonClassLib.responseTransferMoney.memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:CommonClassLib.SearchStrategyHold.userID">
            <summary>
            客户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.SearchStrategyHold.machineID">
            <summary>
            机器ID
            </summary>
        </member>
        <member name="P:CommonClassLib.SearchStrategyHold.strategyID">
            <summary>
            策略ID
            </summary>
        </member>
        <member name="T:CommonClassLib.SendSms">
            <summary>
            发送短信
            </summary>
        </member>
        <member name="M:CommonClassLib.SendSms.sendSingleMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发送单条短信
            </summary>
            <param name="url">短信发送平台的地址</param>
            <param name="username">企业的登录账号</param>
            <param name="password">账号对应的密码</param>
            <param name="targetMobile">发送短信号码</param>
            <param name="targetContent">发送短信的内容(短消息内容，一般限制60 个汉字，如果超出部分，会自动按照两条短消息发送(不超过140个汉字))</param>
            <returns> 大于 0 :成功(任务ID)
                      -1 余额不足
                      -2 帐号或密码错误
                      -3 连接服务商失败
                      -4 超时
                      -5 其他错误
                      -11 目标号码在黑名单里
                      -12 消息内容包含禁用词语
            </returns>
        </member>
        <member name="M:CommonClassLib.SendSms.sendMultiMessages(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String)">
             <summary>
             批量发送短信
             </summary>
             <param name="url">短信发送平台的地址</param>
             <param name="username">企业的登录账号</param>
             <param name="password">账号对应的密码</param>
             <param name="targetMobiles">发送短信号码(多个)</param>
             <param name="targetContent">发送短信的内容</param>
             <returns>
             大于 0 任务ID
            -1 余额不足
            -2 帐号或密码错误
            -3 连接服务商失败
            -4 超时
            -5 其他错误
            -6 短信内容为空
            -7 目标号码为空
            -8 用户通道设置不对，需要设置三个通道
            -9 捕获未知异常 
             </returns>
        </member>
        <member name="T:CommonClassLib.ServerResponseInfo">
            <summary>
            服务器信息返回类
            </summary>
        </member>
        <member name="P:CommonClassLib.ServerResponseInfo.serverIp">
            <summary>
            服务器ip地址
            </summary>
        </member>
        <member name="P:CommonClassLib.ServerResponseInfo.serverPort">
            <summary>
            服务器端口
            </summary>
        </member>
        <member name="P:CommonClassLib.ServerResponseInfo.connectedCount">
            <summary>
            当前已连接数
            </summary>
        </member>
        <member name="P:CommonClassLib.ServerResponseInfo.status">
            <summary>
            服务器状态（1：空闲；2：正常；3：繁忙；4：爆满）
            </summary>
        </member>
        <member name="P:CommonClassLib.ServerResponseInfo.type">
            <summary>
            服务器数据类型（1：前置服务器；2：股票行情服务器；3：期货行情服务器；4：股票历史行情服务器；5：期货历史行情服务器）
            </summary>
        </member>
        <member name="P:CommonClassLib.ServerResponseInfo.serverNameCN">
            <summary>
            服务器名称（简体中文）
            </summary>
        </member>
        <member name="P:CommonClassLib.ServerResponseInfo.serverNameTW">
            <summary>
            服务器名称（繁体中文）
            </summary>
        </member>
        <member name="P:CommonClassLib.ServerResponseInfo.serverNameEN">
            <summary>
            服务器名称（英文）
            </summary>
        </member>
        <member name="T:CommonClassLib.SettleClientBaseInfo">
            <summary>
            结算客户资金信息
            </summary>
        </member>
        <member name="T:CommonClassLib.SettleDailyReqInfo">
            <summary>
            日交易结算报表请求信息
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleDailyReqInfo.FClientNo">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleDailyReqInfo.TradeDateBegin">
            <summary>
            开始交易日期(yyyy-MM-dd)
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleDailyReqInfo.TradeDateEnd">
            <summary>
            结束交易日期(yyyy-MM-dd)
            </summary>
        </member>
        <member name="T:CommonClassLib.SettleMatch">
            <summary>
            结算成交明细信息
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FMatchNo">
            <summary>
            成交编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FClientNo">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FDate">
            <summary>
            成交日期时间
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FCommodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FContractNo">
            <summary>
            合约编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FCodeNo">
            <summary>
            合约编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FProductDot">
            <summary>
            点值
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FDirect">
            <summary>
            买卖方向
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FDirectMay">
            <summary>
            买卖方向
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FMatchVol">
            <summary>
            成交量
            </summary>
        </member>
        <member name="F:CommonClassLib.SettleMatch.dotLen">
            <summary>
            小数点位数
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FClientFee">
            <summary>
            手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FClientFeeDisplay">
            <summary>
            手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FMatchPrice">
            <summary>
            成交价
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FMatchTotal">
            <summary>
            成交金额
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.STime">
            <summary>
            时间
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FExchangeNo">
            <summary>
            交易所
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FDeliveryPeriod">
            <summary>
            交割期
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FCurrencyNo">
            <summary>
            币种
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FMatchDate">
            <summary>
            成交日期
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FCommdityNm">
            <summary>
            商品名
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FContractNm">
            <summary>
            合约名
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FIsCarryTrade">
            <summary>
            是否调期单
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FIsRiskOrder">
            <summary>
            是否风控单
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FDotNum">
            <summary>
            小数点位数
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FCommodityType">
            <summary>
            商品类型
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FSettleGroupNo">
            <summary>
            结算组号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMatch.FEts">
            <summary>
            
            </summary>
        </member>
        <member name="T:CommonClassLib.SettleMonthlyReqInfo">
            <summary>
            月交易结算报表请求信息
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMonthlyReqInfo.FClientNo">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleMonthlyReqInfo.TradeMonth">
            <summary>
            交易年月(yyyy-MM)
            </summary>
        </member>
        <member name="T:CommonClassLib.SettlePriceInfo">
            <summary>
            昨结算价信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.SettlePriceInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.SettlePriceInfo.oldSettlePrice">
            <summary>
            昨结算价
            </summary>
        </member>
        <member name="T:CommonClassLib.SettleTHold">
            <summary>
            结算持仓信息
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FHoldNo">
            <summary>
            持仓编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FClientNo">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FDate">
            <summary>
            持仓日期
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FOpenDate">
            <summary>
            开仓日期
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FExchangeNo">
            <summary>
            交易所编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FContractNo">
            <summary>
            合约编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FDirect">
            <summary>
            持买持卖
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.fDirectShow">
            <summary>
            持买持卖
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FDirectDisplay">
            <summary>
            持买持卖
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FholdVol">
            <summary>
            持仓数
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FHoldPrice">
            <summary>
            持仓价格
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FHoldPriceDisplay">
            <summary>
            持仓价格显示用
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FHoldTotal">
            <summary>
            持仓金额
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FSettlePrice">
            <summary>
            结算价格
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FHoldProfit">
            <summary>
            持仓盈亏
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FClientDeposit">
            <summary>
            持仓保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FCommodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FMatchWay">
            <summary>
            成交方向
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FDeliveryPeriod">
            <summary>
            交割期
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FCurrencyNo">
            <summary>
            币种
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FCommdityNm">
            <summary>
            商品名
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FContractNm">
            <summary>
            合约名
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTHold.FCommodityType">
            <summary>
            商品类别
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FHoldNo">
            <summary>
            持仓编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FClientNo">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FDate">
            <summary>
            持仓日期
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FOpenDate">
            <summary>
            开仓日期
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FExchangeNo">
            <summary>
            交易所编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FContractNo">
            <summary>
            合约编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FDirect">
            <summary>
            持买持卖
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FDirectDisplay">
            <summary>
            持买持卖
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FholdVol">
            <summary>
            持仓数
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FHoldPrice">
            <summary>
            持仓价格
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FHoldPriceDisplay">
            <summary>
            持仓价格显示用
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FHoldTotal">
            <summary>
            持仓金额
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FSettlePrice">
            <summary>
            结算价格
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FHoldProfit">
            <summary>
            持仓盈亏
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FClientDeposit">
            <summary>
            持仓保证金
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FCommodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FMatchWay">
            <summary>
            成交方向
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FDeliveryPeriod">
            <summary>
            交割期
            </summary>
        </member>
        <member name="P:CommonClassLib.SettleTyHold.FCurrencyNo">
            <summary>
            币种
            </summary>
        </member>
        <member name="M:CommonClassLib.SettleTyHold.MyToString">
            <summary>
            商品类别
            </summary>
        </member>
        <member name="T:CommonClassLib.SHZDTcpServerBase">
            <summary>
            对服务器连接对象的封装
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDTcpServerBase.server">
            <summary>
            服务器连接对象
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDTcpServerBase.clientBufferSize">
            <summary>
            单个客户连接的缓存大小
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDTcpServerBase.Dic_ServerClient">
            <summary>
            记录客户端
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDTcpServerBase.isWriteLog">
            <summary>
            是否写log
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDTcpServerBase.log">
            <summary>
            记录log的对象
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDTcpServerBase.isCompress">
            <summary>
            是否老版本历史行情数据需要压缩
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDTcpServerBase.logFileName">
            <summary>
            log文件名
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDTcpServerBase.logPath">
            <summary>
            log文件路径
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDTcpServerBase.listenIp">
            <summary>
            监听的ip
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDTcpServerBase.listenPort">
            <summary>
            监听的端口
            </summary>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.init(System.String,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            初始化要监听的ip和port
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.Start">
            <summary>
            启动服务器监听
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.ShutDown">
            <summary>
            服务器停止监听
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.SendData(System.String,FilterCommom.ShZdServerClient)">
            <summary>
            发送数据
            </summary>
            <param name="data"></param>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.SendData(System.String,FilterCommom.ShZdServerClient,System.Boolean,System.Boolean)">
            <summary>
            发送数据,可以选择是否加密和压缩
            </summary>
            <param name="data"></param>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.CloseOneClientConnect(System.Int32)">
            <summary>
            根据客户端连接ID主动关闭一个客户端连接
            </summary>
            <param name="connId"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.CloseOneClientConnect(System.IntPtr)">
            <summary>
            根据客户端连接ID主动关闭一个客户端连接
            </summary>
            <param name="connId"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.CloseOneClientConnect(FilterCommom.ShZdServerClient)">
            <summary>
            根据客户端连接对象主动关闭一个客户端连接
            </summary>
            <param name="connId"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.Dispose">
            <summary>
            释放资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.OnAccept(System.IntPtr,System.IntPtr)">
            <summary>
            接收到一个客户连接，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="connId"></param>
            <param name="pClient"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.OnSend(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            数据发送成功，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="connId"></param>
            <param name="pData"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.doReceivedOneData(FilterCommom.ShZdServerClient,System.String)">
            <summary>
            接收到一条解析好的数据，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.doReceivedWholeData(FilterCommom.ShZdServerClient,HPSocketCS.InfoEventData)">
            <summary>
            接受到客户端一条数据后的处理成netinfo的字符串抛出
            </summary>
            <param name="client"></param>
            <param name="data"></param>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.OnReceive(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            接收到一次数据
            </summary>
            <param name="connId"></param>
            <param name="pData"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.OnClose(System.IntPtr)">
            <summary>
            客户端连接断开事件，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="connId"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.OnError(System.IntPtr,HPSocketCS.SocketOperation,System.Int32)">
            <summary>
            连接出错，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="connId"></param>
            <param name="enOperation"></param>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDTcpServerBase.OnShutdown">
            <summary>
            服务停止，要实现自己的逻辑请重载这个方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonClassLib.SqlHelper">
            <summary>
            The SqlHelper class is intended to encapsulate high performance, scalable best practices for 
            common uses of SqlClient
            </summary>
        </member>
        <member name="M:CommonClassLib.SqlHelper.AttachParameters(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method is used to attach array of SqlParameters to a SqlCommand.
            
            This method will assign a value of DbNull to any parameter with a direction of
            InputOutput and a value of null.  
            
            This behavior will prevent default values from being used, but
            this will be the less common case than an intended pure output parameter (derived as InputOutput)
            where the user provided no input value.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">An array of SqlParameters to be added to command</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Data.DataRow)">
            <summary>
            This method assigns dataRow column values to an array of SqlParameters
            </summary>
            <param name="commandParameters">Array of SqlParameters to be assigned values</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Object[])">
            <summary>
            This method assigns an array of values to an array of SqlParameters
            </summary>
            <param name="commandParameters">Array of SqlParameters to be assigned values</param>
            <param name="parameterValues">Array of objects holding the values to be assigned</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[],System.Boolean@)">
            <summary>
            This method opens (if necessary) and assigns a connection, transaction, command type and parameters 
            to the provided command
            </summary>
            <param name="command">The SqlCommand to be prepared</param>
            <param name="connection">A valid SqlConnection, on which to execute this command</param>
            <param name="transaction">A valid SqlTransaction, or 'null'</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="mustCloseConnection"><c>true</c> if the connection was opened by the method, otherwose is false.</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the database specified in 
            the connection string
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQuery(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored prcedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDataset(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="T:CommonClassLib.SqlHelper.SqlConnectionOwnership">
            <summary>
            This enum is used to indicate whether the connection was provided by the caller, or created by SqlHelper, so that
            we can set the appropriate CommandBehavior when calling ExecuteReader()
            </summary>
        </member>
        <member name="F:CommonClassLib.SqlHelper.SqlConnectionOwnership.Internal">
            <summary>Connection is owned and managed by SqlHelper</summary>
        </member>
        <member name="F:CommonClassLib.SqlHelper.SqlConnectionOwnership.External">
            <summary>Connection is owned and managed by the caller</summary>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[],CommonClassLib.SqlHelper.SqlConnectionOwnership)">
            <summary>
            Create and prepare a SqlCommand, and call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <remarks>
            If we created and opened the connection, we want the connection to be closed when the DataReader is closed.
            
            If the caller provided the connection, we want to leave it to them to manage.
            </remarks>
            <param name="connection">A valid SqlConnection, on which to execute this command</param>
            <param name="transaction">A valid SqlTransaction, or 'null'</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="connectionOwnership">Indicates whether the connection parameter was provided by the caller, or created by SqlHelper</param>
            <returns>SqlDataReader containing the results of the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReader(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
              SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalar(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, "GetOrderCount", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure using "FOR XML AUTO"</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.FillDataset(System.String,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.FillDataset(System.String,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.FillDataset(System.String,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, 24);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>    
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>    
        </member>
        <member name="M:CommonClassLib.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(conn, "GetOrders", ds, new string[] {"orders"}, 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(trans, "GetOrders", ds, new string[]{"orders"}, 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Private helper method that execute a SqlCommand (that returns a resultset) against the specified SqlTransaction and SqlConnection
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.UpdateDataset(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlCommand,System.Data.DataSet,System.String)">
            <summary>
            Executes the respective command for each inserted, updated, or deleted row in the DataSet.
            </summary>
            <remarks>
            e.g.:  
             UpdateDataset(conn, insertCommand, deleteCommand, updateCommand, dataSet, "Order");
            </remarks>
            <param name="insertCommand">A valid transact-SQL statement or stored procedure to insert new records into the data source</param>
            <param name="deleteCommand">A valid transact-SQL statement or stored procedure to delete records from the data source</param>
            <param name="updateCommand">A valid transact-SQL statement or stored procedure used to update records in the data source</param>
            <param name="dataSet">The DataSet used to update the data source</param>
            <param name="tableName">The DataTable used to update the data source.</param>
        </member>
        <member name="M:CommonClassLib.SqlHelper.CreateCommand(System.Data.SqlClient.SqlConnection,System.String,System.String[])">
            <summary>
            Simplify the creation of a Sql command object by allowing
            a stored procedure and optional parameters to be provided
            </summary>
            <remarks>
            e.g.:  
             SqlCommand command = CreateCommand(conn, "AddCustomer", "CustomerID", "CustomerName");
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="sourceColumns">An array of string to be assigned as the source columns of the stored procedure parameters</param>
            <returns>A valid SqlCommand object</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQueryTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQueryTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.  
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteNonQueryTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified
            SqlTransaction using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDatasetTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDatasetTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the store procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteDatasetTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReaderTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReaderTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteReaderTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalarTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalarTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteScalarTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteXmlReaderTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelper.ExecuteXmlReaderTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="T:CommonClassLib.SqlHelperParameterCache">
            <summary>
            SqlHelperParameterCache provides functions to leverage a static cache of procedure parameters, and the
            ability to discover parameters for stored procedures at run-time.
            </summary>
        </member>
        <member name="M:CommonClassLib.SqlHelperParameterCache.DiscoverSpParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Resolve at run time the appropriate set of SqlParameters for a stored procedure
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">Whether or not to include their return value parameter</param>
            <returns>The parameter array discovered.</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelperParameterCache.CloneParameters(System.Data.SqlClient.SqlParameter[])">
            <summary>
            Deep copy of cached SqlParameter array
            </summary>
            <param name="originalParameters"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SqlHelperParameterCache.CacheParameterSet(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Add parameter array to the cache
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters to be cached</param>
        </member>
        <member name="M:CommonClassLib.SqlHelperParameterCache.GetCachedParameterSet(System.String,System.String)">
            <summary>
            Retrieve a parameter array from the cache
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An array of SqlParamters</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelperParameterCache.GetSpParameterSet(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelperParameterCache.GetSpParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:CommonClassLib.SqlHelperParameterCache.GetSpParameterSetInternal(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="T:CommonClassLib.StartegyDetailInfo">
            <summary>
            策略明细信息（包括策略合约日期数据）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.StartegyCommodityNo">
            <summary>
            策略商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.StartegyContractNo">
            <summary>
            策略合约组合编号
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.Price">
            <summary>
            价格（例如：P1-P2 代表第一腿合约的价格减去第二腿合约价格）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.LegNum">
            <summary>
            腿数（2个合约套利为2腿）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.LastTradeDate">
            <summary>
            最后交易日（yyyy-MM-dd）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.SeqId">
            <summary>
            策略中合约顺序号
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.CommodityNo">
            <summary>
            策略中合约的商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.ContractNo">
            <summary>
            策略中合约的合约编号
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.Direct">
            <summary>
            买卖方向（1表示买，2表示卖）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.Quantity">
            <summary>
            合约下单数量
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.Model">
            <summary>
            模式（1：被动，2：主动）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.ModifyDate">
            <summary>
            最后更新日期（yyyy-MM-dd）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.LastValidDate">
            <summary>
            最后有效日期（yyyy-MM-dd）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.orderMethod">
            <summary>
            下单类型（限价，市价）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.priceTolerance">
            <summary>
            价格容忍度（触发价格可以允许比指定价格大或者小的价格范围:为合约行情价格最小跳点的整数倍）
            </summary>
        </member>
        <member name="F:CommonClassLib.StartegyDetailInfo.priceParam">
            <summary>
            价格乘数参数（默认为1）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.SuportQuantity">
            <summary>
            合约最小对盘挂单量（为保证成交对市场量的限定，比如主动设1，被动设5，则主动下单一手时要保证主动合约对应市场的挂单量大于等于1并且被动合约对应市场的挂单量大于等于5才下单）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.MinMove">
            <summary>
            合约最小移动（对主动腿有效，设定单位为整数，当被动腿的价格变动了设定整数倍的最小跳点时，主动单改单）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.TimerOrder">
            <summary>
            合约定时追单（对被动腿有效，设定时间单位为秒，当被动腿在设定时间内没有成交时，撤单并重新下市价单保证不单腿）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.TimerOrderBeyondNum">
            <summary>
            定时追单滑点数（对被动腿有效，设定单位为正整数）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.TimerOrderPrice">
            <summary>
            合约定时追价（对被动腿有效，设定时间单位为秒，当被动腿在设定时间内没有成交时，根据设定的滑点数改单，内盘合约需先撤单再下单）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.TimerOrderPriceBeyondNum">
            <summary>
            定时追价滑点数（对被动腿有效，设定单位为正整数）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.TimerOrderPriceTriggerNum">
            <summary>
            定时追价触发次数（对被动腿有效，设定单位为正整数）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.ZhiSunOrder">
            <summary>
            止损追单（对被动腿有效，设定单位为整数，当被动腿的可成交价格与被动腿下单价格差超过设定整数乘以最小跳点的时候，撤单并重新下市价单保证不单腿）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.ZhiSunOrderBeyondNum">
            <summary>
            止损追单滑点数（对被动腿有效，设定单位为正整数）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.TimerPingCang">
            <summary>
            合约定时平仓（对被动腿有效，设定时间单位为秒，当被动腿在设定时间内没有成交时，撤单并对主动腿成交数据下市价单平仓保证不单腿）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.TimerPingCangBeyondNum">
            <summary>
            定时平仓滑点数（对被动腿有效，设定单位为正整数）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.safeDeep">
            <summary>
            安全深度（对被动腿有效，设定单位为整数（不能为负数），当对盘挂单量达不到要求时，将价格扩大至安全深度，如果仍然满足触发价格范围内就触发主动腿下单）
            </summary>
        </member>
        <member name="P:CommonClassLib.StartegyDetailInfo.mainRange">
            <summary>
            主动区域（对主动腿有效，设定单位为整数（不能为负数），当根据被动腿价格计算出的主动价格在主动腿行情对盘价的主动区域内时，将对主动腿下单，否则主动腿撤单，如果被动腿行情对盘价变化，要将主动腿撤单并重新计算主动腿价格绝对是否要重新下单）
            </summary>
        </member>
        <member name="P:CommonClassLib.StockMarketInfo.FClientNo">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:CommonClassLib.StockMarketInfo.FMarketInfo">
            <summary>
            行情订阅信息 举例0111:第一位:0是美股不订阅,1美股订阅.第二位:0港股不订阅,1是港股订阅.第三位:0是韩股不订阅,1韩股订阅.第四位:0是星股不订阅  长度不固定..2--好多位.目前只用第二位
            </summary>
        </member>
        <member name="P:CommonClassLib.StockMarketInfo.FMarketType">
            <summary>
            行情订阅类型举例1311:第一位:1是美股专业,2是美股非专业.第二位:1是港股其他股民,2是港股内地,3是港股手机.第三位:1韩股专业,2韩股非专业.第四位星股:1星股不收费   长度不固定..2--好多位.目前只用第二位
            </summary>
        </member>
        <member name="T:CommonClassLib.StrategyOrderSeqInfo">
            <summary>
            策略明细下单顺序信息
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyOrderSeqInfo.serverNo">
            <summary>
            策略服务器编号
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyOrderSeqInfo.userId">
            <summary>
            策略用户ID
            内外盘策略为 1,外盘用户id+‘:2,’+内盘用户id+‘,’+内盘用户id所属broker；
            内外现策略为 1,外盘用户id+‘:2,’+内盘用户id+‘,’+内盘用户id所属broker+‘:3,’+现货用户id+‘,’+现货用户id所属broker；
            外外盘策略为 1,外盘用户id
            内内盘策略为 2,外盘用户id
            现现盘策略为 3,现货用户id
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyOrderSeqInfo.fCode">
            <summary>
            策略代码(相同用户下的策略代码不能重复)
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyOrderSeqInfo.systemCode">
            <summary>
            策略订单系统号
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyOrderSeqInfo.orderDateTime">
            <summary>
            明细订单时间（yyyy-MM-dd HH:mm:ss）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyOrderSeqInfo.orderLocalNo">
            <summary>
            下单本地号
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyOrderSeqInfo.orderSeq">
            <summary>
            下单顺序号
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyOrderSeqInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyOrderSeqInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyOrderSeqInfo.codeType">
            <summary>
            合约类型（1：国际期货；2：国内期货；3：黄金现货）
            </summary>
        </member>
        <member name="T:CommonClassLib.StrategyInfoDetailInfo">
            <summary>
            策略明细信息
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.fKeyId">
            <summary>
            策略Id=userId+"~"+fCode
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.indexNo">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.direct">
            <summary>
            1 买2卖
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.model">
            <summary>
            策略合约模式(1:主动，2:被动)
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.priceType">
            <summary>
            下单类型（1：限价，2：市价（内盘不支持市价））
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.quantity">
            <summary>
            下单比例（默认为1）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.mainRange">
            <summary>
            主动区域（对主动腿有效，设定单位为整数（不能为负数），当根据被动腿价格计算出的主动价格在主动腿行情对盘价的主动区域内时，将对主动腿下单，否则主动腿撤单，如果被动腿行情对盘价变化，要将主动腿撤单并重新计算主动腿价格绝对是否要重新下单）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.tradeUserId">
            <summary>
            交易用户Id
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.tradeUserPwd">
            <summary>
            交易用户密码
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.tradeBroker">
            <summary>
            内盘交易用户broker
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.tradeServer">
            <summary>
            交易server
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.userId">
            <summary>
            策略用户ID
            内外盘策略为 1,外盘用户id+‘:2,’+内盘用户id+‘,’+内盘用户id所属broker；
            内外现策略为 1,外盘用户id+‘:2,’+内盘用户id+‘,’+内盘用户id所属broker+‘:3,’+现货用户id+‘,’+现货用户id所属broker；
            外外盘策略为 1,外盘用户id
            内内盘策略为 2,外盘用户id
            现现盘策略为 3,现货用户id
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.fCode">
            <summary>
            策略代码(相同用户下的策略代码不能重复)
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.codeType">
            <summary>
            合约类型（1：国际期货；2：国内期货；3：黄金现货）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfoDetailInfo.priceTolerance">
            <summary>
            价格容忍度（超价点数）（触发价格可以允许比指定价格大或者小的价格范围）
            </summary>
        </member>
        <member name="T:CommonClassLib.StrategyInfo">
            <summary>
            策略信息类
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:CommonClassLib.StrategyInfo.userId" -->
        <member name="P:CommonClassLib.StrategyInfo.fKeyId">
            <summary>
            策略Id=userId+"~"+fCode
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.fName">
            <summary>
            策略名称(相同用户下的策略名称不能重复)
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.fCode">
            <summary>
            策略代码(相同用户下的策略代码不能重复)
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.priceType">
            <summary>
            策略价格类型（1：差价；2：比价）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.priceTypeDetailType">
            <summary>
            策略价格详细类型（策略价格类型为1差价时：1：主动-被动、2：被动-主动；策略价格类型为2比价时：3：主动/被动、4：被动/主动）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.priceFormula">
            <summary>
            策略价格公式（差价：a*p1-b*p2+c；比价：a*p1/b*p2+c）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.triggerMethod">
            <summary>
            触发模式（1：保价优先（根据公式推算出价格下单）；2：成交优先（被动腿下单价格即下单当时对盘价格））
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.innerProtect">
            <summary>
            是否启用内盘保护（0：不保护；1：保护（a:内盘合约中间休盘时提前一分钟自动撤销主动腿挂单;b:内盘合约收盘时提前一分钟自动撤销策略））
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.passiveFailCloseMainLeg">
            <summary>
            是否被动腿下单失败立即平对应主动腿（0：不平；1：平（平主动下单失败or下单非完全成交（挂单时间超过客户设定的追价时间后判定为无法成交),策略自动撤销,状态为瘸腿终止））
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.slipPoint">
            <summary>
            触发模式为2：成交优先时设置的滑点数
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.recoverPriceMethod">
            <summary>
            追加保护策略（1：主动策略(被动腿挂单多少秒后以市价追单)）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.recoverPriceSeconds">
            <summary>
            被动腿挂单多少秒后以市价追单（对被动腿有效，设定时间单位为秒，当被动腿在设定时间内没有成交时，以市价追单，内盘合约需先撤单再超价10个点位下单）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.setType">
            <summary>
            策略设置类型（"1"或者空：简易版；"2"：完整版）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.minChangePrice">
            <summary>
            策略行情价格最小变动单位
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.maxNum">
            <summary>
            主动腿单次最大下单量（主单下20手，最大批量设置为5手，则要分4次下单）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.SuportQuantity">
            <summary>
            被动腿合约最小对盘挂单量（不能为负数）（为保证成交对市场挂单量的限定，比如下单比例主动为1，被动为3，被动最小对盘挂单量设5，则主动下单2手时要保证被动合约对应市场的挂单量大于等于5*2才下单）
            用于触发条件的被动腿最小对盘挂单量设置，值为0表示没有设置此项
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.safeDeep">
            <summary>
            安全深度（对被动腿有效，设定单位为整数（不能为负数），当对盘挂单量达不到要求时，将被动腿计算价格扩大至安全深度，如果推算出的主动腿下单价格仍然满足触发价格范围内就触发主动腿下单）
            用于触发条件的最小对盘挂单量不满足时加价点数设置，值为0表示没有设置此项
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.mainRange">
            <summary>
            主动区域（对主动腿有效，设定单位为整数（不能为负数），当根据被动腿价格计算出的主动价格在主动腿行情对盘价（主动区域为0）或者挂盘价（主动区域不为0）加上主动区域后的范围内时，将对主动腿下单，否则主动腿撤单，如果被动腿行情对盘价变化，要重新计算主动腿价格并判断是否需要主动腿撤单（超出主动区域）或者改单（还在主动区域内））
            用于触发条件的主动腿计算价格在主动腿行情挂单价格上下多少个价位点数就下单的设置，值为0表示没有设置此项
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.manualZhuiDanBeyondNum">
            <summary>
            单腿手动追被动设置：被动腿单腿手动追价滑点数(默认5个点)
            用于追单策略的系统默认追被动腿的价格滑点数，与平主动2个只能设置一个
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.manualPingZhuDongBeyondNum">
            <summary>
            单腿手动平主动设置：被动腿单腿手动平主动滑点数(默认5个点)
            用于追单策略的系统默认平主动腿的价格滑点数，与追被动2个只能设置一个
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.autoGuaDanSeconds">
            <summary>
            单腿自动定时设置，挂单秒数
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.autoZhuiBeiDongDots">
            <summary>
            单腿自动定时追被动设置，追价滑点数：
            被动腿合约挂单多少秒后自动加价多少点追单（对被动腿有效，设定时间单位为秒，当被动腿在设定时间内没有成交时，加价下单保证不单腿（不支持改单的合约需要先撤单再下单））
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.autoPingZhuDongDots">
            <summary>
            单腿自动定时平主动设置，追价滑点数：
            被动腿合约挂单多少秒后自动加价多少点平主动（对被动腿有效，设定时间单位为秒，当被动腿在设定时间内没有成交时，对主动腿成交数据以行情对盘价加价下单平仓保证不单腿）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.autoZhiSunDot">
            <summary>
            单腿自动止损设置：止损价位点数
            被动腿合约挂单价与行情对盘价相差多少个价位后自动市价追单（对被动腿有效，当被动腿挂单价与行情对盘价相差多少个价位时，撤单并重新下市价单保证不单腿）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.autoZhiSunZhuiBeiDongDots">
            <summary>
            单腿自动止损追被动设置，追价滑点数：
            被动腿合约挂单价与行情对盘价相差多少个价位后自动加价追单（对被动腿有效，当被动腿挂单价与行情对盘价相差多少个价位时，加价下单保证不单腿（不支持改单的合约需要先撤单再下单））
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.autoZhiSunPingZhuDongDots">
            <summary>
            单腿自动止损平主动设置，追价滑点数：
            被动腿合约挂单价与行情对盘价相差多少个价位后自动加价平主动（对被动腿有效，当被动腿挂单价与行情对盘价相差多少个价位时，对主动腿成交数据根据行情对价加价下单平仓保证不单腿）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.dotLen">
            <summary>
            策略行情价格小数位数
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyInfo.TradeTime">
            <summary>
            设置交易的时间段，每段时间以HH:MM:SS-HH:MM:SS表示，各个时间段以半角分号分割
            </summary>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.Tail(System.Double)">
            <summary>
            获取该浮点数的小数部分
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.IsEqualWith(System.Double,System.Double)">
            <summary>
            比较两个浮点数是否相等，精确到小数位后10位
            </summary>
            <param name="value"></param>
            <param name="otherDouble"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.Follow(System.Double)">
            <summary>
            计算该double有几位小数，最高支持10位
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.Follow(System.Decimal)">
            <summary>
            计算该decimal有几位小数，最高支持10位
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.ToText(System.Single,System.Int32,System.Boolean)">
            <summary>
            将float值转换为文本
            </summary>
            <param name="value">值</param>
            <param name="follow">保留几位小数</param>
            <param name="isKeepEnd">尾数不足时是否以0补足</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.ToText(System.Double,System.Int32,System.Boolean)">
            <summary>
            将double值转换为文本
            </summary>
            <param name="value">值</param>
            <param name="follow">保留几位小数</param>
            <param name="isKeepEnd">尾数不足时是否以0补足</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.ToText(System.Decimal,System.Int32,System.Boolean)">
            <summary>
            将decimal值转换为文本
            </summary>
            <param name="value">值</param>
            <param name="follow">保留几位小数</param>
            <param name="isKeepEnd">尾数不足时是否以0补足</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.ToMultiple(System.Double,System.Double,System.Nullable{System.Boolean})">
            <summary>
            将value转换为mutiplier的倍数
            </summary>
            <param name="value"></param>
            <param name="multiplier"></param>
            <param name="round">null 四舍五入 true 向上取整  false 向下取整</param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.ToNumberSeq(System.Int32)">
            <summary>
            将一个int型数字转换为数字序列
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.ToNumberSeq(System.Int64)">
            <summary>
            将一个long型数字转换为数字序列
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.Unit(System.Int64)">
            <summary>
            计算该int型数值有多少位
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.Tools.NumberEx.Unit(System.Int32)">
            <summary>
            计算该long型数值有多少位
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:CommonClassLib.ClientTPS">
            <summary>
            客户TPS
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientTPS.FClientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientTPS.FSearchTPS">
            <summary>
            查询TPS
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientTPS.FTradeTPS">
            <summary>
            交易TPS
            </summary>
        </member>
        <member name="P:CommonClassLib.ClientTPS.FRegDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="T:CommonClassLib.TPS">
            <summary>
            默认TPS
            </summary>
        </member>
        <member name="P:CommonClassLib.TPS.FIsAPI">
            <summary>
            是否API
            </summary>
        </member>
        <member name="P:CommonClassLib.TPS.FSearchTPS">
            <summary>
            查询TPS
            </summary>
        </member>
        <member name="P:CommonClassLib.TPS.FTradeTPS">
            <summary>
            交易TPS
            </summary>
        </member>
        <member name="P:CommonClassLib.TPS.FRegDate">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CommonClassLib.TpsMessage.clientNo">
            <summary>
            客户号 修改默认tps可不填
            </summary>
        </member>
        <member name="P:CommonClassLib.TpsMessage.modifyType">
            <summary>
            修改类型 添加：0 修改：1 删除：2 默认tps只有修改
            API查询tps不填
            </summary>
        </member>
        <member name="P:CommonClassLib.TpsMessage.type">
            <summary>
            客户类型 期货：0 股票：1
            </summary>
        </member>
        <member name="P:CommonClassLib.TpsMessage.isApi">
            <summary>
            是否API 是：1 否：0 修改客户tps默认是API，可不填
            </summary>
        </member>
        <member name="P:CommonClassLib.TpsMessage.searchTps">
            <summary>
            查询tps
            </summary>
        </member>
        <member name="P:CommonClassLib.TpsMessage.tradeTps">
            <summary>
            修改tps
            </summary>
        </member>
        <member name="P:CommonClassLib.TpsMessage.modifyTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="F:CommonClassLib.CloseConnection.clientNo">
            <summary>
            客户号
            </summary>
        </member>
        <member name="F:CommonClassLib.CloseConnection.closeWay">
            <summary>
            关闭连接方式
            关闭客户客户端(PC或手机):1 关闭客户API:2 关闭客户客户端和API:3
            </summary>
        </member>
        <member name="F:CommonClassLib.CloseConnection.type">
            <summary>
            期货：0 股票：1
            </summary>
        </member>
        <member name="T:CommonClassLib.TradeTimeInfo">
            <summary>
            当前交易日开盘收盘时间信息
            </summary>
        </member>
        <member name="P:CommonClassLib.TradeTimeInfo.tradeDate">
            <summary>
            当前交易日期（yyyyMMdd）
            </summary>
        </member>
        <member name="P:CommonClassLib.TradeTimeInfo.openTime">
            <summary>
            开盘时间（HH:mm:ss）
            </summary>
        </member>
        <member name="P:CommonClassLib.TradeTimeInfo.closeTime">
            <summary>
            收盘时间（HH:mm:ss）
            </summary>
        </member>
        <member name="T:CommonClassLib.UpdateClientContractDataInfo">
            <summary>
            盘中实时更新指定用户的合约数据返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateClientContractDataInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateClientContractDataInfo.FExchangeNo">
            <summary>
            交易所编号 
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateClientContractDataInfo.FCommodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateClientContractDataInfo.FSellMax">
            <summary>
            卖空持仓上限额（mantis8374）
            </summary>
        </member>
        <member name="T:CommonClassLib.UpdateRequestInfo">
            <summary>
            客户端版本更新请求类
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateRequestInfo.clientVersion">
            <summary>
            客户端当前版本号
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateRequestInfo.latestVersion">
            <summary>
            最新的版本号
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.userID">
            <summary>
            客户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.machineID">
            <summary>
            机器ID
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.strategyID">
            <summary>
            策略ID
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.exchangeNo">
            <summary>
            交易所
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.commoityNo">
            <summary>
            商品
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.contractNo">
            <summary>
            完整合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.buySale">
            <summary>
            买卖方向 （1：买 2：卖）
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.filledVol">
            <summary>
            成交数量
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.addReduce">
            <summary>
            开平标志 （1：开 ，2：平）
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.legSize">
            <summary>
            策略的腿数
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.isActiveLeg">
            <summary>
            是否是活动腿(1:活动腿 2以后的是被动腿)
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.startegyName">
            <summary>
            策略名称
            </summary>
        </member>
        <member name="P:CommonClassLib.UpdateStrateryHold.isUseContractNo">
            <summary>
            是否更新合约（1：不更新合约 2：更新合约）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.userID">
            <summary>
            客户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.machineID">
            <summary>
            机器ID
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.strategyID">
            <summary>
            策略ID
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.exchangeNo">
            <summary>
            交易所
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.commoityNo">
            <summary>
            商品
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.contractNo">
            <summary>
            完整合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.buySale">
            <summary>
            买卖方向 （1：买 2：卖）
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.holdVol">
            <summary>
            持仓数量
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.updateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.legSize">
            <summary>
            策略的腿数
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.isActiveLeg">
            <summary>
            是否是活动腿(1:活动腿 2以后的是被动腿)
            </summary>
        </member>
        <member name="P:CommonClassLib.StrategyHoldResponseInfo.startegyName">
            <summary>
            策略名称
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.GATE_QUIT">
            <summary>
            FNDirect GW terminate 客户端程序终止
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.DIRECT_CALL">
            <summary>
            Order send, Query Send 定单、请求发送
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.BRDREG_CALL">
            <summary>
            Order Result BroadCast Register 定单结果实时广播
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.BRDURG_CALL">
            <summary>
            Order Result BroadCast UnRegister 定单结果非实时广播
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.NORMAL_SEND">
            <summary>
            Order Result, Query Result 定单、请求结果回送
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.ERRORR_SEND">
            <summary>
            Error Message 错误结果回送
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.BRCAST_SEND">
            <summary>
            Order Result BroadCast 定单结果广播回送
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.KOSISE_CALL">
            <summary>
            KRX Market Data Request 交易所行情数据请求
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.RESISE_SEND">
            <summary>
            KRX Market Data result 交易所行情数据请求结果回送
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.BRSISE_SEND">
            <summary>
            KRX Market Data result 交易所行情数据请求结果广播回送
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.KOFUSISE">
            <summary>
            获取市场行情请求Message的头信息
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.KOFUDEAL">
            <summary>
            获取市场行情广播的头信息fill
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.KOFUHOGA">
            <summary>
            获取市场行情广播的头信息price
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.ORDER001">
            <summary>
            委托下单请求消息的头信息
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.CANCEL01">
            <summary>
            委托撤单请求消息的头信息
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.DEPOSTAT">
            <summary>
            取得资金账户信息请求消息的头信息
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.OPNINTER">
            <summary>
            取得持仓信息请求消息的头信息
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.ORDLIST1">
            <summary>
            取得定单信息请求消息的头信息
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.DEALLIST">
            <summary>
            取得成交信息请求消息的头信息
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.DEALCAST">
            <summary>
            获取下单广播的成交确认的头信息
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.CNCLCAST">
            <summary>
            获取撤单广播的成功确认的头信息
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.RESERVED">
            <summary>
            获取委托下单的reserved信息
            </summary>
        </member>
        <member name="F:CommonClassLib.SumsungConstants.NUMBERS">
            <summary>
            获取委托下单的个数信息
            </summary>
        </member>
        <member name="T:CommonClassLib.UpperTick">
            <summary>
            港股的行情最小跳点和点值是根据行情价格的不同而不同的
            </summary>
        </member>
        <member name="P:CommonClassLib.UpperTick.FUpperTickCode">
            <summary>
            最小变动单位代码
            </summary>
        </member>
        <member name="P:CommonClassLib.UpperTick.FPriceFrom">
            <summary>
            最小变动单位开始行情价格
            </summary>
        </member>
        <member name="P:CommonClassLib.UpperTick.FUpperTick">
            <summary>
            行情最小变动单位
            </summary>
        </member>
        <member name="P:CommonClassLib.UpperTick.FProductDot">
            <summary>
            最小变动单位对应的点值
            </summary>
        </member>
        <member name="P:CommonClassLib.UpperTick.FDotNum">
            <summary>
            行情小数位数
            </summary>
        </member>
        <member name="P:CommonClassLib.UpperTick.FLowerTick">
            <summary>
            进价单位
            </summary>
        </member>
        <member name="P:CommonClassLib.UpperTick.ModifyDate">
            <summary>
            最后更新日期（yyyy-MM-dd）
            </summary>
        </member>
        <member name="P:CommonClassLib.UpperTick.LastValidDate">
            <summary>
            最后有效日期（yyyy-MM-dd）
            </summary>
        </member>
        <member name="T:CommonClassLib.UseContract">
            <summary>
            可用合约请求信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.code">
            <summary>
            商品编号合约NO 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FExchangeNo">
            <summary>
            交易所编号 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FContractNo">
            <summary>
            合约NO
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.ContractFName">
            <summary>
            合约名
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FCommodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.CommodityFName">
            <summary>
            商品名 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FCommodityType">
            <summary>
            商品类别 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.CommodityFCurrencyNo">
            <summary>
            货币编号 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.CurrencyFName">
            <summary>
            货币名称 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FProductDot">
             <summary>
            点值（一个最小跳点的价值）   
             </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FUpperTick">
            <summary>
            最小变动单位 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FName">
            <summary>
            交易所名称 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FPrice">
            <summary>
            上日结算价 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FTradeMonth">
            <summary>
            交易月 (yyyyMM)/交割日 (yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FDotNum">
            <summary>
            行情小数点位数
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FLowerTick">
            <summary>
            进阶单位
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FDotNum_Carry">
            <summary>
            调期小数点位数
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FUpperTick_Carry">
            <summary>
            调期最小变动单位
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FFirstNoticeDay">
            <summary>
            首次通知日 (yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FFreezenPercent">
            <summary>
            冻结保证金百分比 （上海能源买入保证金百分比）
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FFreezenMoney">
            <summary>
            冻结保证金固定值 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FFeeMoney">
            <summary>
            固定手续费 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FFeePercent">
            <summary>
            百分比手续费 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FPriceStrike">
            <summary>
            现货商品昨结算价 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FProductDotStrike">
             <summary>
            现货商品点值  
             </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FUpperTickStrike">
            <summary>
            现货商品最小变动单位 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FLastTradeDay">
            <summary>
            最后到期日，之前错误使用了最后交易日的字段 (yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FLastUpdateDay">
            <summary>
            最后更新日 (yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FCriticalPrice">
            <summary>
            期权临界价格 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FCriticalMinChangedPrice">
            <summary>
            期权临界价格以下的最小跳点 
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FExchange2">
            <summary>
            实际交易所(CME细分成3个交易所:CME,CME_COMEX,CME_NYMEX)
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FOptionType">
            <summary>
            期权类型(R：看涨；F：看跌)
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FOptionMonth">
            <summary>
            期权年月(yyyyMM)
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FOptionStrikePrice">
            <summary>
            期权执行价格
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FOptionCommodityNo">
            <summary>
            期权对应期货商品编号（上海能源卖出保证金百分比）
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FOptionContractNo">
            <summary>
            期权对应期货合约编号
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.ContractFNameEN">
            <summary>
            合约名（英文）
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.CommodityFNameEN">
            <summary>
            商品名（英文）
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FOptionStyle">
            <summary>
            期权类别(E：欧式；A：美式)
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FisSFuture">
            <summary>
            个股期货标签
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FContractOrder">
            <summary>
            主力合约排序
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FCommdityOrder">
            <summary>
            商品排序
            </summary>
        </member>
        <member name="P:CommonClassLib.UseContract.FRealLastTradeDate">
            <summary>
            合约到期日
            </summary>
        </member>
        <member name="T:CommonClassLib.BrokerInfo">
            <summary>
            经纪商信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.BrokerInfo.BrokerId">
            <summary>
            经纪商id（同一个经纪商可有多个id，多个的时候，以逗号分隔一起放到这个字段中）
            </summary>
        </member>
        <member name="P:CommonClassLib.BrokerInfo.BrokerName_CN">
            <summary>
            经纪商名称中文
            </summary>
        </member>
        <member name="P:CommonClassLib.BrokerInfo.BrokerName_US">
            <summary>
            经纪商名称英文
            </summary>
        </member>
        <member name="P:CommonClassLib.BrokerInfo.ModifyDate">
            <summary>
            最后更新日期（yyyy-MM-dd）
            </summary>
        </member>
        <member name="P:CommonClassLib.BrokerInfo.LastValidDate">
            <summary>
            最后有效日期（yyyy-MM-dd）
            </summary>
        </member>
        <member name="T:CommonClassLib.VerifyInfo">
            <summary>
            密保认证类
            </summary>
        </member>
        <member name="P:CommonClassLib.VerifyInfo.UserId">
            <summary>
            用户帐号
            </summary>
        </member>
        <member name="P:CommonClassLib.VerifyInfo.UserPwd">
            <summary>
            交易密码
            </summary>
        </member>
        <member name="P:CommonClassLib.VerifyInfo.type">
            <summary>
            问题类型 1：密保认证；2：手机验证码认证
            </summary>
        </member>
        <member name="P:CommonClassLib.VerifyInfo.QA">
            <summary>
            密保问题编号
            </summary>
        </member>
        <member name="P:CommonClassLib.VerifyInfo.answer">
            <summary>
            密保问题答案
            </summary>
        </member>
        <member name="P:CommonClassLib.VerifyInfo.mobile">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:CommonClassLib.VerifyInfo.verifyCode">
            <summary>
            手机验证码
            </summary>
        </member>
        <member name="P:CommonClassLib.VerifyInfo.saveMac">
            <summary>
            是否需要记住该设备 1：是；0 or other：不是
            </summary>
        </member>
        <member name="T:CommonClassLib.VersionInfo">
            <summary>
            版本信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.VersionInfo.version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:CommonClassLib.VersionInfo.mustUpdate">
            <summary>
            是否必须更新到新版本才能正常使用（0：可以不更新；1：必须更新）
            </summary>
        </member>
        <member name="P:CommonClassLib.VersionInfo.MustVersion">
            <summary>
            必须要更到的版本号
            </summary>
        </member>
        <member name="P:CommonClassLib.VersionInfo.VersionContent_CN">
            <summary>
            版本内容中文
            </summary>
        </member>
        <member name="P:CommonClassLib.VersionInfo.VersionContent_US">
            <summary>
            版本内容英文
            </summary>
        </member>
        <member name="T:CommonClassLib.WriteLog">
            <summary>
            写日志文件的类
            </summary>
        </member>
        <member name="M:CommonClassLib.WriteLog.#ctor">
            <summary>
            继承类调用构造器，便于扩展
            </summary>
        </member>
        <member name="M:CommonClassLib.WriteLog.#ctor(System.String)">
            <summary>
            用log文件名初始化对象
            </summary>
            <param name="logFile"></param>
        </member>
        <member name="M:CommonClassLib.WriteLog.#ctor(System.String,System.Int32)">
            <summary>
            用log文件名和配置的log级别初始化对象
            </summary>
            <param name="logFile"></param>
            <param name="configLevel"></param>
        </member>
        <member name="M:CommonClassLib.WriteLog.#ctor(System.String,System.Int32,System.Text.Encoding)">
            <summary>
            用log文件名和配置的log级别初始化对象
            </summary>
            <param name="logFile"></param>
            <param name="configLevel"></param>
        </member>
        <member name="M:CommonClassLib.WriteLog.initFile">
            <summary>
            初始化文件流
            </summary>		
        </member>
        <member name="M:CommonClassLib.WriteLog.log(System.Int32,System.Int32,System.String)">
            <summary>
            如果当前log级别小于配置设定的log级别时才将log内容写到日志文件中
            </summary>
            <param name="logLevel">当前log的级别</param>
            <param name="configLevel">配置设定的log级别</param>
            <param name="logContent">log内容</param>
        </member>
        <member name="M:CommonClassLib.WriteLog.log(System.Int32,System.String)">
            <summary>
            如果当前log级别小于配置设定的log级别时才将log内容写到日志文件中
            </summary>
            <param name="logLevel">当前log的级别</param>
            <param name="logContent">log内容</param>
        </member>
        <member name="M:CommonClassLib.WriteLog.log(System.Int32,System.String,System.String)">
            <summary>
            如果当前log级别小于配置设定的log级别时才将log内容写到日志文件中
            </summary>
            <param name="logLevel">当前log的级别</param>
            <param name="logContent">log内容</param>
            <param name="method">log抛出调用的方法名</param>
        </member>
        <member name="T:CommonClassLib.YingSunDelRequestInfo">
            <summary>
            止损止盈设置删除请求信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunDelRequestInfo.yingsunNo">
            <summary>
            止损止盈编号
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunDelRequestInfo.frontId">
            <summary>
            前置机ID
            </summary>
        </member>
        <member name="T:CommonClassLib.YingSunDelResponseInfo">
            <summary>
            止损止盈设置删除请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunDelResponseInfo.yingsunNo">
            <summary>
            止损止盈编号
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunDelResponseInfo.status">
            <summary>
            状态：0：已请求；1：未触发；2：已触发(已废除不用,改用8,9表示是否触发下单成功)；3：已撤销；4：已部分成交；5：已完全成交；6：已清除；7：已失效
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunDelResponseInfo.result">
            <summary>
            结果信息
            </summary>
        </member>
        <member name="T:CommonClassLib.YingSunListRequestInfo">
            <summary>
            止损止盈设置列表数据请求信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListRequestInfo.userId">
            <summary>
            设置人
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListRequestInfo.yingsunNo">
            <summary>
            最后一条数据的止损止盈设置编号
            </summary>
        </member>
        <member name="T:CommonClassLib.YingSunListResponseInfo">
            <summary>
            止损止盈设置列表数据请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.yingsunNo">
            <summary>
            止损止盈编号
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.userId">
            <summary>
            设置人ID
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.status">
            <summary>
            盈损状态：0：已请求；1：未触发；2：已触发(已废除不用,改用8,9表示是否触发下单成功)；3：已撤销；4：已部分成交；5：已完全成交；6：已清除；7：已失效；8：平仓指令成功；9：平仓指令失败
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.localNo">
            <summary>
            盈损本地号：用于止损止盈编号生成前找到这条数据
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.contractNo">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.buySale">
            <summary>
            盈损持买持卖（针对持买还是持买数据而设置的）：1：持买；2：持卖
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.stopLossPrice">
            <summary>
            止损触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.stopProfitPrice">
            <summary>
            平仓触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.triggerType">
            <summary>
            盈损触发类型：1：按最新价触发；2：按买价触发；3：按卖价触发
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.stopLossDot">
            <summary>
            止损超价点数
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.stopProfitDot">
            <summary>
            平仓超价点数
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.orderQuantity">
            <summary>
            触发后下单数：有足够持仓数才下单
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.filledQuantity">
            <summary>
            已成交数
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.canceledQuantity">
            <summary>
            已撤单数
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.isPermanent">
            <summary>
            是否永久有效（0：仅当前交易日有效；1：永久有效）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.orderType">
            <summary>
            下单类型（1：限价单；2：市价单）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.stopLossOrderPrice">
            <summary>
            止损触发后下单的价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.stopProfitOrderPrice">
            <summary>
            平仓触发后下单的价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.closeFlag">
            <summary>
            平仓标志（0：持仓不足时清除；1：持仓不足时按当前持仓数平仓）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.traceFlag">
            <summary>
            追价止盈损标志（0：不追价止盈损；1：追价止盈损）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.openPrice">
            <summary>
            盈利追价触发点数（每盈利指定倍数的最小价格跳点的价格就触发一次止损价的回撤）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.tracePriceDiff">
            <summary>
            止损追踪点数（止损价追价最小价格变动值的整数倍）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.activeDateTime">
            <summary>
            止盈损开始触发的时间点(yyyyMMdd hh:mm:ss)
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.triggerCondition">
            <summary>
            触发条件：几次达到触发价后触发，默认一次 20140909 add
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.setType">
            <summary>
            设置保存的类型（1：简易版设置；2：完整版设置）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunListResponseInfo.FSubClientNo">
            <summary>
            分账户
            </summary>
        </member>
        <member name="T:CommonClassLib.YingSunRequestInfo">
            <summary>
            止损止盈设置请求信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.yingsunNo">
            <summary>
            止损止盈编号
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.userId">
            <summary>
            设置人ID
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.status">
            <summary>
            状态：0：已请求；1：未触发；2：已触发(已废除不用,改用8,9表示是否触发下单成功)；3：已撤销；4：已部分成交；5：已完全成交；6：已清除；7：已失效；8：平仓指令成功；9：平仓指令失败
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.localNo">
            <summary>
            本地号：用于止损止盈编号生成前找到这条数据
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.contractNo">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.buySale">
            <summary>
            持买持卖（针对持买还是持买数据而设置的）：1：持买；2：持卖
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.stopLossPrice">
            <summary>
            止损触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.stopProfitPrice">
            <summary>
            平仓触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.triggerType">
            <summary>
            触发类型：1：按最新价触发；2：按买价触发；3：按卖价触发
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.stopLossDot">
            <summary>
            止损超价点数
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.stopProfitDot">
            <summary>
            平仓超价点数
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.orderQuantity">
            <summary>
            触发后下单数：有足够持仓数才下单
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.frontId">
            <summary>
            前置机ID
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.isPermanent">
            <summary>
            是否永久有效（0：仅当前交易日有效；1：永久有效）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.orderType">
            <summary>
            下单类型（1：限价单；2：市价单）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.stopLossOrderPrice">
            <summary>
            止损触发后下单的价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.stopProfitOrderPrice">
            <summary>
            平仓触发后下单的价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.closeFlag">
            <summary>
            平仓标志（0：持仓不足时清除；1：持仓不足时按当前持仓数平仓）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.traceFlag">
            <summary>
            追价止盈损标志（0：不追价止盈损；1：追价止盈损）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.openPrice">
            <summary>
            盈利追价触发点数（每盈利指定倍数的最小价格跳点的价格就触发一次止损价的回撤）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.tracePriceDiff">
            <summary>
            止损追踪点数（止损价追价最小价格变动值的整数倍）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.activeDateTime">
            <summary>
            止盈损开始触发的时间点(yyyyMMdd hh:mm:ss)
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.triggerCondition">
            <summary>
            触发条件：几次达到触发价后触发，默认一次 20140909 add
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.setType">
            <summary>
            设置保存的类型（1：简易版设置；2：完整版设置）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.subClientNo">
            <summary>
            分账户
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunRequestInfo.Area">
            <summary>
            Tag142 申报地区
            </summary>
        </member>
        <member name="T:CommonClassLib.YingSunResponseInfo">
            <summary>
            止损止盈设置请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.yingsunNo">
            <summary>
            止损止盈编号
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.status">
            <summary>
            状态：0：已请求；1：未触发；2：已触发(已废除不用,改用8,9表示是否触发下单成功)；3：已撤销；4：已部分成交；5：已完全成交；6：已清除；7：已失效；8：平仓指令成功；9：平仓指令失败
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.localNo">
            <summary>
            本地号：用于止损止盈编号生成前找到这条数据
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.frontId">
            <summary>
            前置机ID
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.userId">
            <summary>
            设置人ID
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.contractNo">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.buySale">
            <summary>
            持买持卖（针对持买还是持买数据而设置的）：1：持买；2：持卖
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.stopLossPrice">
            <summary>
            止损触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.stopProfitPrice">
            <summary>
            平仓触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.triggerType">
            <summary>
            触发类型：1：按最新价触发；2：按买价触发；3：按卖价触发
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.stopLossDot">
            <summary>
            止损超价点数
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.stopProfitDot">
            <summary>
            平仓超价点数
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.orderQuantity">
            <summary>
            触发后下单数：有足够持仓数才下单
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.isPermanent">
            <summary>
            是否永久有效（0：仅当前交易日有效；1：永久有效）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.orderType">
            <summary>
            下单类型（1：限价单；2：市价单）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.stopLossOrderPrice">
            <summary>
            止损触发后下单的价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.stopProfitOrderPrice">
            <summary>
            平仓触发后下单的价格
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.closeFlag">
            <summary>
            平仓标志（0：持仓不足时清除；1：持仓不足时按当前持仓数平仓）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.traceFlag">
            <summary>
            追价止盈损标志（0：不追价止盈损；1：追价止盈损）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.openPrice">
            <summary>
            盈利追价触发点数（每盈利指定倍数的最小价格跳点的价格就触发一次止损价的回撤）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.tracePriceDiff">
            <summary>
            止损追踪点数（止损价追价最小价格变动值的整数倍）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.activeDateTime">
            <summary>
            止盈损开始触发的时间点(yyyyMMdd hh:mm:ss)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:CommonClassLib.YingSunResponseInfo.triggerCondition" -->
        <member name="P:CommonClassLib.YingSunResponseInfo.setType">
            <summary>
            设置保存的类型（1：简易版设置；2：完整版设置）
            </summary>
        </member>
        <member name="P:CommonClassLib.YingSunResponseInfo.subClientNo">
            <summary>
            分账户
            </summary>
        </member>
        <member name="T:CommonClassLib.ZDException">
            <summary>
            直达软件通用异常类
            </summary>
        </member>
        <member name="F:CommonClassLib.ZDException.ex">
            <summary>
            抛出的异常，通用异常
            </summary>
        </member>
        <member name="F:CommonClassLib.ZDException.exceptionObject">
            <summary>
            抛出的异常对象，用于细分异常类型
            </summary>
        </member>
        <member name="F:CommonClassLib.ZDException.modalName">
            <summary>
            模块名
            </summary>
        </member>
        <member name="F:CommonClassLib.ZDException.className">
            <summary>
            类名
            </summary>
        </member>
        <member name="F:CommonClassLib.ZDException.methodName">
            <summary>
            方法名
            </summary>
        </member>
        <member name="F:CommonClassLib.ZDException.log">
            <summary>
            写log的对象
            </summary>
        </member>
        <member name="F:CommonClassLib.ZDException.logLevel">
            <summary>
            log级别
            </summary>
        </member>
        <member name="T:CommonClassLib.ZDException.ISWriteLog">
            <summary>
            是否需要写log
            </summary>
        </member>
        <member name="M:CommonClassLib.ZDException.#ctor(System.Exception)">
            <summary>
            只是转发抛出异常到上层
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:CommonClassLib.ZDException.#ctor(System.Exception,System.String,System.String,System.String,System.Int32)">
            <summary>
            不写log，仅仅记录异常最初的出处
            </summary>
            <param name="e"></param>
            <param name="modalName"></param>
            <param name="className"></param>
            <param name="methodName"></param>
            <param name="logLevel"></param>
        </member>
        <member name="M:CommonClassLib.ZDException.#ctor(System.Exception,System.String,System.String,System.String,System.Int32,CommonClassLib.WriteLog,CommonClassLib.ZDException.ISWriteLog,System.Int32@)">
            <summary>
            判断Socket是否连接可用户
            </summary>
            <param name="e"></param>
            <param name="modalName"></param>
            <param name="className"></param>
            <param name="methodName"></param>
            <param name="logLevel"></param>
            <param name="log"></param>
            <param name="isWriteLog"></param>
            <param name="errorCode"></param>
        </member>
        <member name="M:CommonClassLib.ZDException.#ctor(System.Exception,System.String,System.String,System.String,System.Int32,CommonClassLib.WriteLog,CommonClassLib.ZDException.ISWriteLog)">
            <summary>
            可能需要写log，用于外层捕获异常的处理
            </summary>
            <param name="e"></param>
            <param name="modalName"></param>
            <param name="className"></param>
            <param name="methodName"></param>
            <param name="logLevel"></param>
            <param name="log"></param>
            <param name="isWriteLog"></param>
        </member>
        <member name="M:CommonClassLib.ZDException.#ctor(CommonClassLib.ZDException,CommonClassLib.WriteLog,CommonClassLib.ZDException.ISWriteLog)">
            <summary>
            如果异常已经初始化成ZDException，可用此方法直接写log
            </summary>
            <param name="e"></param>
            <param name="log"></param>
            <param name="isWriteLog"></param>
        </member>
        <member name="M:CommonClassLib.ZDException.AnayException(System.Exception,System.String@,System.String@)">
            <summary>
            分析常见的异常
            </summary>
            <param name="e">传入异常</param>
            <param name="outString">异常描述</param>
            <param name="errorString">异常内容</param>
            <returns>异常的code</returns>
        </member>
        <member name="M:CommonClassLib.ZDException.AnaySocketError(System.Net.Sockets.SocketException,System.String@,System.String@)">
            <summary>
            对Socket异常分析，返回异常的描述，异常的内容，异常的code
            </summary>
            <param name="ex">输入Socket异常</param>
            <param name="outString">异常描述</param>
            <param name="errorString">异常的内容</param>
            <returns>异常的code</returns>
        </member>
        <member name="T:CommonClassLib.ModifyInfo">
            <summary>
            改单请求信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.userType">
            <summary>
            用户类型：1：一般用户；2：机构通用户；
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.tradePwd">
            <summary>
            交易密码
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.orderNo">
            <summary>
            定单号
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.buySale">
            <summary>
            买还是卖：1=buy 2=sell
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.orderNumber">
            <summary>
            下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.orderPrice">
            <summary>
            下单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.filledNumber">
            <summary>
            已成交数 
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.modifyNumber">
            <summary>
            改单数 
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.modifyPrice">
            <summary>
            改单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.tradeType">
            <summary>
            交易方式：1=regular 2=FOK 3=IOC
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.priceType">
            <summary>
            价格类型：1=限价单, 2=市价单，3=限价止损（stop to limit），4=止损（stop to market）
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.FIsRiskOrder">
            <summary>
            用户下单类型：C或是空客户下单；D：是del下单 R：强平下单（风控）
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.triggerPrice">
            <summary>
            触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.modifyTriggerPrice">
            <summary>
            改单触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.validDate">
            <summary>
            有效日期（1：当日有效；2：永久有效）
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.GiveUpFirm">
            <summary>
            这个写接收方的firm ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.CmtaGiveupCD">
            <summary>
            写GU表示这是giveup的单子
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.NoAlloc">
            <summary>
            写死1
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.AllocAccount">
            <summary>
            这个是在对方接受账户的账号
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.CommodityType">
             <summary>
             股票类型
            0	股票
            1	窝轮及牛熊证
            2	认股权
            3	ETF
            4	债券
            5	信托
            6	其他
            8	指数
             </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.Area">
            <summary>
            Tag142 申报地区
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.IsMemberAccount">
            <summary>
            0：普通账号，1：综合账号
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyInfo.AllocateClientNo">
            <summary>
            调拨方的客户号
            </summary>
        </member>
        <member name="T:CommonClassLib.ModifyResponseInfo">
            <summary>
            改单请求返回信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.orderNo">
            <summary>
            定单号
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.modifyNo">
            <summary>
            改单号
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.exchangeCode">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.buySale">
            <summary>
            买还是卖：1=buy 2=sell
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.orderNumber">
            <summary>
            下单数
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.orderPrice">
            <summary>
            下单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.filledNumber">
            <summary>
            已成交数
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.modifyNumber">
            <summary>
            改单数
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.modifyPrice">
            <summary>
            改单价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.tradeType">
            <summary>
            交易方式：1=regular 2=FOK 3=IOC
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.priceType">
            <summary>
            价格类型：1=limit order, 2=market order
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.modifyDate">
            <summary>
            改单日期
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.modifyTime">
            <summary>
            改单时间
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.errorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.FIsRiskOrder">
            <summary>
            用户下单类型：C或是空客户下单；D：是del下单 R：强平下单（风控）
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.triggerPrice">
            <summary>
            触发价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ModifyResponseInfo.modifyTriggerPrice">
            <summary>
            改单触发价格
            </summary>
        </member>
        <member name="T:CommonClassLib.ZDMessage">
            <summary>
            直达消息类
            </summary>
        </member>
        <member name="P:CommonClassLib.ZDMessage.msgType">
            <summary>
            消息类型
            S：  SettlPrx结算价
            P：  PrivateMsg个人消息
            M:   HistoryMarket历史行情数据
            C:   需要确认的公告消息
            0-9：PublicMsg公告消息， 9：用户必须要确认的消息
            </summary>
        </member>
        <member name="P:CommonClassLib.ZDMessage.insertTime">
            <summary>
            消息登录时间
            </summary>
        </member>
        <member name="P:CommonClassLib.ZDMessage.msgID">
            <summary>
            消息ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ZDMessage.msgTitle">
            <summary>
            消息标题
            </summary>
        </member>
        <member name="P:CommonClassLib.ZDMessage.msgLength">
            <summary>
            消息内容长度（字符数）
            </summary>
        </member>
        <member name="P:CommonClassLib.ZDMessage.msgDetail">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:CommonClassLib.ZDMessage.State">
            <summary>
            必读消息的状态，
            "0": 不需要显示。如果用户手动点击，需要显示关闭按钮
            "1": 需要显示，用户不能点击关闭
            "2": 需要显示，用户能点击关闭
            </summary>
        </member>
        <member name="P:CommonClassLib.ZDMessage.tradeType">
            <summary>
            0 ==> 期货， 1 ==> 股票。
            </summary>
        </member>
        <member name="T:CommonClassLib.CMEMarketRightInfo">
            <summary>
            用户请求取得CME行情权限信息的类
            </summary>
        </member>
        <member name="P:CommonClassLib.CMEMarketRightInfo.userId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:CommonClassLib.CMEMarketRightInfo.FCMEMarket">
            <summary>
            是否可以获取CME行情：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.CMEMarketRightInfo.FCMECOMEXMarket">
            <summary>
            是否可以获取CME_COMEX行情：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.CMEMarketRightInfo.FCMENYMEXMarket">
            <summary>
            是否可以获取CME_NYMEX行情：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.CMEMarketRightInfo.FCMECBTMarket">
            <summary>
            是否可以获取CME_CBT行情：0：不可以；1：可以
            </summary>
        </member>
        <member name="P:CommonClassLib.CMEMarketRightInfo.userType">
            <summary>
            用户类型：0：不可以请求CME权限；1：可以(非专业投资者);2:可以(专业投资者)
            </summary>
        </member>
        <member name="T:CommonClassLib.ActiveExerciseResponseInfo">
            <summary>
            行权请求信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseResponseInfo.userId">
            <summary>
            行权操作人员ID
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseResponseInfo.accountNo">
            <summary>
            资金账号
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseResponseInfo.exerciseVol">
            <summary>
            行权数量
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseResponseInfo.exerciseCommision">
            <summary>
            行权手续费
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseResponseInfo.buySale">
            <summary>
            买卖(1:买；2：卖)
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseResponseInfo.code">
            <summary>
            合约代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseResponseInfo.exchangeNo">
            <summary>
            交易所代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseResponseInfo.exerciseNo">
            <summary>
            行权编号（Key值）
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseResponseInfo.date">
            <summary>
            行权日期（yyyyMMdd）
            </summary>
        </member>
        <member name="P:CommonClassLib.ActiveExerciseResponseInfo.time">
            <summary>
            行权时间（hh:mm:ss）
            </summary>
        </member>
        <member name="T:CommonClassLib.SHZDMarketTcpServerBase">
            <summary>
            对服务器连接对象的封装
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDMarketTcpServerBase.server">
            <summary>
            服务器连接对象
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDMarketTcpServerBase.clientBufferSize">
            <summary>
            单个客户连接的缓存大小
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDMarketTcpServerBase.Dic_ServerClient">
            <summary>
            记录客户端
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDMarketTcpServerBase.isWriteLog">
            <summary>
            是否写log
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDMarketTcpServerBase.log">
            <summary>
            记录log的对象
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDMarketTcpServerBase.isCompress">
            <summary>
            是否老版本历史行情数据需要压缩
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDMarketTcpServerBase.logFileName">
            <summary>
            log文件名
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDMarketTcpServerBase.logPath">
            <summary>
            log文件路径
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDMarketTcpServerBase.listenIp">
            <summary>
            监听的ip
            </summary>
        </member>
        <member name="F:CommonClassLib.SHZDMarketTcpServerBase.listenPort">
            <summary>
            监听的端口
            </summary>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.init(System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            初始化要监听的ip和port
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.Start">
            <summary>
            启动服务器监听
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.ShutDown">
            <summary>
            服务器停止监听
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.SendData(System.String,FilterCommom.ShZdServerClient)">
            <summary>
            发送数据
            </summary>
            <param name="data"></param>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.SendData(System.String,FilterCommom.ShZdServerClient,System.Boolean,System.Boolean)">
            <summary>
            发送数据,可以选择是否加密和压缩
            </summary>
            <param name="data"></param>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.CloseOneClientConnect(System.Int32)">
            <summary>
            根据客户端连接ID主动关闭一个客户端连接
            </summary>
            <param name="connId"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.CloseOneClientConnect(System.IntPtr)">
            <summary>
            根据客户端连接ID主动关闭一个客户端连接
            </summary>
            <param name="connId"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.CloseOneClientConnect(FilterCommom.ShZdServerClient)">
            <summary>
            根据客户端连接对象主动关闭一个客户端连接
            </summary>
            <param name="connId"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.Dispose">
            <summary>
            释放资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.OnAccept(System.IntPtr,System.IntPtr)">
            <summary>
            接收到一个客户连接，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="connId"></param>
            <param name="pClient"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.OnSend(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            数据发送成功，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="connId"></param>
            <param name="pData"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.doReceivedOneData(FilterCommom.ShZdServerClient,System.String)">
            <summary>
            接收到一条解析好的数据，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.doReceivedWholeData(FilterCommom.ShZdServerClient,HPSocketCS.InfoEventData)">
            <summary>
            接受到客户端一条数据后的处理成netinfo的字符串抛出
            </summary>
            <param name="client"></param>
            <param name="data"></param>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.OnReceive(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            接收到一次数据
            </summary>
            <param name="connId"></param>
            <param name="pData"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.OnClose(System.IntPtr)">
            <summary>
            客户端连接断开事件，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="connId"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.OnError(System.IntPtr,HPSocketCS.SocketOperation,System.Int32)">
            <summary>
            连接出错，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="connId"></param>
            <param name="enOperation"></param>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.SHZDMarketTcpServerBase.OnShutdown">
            <summary>
            服务停止，要实现自己的逻辑请重载这个方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:CommonClassLib.ClientConnectionMarketBase">
            <summary>
            行情服务器连接对象,对象建立后请先调用setVersion方法设置版本号以确定数据解析方式，否则默认以老版本方式解析数据
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.client">
            <summary>
            客户端与服务器的连接对象
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.serverIp">
            <summary>
            服务器Ip地址
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.serverPort">
            <summary>
            服务器端口号
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.ServerWaitReceivedDataQueue">
            <summary>
            等待处理的从服务器接收到的数据队列
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.isDoing">
            <summary>
            是否正在处理中
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.isWriteLog">
            <summary>
            是否写log
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.logFileName">
            <summary>
            log文件名称
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.logLevel">
            <summary>
            log级别
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.isCompress">
            <summary>
            是否老版本历史行情数据需要压缩
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.reconnectFlag">
            <summary>
            是否需要重连（默认不重连）
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.reconnectStepTime">
            <summary>
            重连时间间隔（单位毫秒，默认10秒）
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.reconnectStepMinTime">
            <summary>
            最小重连时间间隔（单位毫秒，默认1秒）
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.reconnectStepLongTime">
            <summary>
            10次重连仍然失败后的重连时间间隔（单位毫秒，默认30秒）
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.reconnectedNumber">
            <summary>
            已经重连了的次数，超过一定次数重连时间间隔将延长
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.isOnReconnecting">
            <summary>
            是否正在重连中
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.needReconnectFlag">
            <summary>
            是否还要重连，连上了就不要重连了
            </summary>
        </member>
        <member name="F:CommonClassLib.ClientConnectionMarketBase.reconnectBeginDateTime">
            <summary>
            重连开始时间
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.#ctor(System.String,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            初始化
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.#ctor(System.String,System.Int32,System.Boolean,System.Boolean,System.Int32,System.String)">
            <summary>
            初始化
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.shutdown">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.stop">
            <summary>
            停止
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.setSize(System.Int32)">
            <summary>
            必须设置版本号以后再调用
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.setVersion(System.Int32)">
            <summary>
            设置通信版本号，同时根据版本号设置解析对象
            </summary>
            <param name="version"></param>
        </member>
        <member name="P:CommonClassLib.ClientConnectionMarketBase.connectedFlag">
            <summary>
            取得当前连接状态（true：已连接；false：连接断开）
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.ReconnectRightNow">
            <summary>
            立即重连
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.isEndReconnectStepTime">
            <summary>
            是否已经达到重连时间间隔
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.ReConnect">
            <summary>
            重连
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.Connect">
            <summary>
            开始与服务器进行连接
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.ServerConnected">
            <summary>
            服务器连接成功后的处理，要实现自己的逻辑请重载这个方法
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.ServerDisconnected">
            <summary>
            服务器连接断开后的处理，要实现自己的逻辑请重载这个方法
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.doReconnectTask">
            <summary>
            执行可取消的重连任务
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.sendData(System.String)">
            <summary>
            向服务器发送数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.sendData(System.String,System.Boolean,System.Boolean)">
            <summary>
            向服务器发送数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.sendData(CommonClassLib.NetInfo)">
            <summary>
            向服务器发送数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.sendData(CommonClassLib.NetInfo,System.Boolean,System.Boolean)">
            <summary>
            向服务器发送数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.doReceivedData">
            <summary>
            接收数据的处理
            </summary>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.doOneReceivedData(System.String)">
            <summary>
            处理一条接收到的数据，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.OnReceivedWholeData(HPSocketCS.TcpClient,HPSocketCS.InfoEventData)">
            <summary>
            客户端接收到服务器发送的一个完整的数据
            </summary>
            <param name="sender"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.OnPrepareConnect(HPSocketCS.TcpClient,System.UInt32)">
            <summary>
            准备连接返回事件
            </summary>
            <param name="sender"></param>
            <param name="socket"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.OnConnect(HPSocketCS.TcpClient,System.IntPtr)">
            <summary>
            连接成功返回事件
            </summary>
            <param name="sender"></param>
            <param name="pClient"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.OnSend(HPSocketCS.TcpClient,System.IntPtr,System.Int32)">
            <summary>
            客户端向服务器发送数据成功返回事件，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="sender"></param>
            <param name="pData"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.OnReceive(HPSocketCS.TcpClient,System.IntPtr,System.Int32)">
            <summary>
            客户端接收数据成功返回事件
            </summary>
            <param name="sender"></param>
            <param name="pData"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.OnClose(HPSocketCS.TcpClient)">
            <summary>
            连接断开返回事件
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="M:CommonClassLib.ClientConnectionMarketBase.OnError(HPSocketCS.TcpClient,HPSocketCS.SocketOperation,System.Int32)">
            <summary>
            连接返回错误消息，要实现自己的逻辑请重载这个方法
            </summary>
            <param name="sender"></param>
            <param name="enOperation"></param>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="T:CommonClassLib.ContractStockHK">
            <summary>
            可用港股合约请求信息类
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FExchangeNo">
            <summary>
            交易所编号 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FExchangeName">
            <summary>
            交易所名称 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FCommodityNo">
            <summary>
            商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FCommodityName">
            <summary>
            商品名 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FCommodityType">
            <summary>
            商品类别 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FCurrencyNo">
            <summary>
            货币编号 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FCurrencyName">
            <summary>
            货币名称 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FProductDot">
             <summary>
            点值（一个最小跳点的价值）   
             </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FUpperTick">
            <summary>
            最小变动单位 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FPrice">
            <summary>
            上日结算价 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FTradeMonth">
            <summary>
            交易月 (yyyyMM)/交割日 (yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FDotNum">
            <summary>
            行情小数点位数
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FLowerTick">
            <summary>
            进阶单位
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FDotNum_Carry">
            <summary>
            调期小数点位数
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FUpperTick_Carry">
            <summary>
            调期最小变动单位
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FFirstNoticeDay">
            <summary>
            首次通知日 (yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FFreezenPercent">
            <summary>
            冻结保证金百分比 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FFreezenMoney">
            <summary>
            冻结保证金固定值 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FFeeMoney">
            <summary>
            固定手续费 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FFeePercent">
            <summary>
            百分比手续费 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FPriceStrike">
            <summary>
            现货商品昨结算价 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FProductDotStrike">
             <summary>
            现货商品点值  
             </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FUpperTickStrike">
            <summary>
            现货商品最小变动单位 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FLastTradeDay">
            <summary>
            最后交易日 (yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FLastUpdateDay">
            <summary>
            最后更新日 (yyyyMMdd)
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FCriticalPrice">
            <summary>
            期权临界价格 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FCriticalMinChangedPrice">
            <summary>
            期权临界价格以下的最小跳点 
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FExchange2">
            <summary>
            实际交易所(CME细分成3个交易所:CME,CME_COMEX,CME_NYMEX)
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FOptionType">
            <summary>
            期权类型(R：看涨；F：看跌)
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FOptionMonth">
            <summary>
            期权年月(yyyyMM)
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FOptionStrikePrice">
            <summary>
            期权执行价格
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FOptionCommodityNo">
            <summary>
            期权对应期货商品编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FOptionContractNo">
            <summary>
            期权对应期货合约编号
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FMortgagePercent">
            <summary>
            按揭价值百分比
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FUpperTickCode">
            <summary>
            最小变动单位代码
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FLotSize">
            <summary>
            最小批量
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FFlatTime">
            <summary>
            平仓时间标志(控制T+1：0代表T+0，可以当天卖出平仓；1代表T+1，必须隔天卖出平仓；N代表T+N)
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.CommodityFNameEN">
            <summary>
            商品名（英文）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FCanSell">
            <summary>
            是否支持卖空（0或空：不可以；1：可以 mantis6868）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FSellRate">
            <summary>
            卖空时的按金比例（例：0.5 mantis6868）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FSellMax">
            <summary>
            卖空持仓上限额（mantis8374）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FStrikeRate">
            <summary>
            换股比率，表示一份窝轮牛熊証，相当于多少正股（mantis4479）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FStrikePrice">
            <summary>
            行使价（mantis4479）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FReceivePrice">
            <summary>
            收回价（mantis4479）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FExpireDate">
            <summary>
            到期日（yyyy-MM-dd mantis4479）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FSellRateKeep">
            <summary>
            卖空时的维持按金比例（例：0.5 mantis6868）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FStrikeCommodityNo">
            <summary>
            涡轮牛熊证对应正股编号（mantis4479）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FCallPutFlag">
            <summary>
            涡轮牛熊证的涨跌标志(C:涨；P:跌)（mantis3559）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FPublisher">
            <summary>
            涡轮牛熊证的发行人（mantis3559）
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FISINCode">
            <summary>
            商品代码唯一标识
            </summary>
        </member>
        <member name="P:CommonClassLib.ContractStockHK.FListDay">
            <summary>
            上市日期
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
